{"ast":null,"code":"export default class MemoryInfo {\n  constructor(memoryInfo) {\n    if (memoryInfo != null) {\n      this._jsHeapSizeLimit = memoryInfo.jsHeapSizeLimit;\n      this._totalJSHeapSize = memoryInfo.totalJSHeapSize;\n      this._usedJSHeapSize = memoryInfo.usedJSHeapSize;\n    }\n  }\n  get jsHeapSizeLimit() {\n    return this._jsHeapSizeLimit;\n  }\n  get totalJSHeapSize() {\n    return this._totalJSHeapSize;\n  }\n  get usedJSHeapSize() {\n    return this._usedJSHeapSize;\n  }\n}","map":{"version":3,"names":["MemoryInfo","constructor","memoryInfo","_jsHeapSizeLimit","jsHeapSizeLimit","_totalJSHeapSize","totalJSHeapSize","_usedJSHeapSize","usedJSHeapSize"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/src/private/webapis/performance/MemoryInfo.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n * @oncall react_native\n */\n\n// flowlint unsafe-getters-setters:off\n\ntype MemoryInfoLike = {\n  jsHeapSizeLimit: ?number,\n  totalJSHeapSize: ?number,\n  usedJSHeapSize: ?number,\n};\n\n// Read-only object with JS memory information. This is returned by the performance.memory API.\nexport default class MemoryInfo {\n  _jsHeapSizeLimit: ?number;\n  _totalJSHeapSize: ?number;\n  _usedJSHeapSize: ?number;\n\n  constructor(memoryInfo: ?MemoryInfoLike) {\n    if (memoryInfo != null) {\n      this._jsHeapSizeLimit = memoryInfo.jsHeapSizeLimit;\n      this._totalJSHeapSize = memoryInfo.totalJSHeapSize;\n      this._usedJSHeapSize = memoryInfo.usedJSHeapSize;\n    }\n  }\n\n  /**\n   * The maximum size of the heap, in bytes, that is available to the context\n   */\n  get jsHeapSizeLimit(): ?number {\n    return this._jsHeapSizeLimit;\n  }\n\n  /**\n   * The total allocated heap size, in bytes\n   */\n  get totalJSHeapSize(): ?number {\n    return this._totalJSHeapSize;\n  }\n\n  /**\n   * The currently active segment of JS heap, in bytes.\n   */\n  get usedJSHeapSize(): ?number {\n    return this._usedJSHeapSize;\n  }\n}\n"],"mappings":"AAoBA,eAAe,MAAMA,UAAU,CAAC;EAK9BC,WAAWA,CAACC,UAA2B,EAAE;IACvC,IAAIA,UAAU,IAAI,IAAI,EAAE;MACtB,IAAI,CAACC,gBAAgB,GAAGD,UAAU,CAACE,eAAe;MAClD,IAAI,CAACC,gBAAgB,GAAGH,UAAU,CAACI,eAAe;MAClD,IAAI,CAACC,eAAe,GAAGL,UAAU,CAACM,cAAc;IAClD;EACF;EAKA,IAAIJ,eAAeA,CAAA,EAAY;IAC7B,OAAO,IAAI,CAACD,gBAAgB;EAC9B;EAKA,IAAIG,eAAeA,CAAA,EAAY;IAC7B,OAAO,IAAI,CAACD,gBAAgB;EAC9B;EAKA,IAAIG,cAAcA,CAAA,EAAY;IAC5B,OAAO,IAAI,CAACD,eAAe;EAC7B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}