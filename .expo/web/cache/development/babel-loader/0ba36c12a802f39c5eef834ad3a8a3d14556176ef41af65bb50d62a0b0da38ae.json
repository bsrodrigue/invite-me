{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport createMultiStyleIconSet from './create-multi-style-icon-set';\nconst FA5Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand'\n};\nfunction createFA5iconSet(glyphMap, metadata = {}, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome5${pro ? 'Pro' : 'Free'}`;\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n    return 'regular';\n  }\n  function glyphValidator(glyph, style) {\n    const family = style === 'brand' ? 'brands' : style;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n  function createFontAwesomeStyle(style, fontWeight, family = fontFamily) {\n    let styleName = style;\n    let fontFile = `FontAwesome5_${pro ? `Pro_${styleName}` : styleName}.ttf`;\n    if (styleName === 'Brands') {\n      styleName = 'Regular';\n      fontFile = 'FontAwesome5_Brands.ttf';\n    }\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight\n        },\n        default: {}\n      }),\n      glyphMap\n    };\n  }\n  const brandIcons = createFontAwesomeStyle('Brands', '400', 'FontAwesome5Brands');\n  const lightIcons = createFontAwesomeStyle('Light', '300');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '900');\n  const Icon = createMultiStyleIconSet({\n    brand: brandIcons,\n    light: lightIcons,\n    regular: regularIcons,\n    solid: solidIcons\n  }, {\n    defaultStyle: 'regular',\n    fallbackFamily,\n    glyphValidator\n  });\n  return Icon;\n}\nexport { createFA5iconSet, FA5Style };","map":{"version":3,"names":["createMultiStyleIconSet","FA5Style","regular","light","solid","brand","createFA5iconSet","glyphMap","metadata","pro","metadataKeys","Object","keys","fontFamily","fallbackFamily","glyph","i","length","family","indexOf","glyphValidator","style","createFontAwesomeStyle","fontWeight","styleName","fontFile","fontStyle","Platform","select","ios","default","brandIcons","lightIcons","regularIcons","solidIcons","Icon","defaultStyle"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-vector-icons/lib/create-icon-set-from-fontawesome5.js"],"sourcesContent":["import { Platform } from 'react-native';\nimport createMultiStyleIconSet from './create-multi-style-icon-set';\n\nconst FA5Style = {\n  regular: 'regular',\n  light: 'light',\n  solid: 'solid',\n  brand: 'brand',\n};\n\nfunction createFA5iconSet(glyphMap, metadata = {}, pro = false) {\n  const metadataKeys = Object.keys(metadata);\n  const fontFamily = `FontAwesome5${pro ? 'Pro' : 'Free'}`;\n\n  function fallbackFamily(glyph) {\n    for (let i = 0; i < metadataKeys.length; i += 1) {\n      const family = metadataKeys[i];\n      if (metadata[family].indexOf(glyph) !== -1) {\n        return family === 'brands' ? 'brand' : family;\n      }\n    }\n\n    return 'regular';\n  }\n\n  function glyphValidator(glyph, style) {\n    const family = style === 'brand' ? 'brands' : style;\n    if (metadataKeys.indexOf(family) === -1) return false;\n    return metadata[family].indexOf(glyph) !== -1;\n  }\n\n  function createFontAwesomeStyle(style, fontWeight, family = fontFamily) {\n    let styleName = style;\n    let fontFile = `FontAwesome5_${pro ? `Pro_${styleName}` : styleName}.ttf`;\n\n    if (styleName === 'Brands') {\n      styleName = 'Regular';\n      fontFile = 'FontAwesome5_Brands.ttf';\n    }\n\n    return {\n      fontFamily: `${family}-${styleName}`,\n      fontFile,\n      fontStyle: Platform.select({\n        ios: {\n          fontWeight,\n        },\n        default: {},\n      }),\n      glyphMap,\n    };\n  }\n\n  const brandIcons = createFontAwesomeStyle(\n    'Brands',\n    '400',\n    'FontAwesome5Brands'\n  );\n  const lightIcons = createFontAwesomeStyle('Light', '300');\n  const regularIcons = createFontAwesomeStyle('Regular', '400');\n  const solidIcons = createFontAwesomeStyle('Solid', '900');\n  const Icon = createMultiStyleIconSet(\n    {\n      brand: brandIcons,\n      light: lightIcons,\n      regular: regularIcons,\n      solid: solidIcons,\n    },\n    {\n      defaultStyle: 'regular',\n      fallbackFamily,\n      glyphValidator,\n    }\n  );\n\n  return Icon;\n}\n\nexport { createFA5iconSet, FA5Style };\n"],"mappings":";AACA,OAAOA,uBAAuB,MAAM,+BAA+B;AAEnE,MAAMC,QAAQ,GAAG;EACfC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE;AACT,CAAC;AAED,SAASC,gBAAgBA,CAACC,QAAQ,EAAEC,QAAQ,GAAG,CAAC,CAAC,EAAEC,GAAG,GAAG,KAAK,EAAE;EAC9D,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACJ,QAAQ,CAAC;EAC1C,MAAMK,UAAU,GAAG,eAAeJ,GAAG,GAAG,KAAK,GAAG,MAAM,EAAE;EAExD,SAASK,cAAcA,CAACC,KAAK,EAAE;IAC7B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,YAAY,CAACO,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MAC/C,MAAME,MAAM,GAAGR,YAAY,CAACM,CAAC,CAAC;MAC9B,IAAIR,QAAQ,CAACU,MAAM,CAAC,CAACC,OAAO,CAACJ,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;QAC1C,OAAOG,MAAM,KAAK,QAAQ,GAAG,OAAO,GAAGA,MAAM;MAC/C;IACF;IAEA,OAAO,SAAS;EAClB;EAEA,SAASE,cAAcA,CAACL,KAAK,EAAEM,KAAK,EAAE;IACpC,MAAMH,MAAM,GAAGG,KAAK,KAAK,OAAO,GAAG,QAAQ,GAAGA,KAAK;IACnD,IAAIX,YAAY,CAACS,OAAO,CAACD,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK;IACrD,OAAOV,QAAQ,CAACU,MAAM,CAAC,CAACC,OAAO,CAACJ,KAAK,CAAC,KAAK,CAAC,CAAC;EAC/C;EAEA,SAASO,sBAAsBA,CAACD,KAAK,EAAEE,UAAU,EAAEL,MAAM,GAAGL,UAAU,EAAE;IACtE,IAAIW,SAAS,GAAGH,KAAK;IACrB,IAAII,QAAQ,GAAG,gBAAgBhB,GAAG,GAAG,OAAOe,SAAS,EAAE,GAAGA,SAAS,MAAM;IAEzE,IAAIA,SAAS,KAAK,QAAQ,EAAE;MAC1BA,SAAS,GAAG,SAAS;MACrBC,QAAQ,GAAG,yBAAyB;IACtC;IAEA,OAAO;MACLZ,UAAU,EAAE,GAAGK,MAAM,IAAIM,SAAS,EAAE;MACpCC,QAAQ;MACRC,SAAS,EAAEC,QAAQ,CAACC,MAAM,CAAC;QACzBC,GAAG,EAAE;UACHN;QACF,CAAC;QACDO,OAAO,EAAE,CAAC;MACZ,CAAC,CAAC;MACFvB;IACF,CAAC;EACH;EAEA,MAAMwB,UAAU,GAAGT,sBAAsB,CACvC,QAAQ,EACR,KAAK,EACL,oBACF,CAAC;EACD,MAAMU,UAAU,GAAGV,sBAAsB,CAAC,OAAO,EAAE,KAAK,CAAC;EACzD,MAAMW,YAAY,GAAGX,sBAAsB,CAAC,SAAS,EAAE,KAAK,CAAC;EAC7D,MAAMY,UAAU,GAAGZ,sBAAsB,CAAC,OAAO,EAAE,KAAK,CAAC;EACzD,MAAMa,IAAI,GAAGnC,uBAAuB,CAClC;IACEK,KAAK,EAAE0B,UAAU;IACjB5B,KAAK,EAAE6B,UAAU;IACjB9B,OAAO,EAAE+B,YAAY;IACrB7B,KAAK,EAAE8B;EACT,CAAC,EACD;IACEE,YAAY,EAAE,SAAS;IACvBtB,cAAc;IACdM;EACF,CACF,CAAC;EAED,OAAOe,IAAI;AACb;AAEA,SAAS7B,gBAAgB,EAAEL,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}