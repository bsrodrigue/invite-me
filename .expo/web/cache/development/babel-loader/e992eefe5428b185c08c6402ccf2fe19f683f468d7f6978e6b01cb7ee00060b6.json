{"ast":null,"code":"'use strict';\n\nconst invariant = require('invariant');\nfunction processAspectRatio(aspectRatio) {\n  if (typeof aspectRatio === 'number') {\n    return aspectRatio;\n  }\n  if (typeof aspectRatio !== 'string') {\n    if (__DEV__) {\n      invariant(!aspectRatio, 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n    }\n    return;\n  }\n  const matches = aspectRatio.split('/').map(s => s.trim());\n  if (matches.includes('auto')) {\n    if (__DEV__) {\n      invariant(matches.length, 'aspectRatio does not support `auto <ratio>`. You passed: %s', aspectRatio);\n    }\n    return;\n  }\n  const hasNonNumericValues = matches.some(n => Number.isNaN(Number(n)));\n  if (__DEV__) {\n    invariant(!hasNonNumericValues && (matches.length === 1 || matches.length === 2), 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n  }\n  if (hasNonNumericValues) {\n    return;\n  }\n  if (matches.length === 2) {\n    return Number(matches[0]) / Number(matches[1]);\n  }\n  return Number(matches[0]);\n}\nmodule.exports = processAspectRatio;","map":{"version":3,"names":["invariant","require","processAspectRatio","aspectRatio","__DEV__","matches","split","map","s","trim","includes","length","hasNonNumericValues","some","n","Number","isNaN","module","exports"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/StyleSheet/processAspectRatio.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nfunction processAspectRatio(aspectRatio?: number | string): ?number {\n  if (typeof aspectRatio === 'number') {\n    return aspectRatio;\n  }\n  if (typeof aspectRatio !== 'string') {\n    if (__DEV__) {\n      invariant(\n        !aspectRatio,\n        'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s',\n        aspectRatio,\n      );\n    }\n    return;\n  }\n\n  const matches = aspectRatio.split('/').map(s => s.trim());\n\n  if (matches.includes('auto')) {\n    if (__DEV__) {\n      invariant(\n        matches.length,\n        'aspectRatio does not support `auto <ratio>`. You passed: %s',\n        aspectRatio,\n      );\n    }\n    return;\n  }\n\n  const hasNonNumericValues = matches.some(n => Number.isNaN(Number(n)));\n  if (__DEV__) {\n    invariant(\n      !hasNonNumericValues && (matches.length === 1 || matches.length === 2),\n      'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s',\n      aspectRatio,\n    );\n  }\n\n  if (hasNonNumericValues) {\n    return;\n  }\n\n  if (matches.length === 2) {\n    return Number(matches[0]) / Number(matches[1]);\n  }\n\n  return Number(matches[0]);\n}\n\nmodule.exports = processAspectRatio;\n"],"mappings":"AAUA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AAEtC,SAASC,kBAAkBA,CAACC,WAA6B,EAAW;EAClE,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;IACnC,OAAOA,WAAW;EACpB;EACA,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;IACnC,IAAIC,OAAO,EAAE;MACXJ,SAAS,CACP,CAACG,WAAW,EACZ,+EAA+E,EAC/EA,WACF,CAAC;IACH;IACA;EACF;EAEA,MAAME,OAAO,GAAGF,WAAW,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EAEzD,IAAIJ,OAAO,CAACK,QAAQ,CAAC,MAAM,CAAC,EAAE;IAC5B,IAAIN,OAAO,EAAE;MACXJ,SAAS,CACPK,OAAO,CAACM,MAAM,EACd,6DAA6D,EAC7DR,WACF,CAAC;IACH;IACA;EACF;EAEA,MAAMS,mBAAmB,GAAGP,OAAO,CAACQ,IAAI,CAACC,CAAC,IAAIC,MAAM,CAACC,KAAK,CAACD,MAAM,CAACD,CAAC,CAAC,CAAC,CAAC;EACtE,IAAIV,OAAO,EAAE;IACXJ,SAAS,CACP,CAACY,mBAAmB,KAAKP,OAAO,CAACM,MAAM,KAAK,CAAC,IAAIN,OAAO,CAACM,MAAM,KAAK,CAAC,CAAC,EACtE,+EAA+E,EAC/ER,WACF,CAAC;EACH;EAEA,IAAIS,mBAAmB,EAAE;IACvB;EACF;EAEA,IAAIP,OAAO,CAACM,MAAM,KAAK,CAAC,EAAE;IACxB,OAAOI,MAAM,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGU,MAAM,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC;EAChD;EAEA,OAAOU,MAAM,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC;AAC3B;AAEAY,MAAM,CAACC,OAAO,GAAGhB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}