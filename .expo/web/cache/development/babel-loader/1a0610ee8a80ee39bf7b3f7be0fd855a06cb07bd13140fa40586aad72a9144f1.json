{"ast":null,"code":"import NativeBlobModule from './NativeBlobModule';\nlet BLOB_URL_PREFIX = null;\nif (NativeBlobModule && typeof NativeBlobModule.getConstants().BLOB_URI_SCHEME === 'string') {\n  const constants = NativeBlobModule.getConstants();\n  BLOB_URL_PREFIX = constants.BLOB_URI_SCHEME + ':';\n  if (typeof constants.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += `//${constants.BLOB_URI_HOST}/`;\n  }\n}\nexport class URLSearchParams {\n  _searchParams = [];\n  constructor(params) {\n    if (typeof params === 'object') {\n      Object.keys(params).forEach(key => this.append(key, params[key]));\n    }\n  }\n  append(key, value) {\n    this._searchParams.push([key, value]);\n  }\n  delete(name) {\n    throw new Error('URLSearchParams.delete is not implemented');\n  }\n  get(name) {\n    throw new Error('URLSearchParams.get is not implemented');\n  }\n  getAll(name) {\n    throw new Error('URLSearchParams.getAll is not implemented');\n  }\n  has(name) {\n    throw new Error('URLSearchParams.has is not implemented');\n  }\n  set(name, value) {\n    throw new Error('URLSearchParams.set is not implemented');\n  }\n  sort() {\n    throw new Error('URLSearchParams.sort is not implemented');\n  }\n  [Symbol.iterator]() {\n    return this._searchParams[Symbol.iterator]();\n  }\n  toString() {\n    if (this._searchParams.length === 0) {\n      return '';\n    }\n    const last = this._searchParams.length - 1;\n    return this._searchParams.reduce((acc, curr, index) => {\n      return acc + encodeURIComponent(curr[0]) + '=' + encodeURIComponent(curr[1]) + (index === last ? '' : '&');\n    }, '');\n  }\n}\nfunction validateBaseUrl(url) {\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)*(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/.test(url);\n}\nexport class URL {\n  _searchParamsInstance = null;\n  static createObjectURL(blob) {\n    if (BLOB_URL_PREFIX === null) {\n      throw new Error('Cannot create URL for blob!');\n    }\n    return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${blob.data.offset}&size=${blob.size}`;\n  }\n  static revokeObjectURL(url) {}\n  constructor(url, base) {\n    let baseUrl = null;\n    if (!base || validateBaseUrl(url)) {\n      this._url = url;\n      if (!this._url.endsWith('/')) {\n        this._url += '/';\n      }\n    } else {\n      if (typeof base === 'string') {\n        baseUrl = base;\n        if (!validateBaseUrl(baseUrl)) {\n          throw new TypeError(`Invalid base URL: ${baseUrl}`);\n        }\n      } else {\n        baseUrl = base.toString();\n      }\n      if (baseUrl.endsWith('/')) {\n        baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n      }\n      if (!url.startsWith('/')) {\n        url = `/${url}`;\n      }\n      if (baseUrl.endsWith(url)) {\n        url = '';\n      }\n      this._url = `${baseUrl}${url}`;\n    }\n  }\n  get hash() {\n    throw new Error('URL.hash is not implemented');\n  }\n  get host() {\n    throw new Error('URL.host is not implemented');\n  }\n  get hostname() {\n    throw new Error('URL.hostname is not implemented');\n  }\n  get href() {\n    return this.toString();\n  }\n  get origin() {\n    throw new Error('URL.origin is not implemented');\n  }\n  get password() {\n    throw new Error('URL.password is not implemented');\n  }\n  get pathname() {\n    throw new Error('URL.pathname not implemented');\n  }\n  get port() {\n    throw new Error('URL.port is not implemented');\n  }\n  get protocol() {\n    throw new Error('URL.protocol is not implemented');\n  }\n  get search() {\n    throw new Error('URL.search is not implemented');\n  }\n  get searchParams() {\n    if (this._searchParamsInstance == null) {\n      this._searchParamsInstance = new URLSearchParams();\n    }\n    return this._searchParamsInstance;\n  }\n  toJSON() {\n    return this.toString();\n  }\n  toString() {\n    if (this._searchParamsInstance === null) {\n      return this._url;\n    }\n    const instanceString = this._searchParamsInstance.toString();\n    const separator = this._url.indexOf('?') > -1 ? '&' : '?';\n    return this._url + separator + instanceString;\n  }\n  get username() {\n    throw new Error('URL.username is not implemented');\n  }\n}","map":{"version":3,"names":["NativeBlobModule","BLOB_URL_PREFIX","getConstants","BLOB_URI_SCHEME","constants","BLOB_URI_HOST","URLSearchParams","_searchParams","constructor","params","Object","keys","forEach","key","append","value","push","delete","name","Error","get","getAll","has","set","sort","Symbol","iterator","toString","length","last","reduce","acc","curr","index","encodeURIComponent","validateBaseUrl","url","test","URL","_searchParamsInstance","createObjectURL","blob","data","blobId","offset","size","revokeObjectURL","base","baseUrl","_url","endsWith","TypeError","slice","startsWith","hash","host","hostname","href","origin","password","pathname","port","protocol","search","searchParams","toJSON","instanceString","separator","indexOf","username"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Blob/URL.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type Blob from './Blob';\n\nimport NativeBlobModule from './NativeBlobModule';\n\nlet BLOB_URL_PREFIX = null;\n\nif (\n  NativeBlobModule &&\n  typeof NativeBlobModule.getConstants().BLOB_URI_SCHEME === 'string'\n) {\n  const constants = NativeBlobModule.getConstants();\n  // $FlowFixMe[incompatible-type] asserted above\n  // $FlowFixMe[unsafe-addition]\n  BLOB_URL_PREFIX = constants.BLOB_URI_SCHEME + ':';\n  if (typeof constants.BLOB_URI_HOST === 'string') {\n    BLOB_URL_PREFIX += `//${constants.BLOB_URI_HOST}/`;\n  }\n}\n\n/**\n * To allow Blobs be accessed via `content://` URIs,\n * you need to register `BlobProvider` as a ContentProvider in your app's `AndroidManifest.xml`:\n *\n * ```xml\n * <manifest>\n *   <application>\n *     <provider\n *       android:name=\"com.facebook.react.modules.blob.BlobProvider\"\n *       android:authorities=\"@string/blob_provider_authority\"\n *       android:exported=\"false\"\n *     />\n *   </application>\n * </manifest>\n * ```\n * And then define the `blob_provider_authority` string in `res/values/strings.xml`.\n * Use a dotted name that's entirely unique to your app:\n *\n * ```xml\n * <resources>\n *   <string name=\"blob_provider_authority\">your.app.package.blobs</string>\n * </resources>\n * ```\n */\n\n// Small subset from whatwg-url: https://github.com/jsdom/whatwg-url/tree/master/src\n// The reference code bloat comes from Unicode issues with URLs, so those won't work here.\nexport class URLSearchParams {\n  _searchParams: Array<Array<string>> = [];\n\n  constructor(params: any) {\n    if (typeof params === 'object') {\n      Object.keys(params).forEach(key => this.append(key, params[key]));\n    }\n  }\n\n  append(key: string, value: string): void {\n    this._searchParams.push([key, value]);\n  }\n\n  delete(name: string): void {\n    throw new Error('URLSearchParams.delete is not implemented');\n  }\n\n  get(name: string): void {\n    throw new Error('URLSearchParams.get is not implemented');\n  }\n\n  getAll(name: string): void {\n    throw new Error('URLSearchParams.getAll is not implemented');\n  }\n\n  has(name: string): void {\n    throw new Error('URLSearchParams.has is not implemented');\n  }\n\n  set(name: string, value: string): void {\n    throw new Error('URLSearchParams.set is not implemented');\n  }\n\n  sort(): void {\n    throw new Error('URLSearchParams.sort is not implemented');\n  }\n\n  // $FlowFixMe[unsupported-syntax]\n  // $FlowFixMe[missing-local-annot]\n  [Symbol.iterator]() {\n    return this._searchParams[Symbol.iterator]();\n  }\n\n  toString(): string {\n    if (this._searchParams.length === 0) {\n      return '';\n    }\n    const last = this._searchParams.length - 1;\n    return this._searchParams.reduce((acc, curr, index) => {\n      return (\n        acc +\n        encodeURIComponent(curr[0]) +\n        '=' +\n        encodeURIComponent(curr[1]) +\n        (index === last ? '' : '&')\n      );\n    }, '');\n  }\n}\n\nfunction validateBaseUrl(url: string) {\n  // from this MIT-licensed gist: https://gist.github.com/dperini/729294\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)*(?:[a-z\\u00a1-\\uffff]{2,}\\.?))(?::\\d{2,5})?(?:[/?#]\\S*)?$/.test(\n    url,\n  );\n}\n\nexport class URL {\n  _url: string;\n  _searchParamsInstance: ?URLSearchParams = null;\n\n  static createObjectURL(blob: Blob): string {\n    if (BLOB_URL_PREFIX === null) {\n      throw new Error('Cannot create URL for blob!');\n    }\n    return `${BLOB_URL_PREFIX}${blob.data.blobId}?offset=${blob.data.offset}&size=${blob.size}`;\n  }\n\n  static revokeObjectURL(url: string) {\n    // Do nothing.\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  constructor(url: string, base: string | URL) {\n    let baseUrl = null;\n    if (!base || validateBaseUrl(url)) {\n      this._url = url;\n      if (!this._url.endsWith('/')) {\n        this._url += '/';\n      }\n    } else {\n      if (typeof base === 'string') {\n        baseUrl = base;\n        if (!validateBaseUrl(baseUrl)) {\n          throw new TypeError(`Invalid base URL: ${baseUrl}`);\n        }\n      } else {\n        baseUrl = base.toString();\n      }\n      if (baseUrl.endsWith('/')) {\n        baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n      }\n      if (!url.startsWith('/')) {\n        url = `/${url}`;\n      }\n      if (baseUrl.endsWith(url)) {\n        url = '';\n      }\n      this._url = `${baseUrl}${url}`;\n    }\n  }\n\n  get hash(): string {\n    throw new Error('URL.hash is not implemented');\n  }\n\n  get host(): string {\n    throw new Error('URL.host is not implemented');\n  }\n\n  get hostname(): string {\n    throw new Error('URL.hostname is not implemented');\n  }\n\n  get href(): string {\n    return this.toString();\n  }\n\n  get origin(): string {\n    throw new Error('URL.origin is not implemented');\n  }\n\n  get password(): string {\n    throw new Error('URL.password is not implemented');\n  }\n\n  get pathname(): string {\n    throw new Error('URL.pathname not implemented');\n  }\n\n  get port(): string {\n    throw new Error('URL.port is not implemented');\n  }\n\n  get protocol(): string {\n    throw new Error('URL.protocol is not implemented');\n  }\n\n  get search(): string {\n    throw new Error('URL.search is not implemented');\n  }\n\n  get searchParams(): URLSearchParams {\n    if (this._searchParamsInstance == null) {\n      this._searchParamsInstance = new URLSearchParams();\n    }\n    return this._searchParamsInstance;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    if (this._searchParamsInstance === null) {\n      return this._url;\n    }\n    // $FlowFixMe[incompatible-use]\n    const instanceString = this._searchParamsInstance.toString();\n    const separator = this._url.indexOf('?') > -1 ? '&' : '?';\n    return this._url + separator + instanceString;\n  }\n\n  get username(): string {\n    throw new Error('URL.username is not implemented');\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}