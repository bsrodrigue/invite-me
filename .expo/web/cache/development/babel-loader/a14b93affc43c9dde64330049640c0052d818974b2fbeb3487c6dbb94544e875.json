{"ast":null,"code":"'use strict';\n\nimport normalizeColor from '../../StyleSheet/normalizeColor';\nimport { processColorObject } from '../../StyleSheet/PlatformColorValueTypes';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedValue, { flushValue } from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\nconst defaultColor = {\n  r: 0,\n  g: 0,\n  b: 0,\n  a: 1.0\n};\nfunction processColor(color) {\n  if (color === undefined || color === null) {\n    return null;\n  }\n  if (isRgbaValue(color)) {\n    return color;\n  }\n  let normalizedColor = normalizeColor(color);\n  if (normalizedColor === undefined || normalizedColor === null) {\n    return null;\n  }\n  if (typeof normalizedColor === 'object') {\n    const processedColorObj = processColorObject(normalizedColor);\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  } else if (typeof normalizedColor === 'number') {\n    const r = (normalizedColor & 0xff000000) >>> 24;\n    const g = (normalizedColor & 0x00ff0000) >>> 16;\n    const b = (normalizedColor & 0x0000ff00) >>> 8;\n    const a = (normalizedColor & 0x000000ff) / 255;\n    return {\n      r,\n      g,\n      b,\n      a\n    };\n  }\n  return null;\n}\nfunction isRgbaValue(value) {\n  return value && typeof value.r === 'number' && typeof value.g === 'number' && typeof value.b === 'number' && typeof value.a === 'number';\n}\nfunction isRgbaAnimatedValue(value) {\n  return value && value.r instanceof AnimatedValue && value.g instanceof AnimatedValue && value.b instanceof AnimatedValue && value.a instanceof AnimatedValue;\n}\nexport default class AnimatedColor extends AnimatedWithChildren {\n  _suspendCallbacks = 0;\n  constructor(valueIn, config) {\n    super();\n    let value = valueIn ?? defaultColor;\n    if (isRgbaAnimatedValue(value)) {\n      const rgbaAnimatedValue = value;\n      this.r = rgbaAnimatedValue.r;\n      this.g = rgbaAnimatedValue.g;\n      this.b = rgbaAnimatedValue.b;\n      this.a = rgbaAnimatedValue.a;\n    } else {\n      const processedColor = processColor(value) ?? defaultColor;\n      let initColor = defaultColor;\n      if (isRgbaValue(processedColor)) {\n        initColor = processedColor;\n      } else {\n        this.nativeColor = processedColor;\n      }\n      this.r = new AnimatedValue(initColor.r);\n      this.g = new AnimatedValue(initColor.g);\n      this.b = new AnimatedValue(initColor.b);\n      this.a = new AnimatedValue(initColor.a);\n    }\n    if (config?.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n  setValue(value) {\n    let shouldUpdateNodeConfig = false;\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());\n    }\n    const processedColor = processColor(value) ?? defaultColor;\n    this._withSuspendedCallbacks(() => {\n      if (isRgbaValue(processedColor)) {\n        const rgbaValue = processedColor;\n        this.r.setValue(rgbaValue.r);\n        this.g.setValue(rgbaValue.g);\n        this.b.setValue(rgbaValue.b);\n        this.a.setValue(rgbaValue.a);\n        if (this.nativeColor != null) {\n          this.nativeColor = null;\n          shouldUpdateNodeConfig = true;\n        }\n      } else {\n        const nativeColor = processedColor;\n        if (this.nativeColor !== nativeColor) {\n          this.nativeColor = nativeColor;\n          shouldUpdateNodeConfig = true;\n        }\n      }\n    });\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      if (shouldUpdateNodeConfig) {\n        NativeAnimatedAPI.updateAnimatedNodeConfig(nativeTag, this.__getNativeConfig());\n      }\n      NativeAnimatedAPI.unsetWaitingForIdentifier(nativeTag.toString());\n    } else {\n      flushValue(this);\n    }\n    this.__callListeners(this.__getValue());\n  }\n  setOffset(offset) {\n    this.r.setOffset(offset.r);\n    this.g.setOffset(offset.g);\n    this.b.setOffset(offset.b);\n    this.a.setOffset(offset.a);\n  }\n  flattenOffset() {\n    this.r.flattenOffset();\n    this.g.flattenOffset();\n    this.b.flattenOffset();\n    this.a.flattenOffset();\n  }\n  extractOffset() {\n    this.r.extractOffset();\n    this.g.extractOffset();\n    this.b.extractOffset();\n    this.a.extractOffset();\n  }\n  stopAnimation(callback) {\n    this.r.stopAnimation();\n    this.g.stopAnimation();\n    this.b.stopAnimation();\n    this.a.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n  resetAnimation(callback) {\n    this.r.resetAnimation();\n    this.g.resetAnimation();\n    this.b.resetAnimation();\n    this.a.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n  __getValue() {\n    if (this.nativeColor != null) {\n      return this.nativeColor;\n    } else {\n      return `rgba(${this.r.__getValue()}, ${this.g.__getValue()}, ${this.b.__getValue()}, ${this.a.__getValue()})`;\n    }\n  }\n  __attach() {\n    this.r.__addChild(this);\n    this.g.__addChild(this);\n    this.b.__addChild(this);\n    this.a.__addChild(this);\n    super.__attach();\n  }\n  __detach() {\n    this.r.__removeChild(this);\n    this.g.__removeChild(this);\n    this.b.__removeChild(this);\n    this.a.__removeChild(this);\n    super.__detach();\n  }\n  _withSuspendedCallbacks(callback) {\n    this._suspendCallbacks++;\n    callback();\n    this._suspendCallbacks--;\n  }\n  __callListeners(value) {\n    if (this._suspendCallbacks === 0) {\n      super.__callListeners(value);\n    }\n  }\n  __makeNative(platformConfig) {\n    this.r.__makeNative(platformConfig);\n    this.g.__makeNative(platformConfig);\n    this.b.__makeNative(platformConfig);\n    this.a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n  __getNativeConfig() {\n    return {\n      type: 'color',\n      r: this.r.__getNativeTag(),\n      g: this.g.__getNativeTag(),\n      b: this.b.__getNativeTag(),\n      a: this.a.__getNativeTag(),\n      nativeColor: this.nativeColor\n    };\n  }\n}","map":{"version":3,"names":["normalizeColor","processColorObject","NativeAnimatedHelper","AnimatedValue","flushValue","AnimatedWithChildren","NativeAnimatedAPI","API","defaultColor","r","g","b","a","processColor","color","undefined","isRgbaValue","normalizedColor","processedColorObj","value","isRgbaAnimatedValue","AnimatedColor","_suspendCallbacks","constructor","valueIn","config","rgbaAnimatedValue","processedColor","initColor","nativeColor","useNativeDriver","__makeNative","setValue","shouldUpdateNodeConfig","__isNative","nativeTag","__getNativeTag","setWaitingForIdentifier","toString","_withSuspendedCallbacks","rgbaValue","updateAnimatedNodeConfig","__getNativeConfig","unsetWaitingForIdentifier","__callListeners","__getValue","setOffset","offset","flattenOffset","extractOffset","stopAnimation","callback","resetAnimation","__attach","__addChild","__detach","__removeChild","platformConfig","type"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Animated/nodes/AnimatedColor.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {ProcessedColorValue} from '../../StyleSheet/processColor';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {NativeColorValue} from '../../StyleSheet/StyleSheetTypes';\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport normalizeColor from '../../StyleSheet/normalizeColor';\nimport {processColorObject} from '../../StyleSheet/PlatformColorValueTypes';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedValue, {flushValue} from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport type AnimatedColorConfig = $ReadOnly<{\n  useNativeDriver: boolean,\n}>;\n\ntype ColorListenerCallback = (value: ColorValue) => mixed;\n\nexport type RgbaValue = {\n  +r: number,\n  +g: number,\n  +b: number,\n  +a: number,\n  ...\n};\n\ntype RgbaAnimatedValue = {\n  +r: AnimatedValue,\n  +g: AnimatedValue,\n  +b: AnimatedValue,\n  +a: AnimatedValue,\n  ...\n};\n\nexport type InputValue = ?(RgbaValue | RgbaAnimatedValue | ColorValue);\n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\nconst defaultColor: RgbaValue = {r: 0, g: 0, b: 0, a: 1.0};\n\n/* eslint no-bitwise: 0 */\nfunction processColor(\n  color?: ?(ColorValue | RgbaValue),\n): ?(RgbaValue | NativeColorValue) {\n  if (color === undefined || color === null) {\n    return null;\n  }\n\n  if (isRgbaValue(color)) {\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    return (color: RgbaValue);\n  }\n\n  let normalizedColor: ?ProcessedColorValue = normalizeColor(\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    (color: ColorValue),\n  );\n  if (normalizedColor === undefined || normalizedColor === null) {\n    return null;\n  }\n\n  if (typeof normalizedColor === 'object') {\n    const processedColorObj: ?NativeColorValue =\n      processColorObject(normalizedColor);\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  } else if (typeof normalizedColor === 'number') {\n    const r: number = (normalizedColor & 0xff000000) >>> 24;\n    const g: number = (normalizedColor & 0x00ff0000) >>> 16;\n    const b: number = (normalizedColor & 0x0000ff00) >>> 8;\n    const a: number = (normalizedColor & 0x000000ff) / 255;\n\n    return {r, g, b, a};\n  }\n\n  return null;\n}\n\nfunction isRgbaValue(value: any): boolean {\n  return (\n    value &&\n    typeof value.r === 'number' &&\n    typeof value.g === 'number' &&\n    typeof value.b === 'number' &&\n    typeof value.a === 'number'\n  );\n}\n\nfunction isRgbaAnimatedValue(value: any): boolean {\n  return (\n    value &&\n    value.r instanceof AnimatedValue &&\n    value.g instanceof AnimatedValue &&\n    value.b instanceof AnimatedValue &&\n    value.a instanceof AnimatedValue\n  );\n}\n\nexport default class AnimatedColor extends AnimatedWithChildren {\n  r: AnimatedValue;\n  g: AnimatedValue;\n  b: AnimatedValue;\n  a: AnimatedValue;\n  nativeColor: ?NativeColorValue;\n\n  _suspendCallbacks: number = 0;\n\n  constructor(valueIn?: InputValue, config?: ?AnimatedColorConfig) {\n    super();\n\n    let value: RgbaValue | RgbaAnimatedValue | ColorValue =\n      valueIn ?? defaultColor;\n    if (isRgbaAnimatedValue(value)) {\n      // $FlowIgnore[incompatible-cast] - Type is verified above\n      const rgbaAnimatedValue: RgbaAnimatedValue = (value: RgbaAnimatedValue);\n      this.r = rgbaAnimatedValue.r;\n      this.g = rgbaAnimatedValue.g;\n      this.b = rgbaAnimatedValue.b;\n      this.a = rgbaAnimatedValue.a;\n    } else {\n      const processedColor: RgbaValue | NativeColorValue =\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        processColor((value: ColorValue | RgbaValue)) ?? defaultColor;\n      let initColor: RgbaValue = defaultColor;\n      if (isRgbaValue(processedColor)) {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        initColor = (processedColor: RgbaValue);\n      } else {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        this.nativeColor = (processedColor: NativeColorValue);\n      }\n\n      this.r = new AnimatedValue(initColor.r);\n      this.g = new AnimatedValue(initColor.g);\n      this.b = new AnimatedValue(initColor.b);\n      this.a = new AnimatedValue(initColor.a);\n    }\n\n    if (config?.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   */\n  setValue(value: RgbaValue | ColorValue): void {\n    let shouldUpdateNodeConfig = false;\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());\n    }\n\n    const processedColor: RgbaValue | NativeColorValue =\n      processColor(value) ?? defaultColor;\n    this._withSuspendedCallbacks(() => {\n      if (isRgbaValue(processedColor)) {\n        // $FlowIgnore[incompatible-type] - Type is verified above\n        const rgbaValue: RgbaValue = processedColor;\n        this.r.setValue(rgbaValue.r);\n        this.g.setValue(rgbaValue.g);\n        this.b.setValue(rgbaValue.b);\n        this.a.setValue(rgbaValue.a);\n        if (this.nativeColor != null) {\n          this.nativeColor = null;\n          shouldUpdateNodeConfig = true;\n        }\n      } else {\n        // $FlowIgnore[incompatible-type] - Type is verified above\n        const nativeColor: NativeColorValue = processedColor;\n        if (this.nativeColor !== nativeColor) {\n          this.nativeColor = nativeColor;\n          shouldUpdateNodeConfig = true;\n        }\n      }\n    });\n\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      if (shouldUpdateNodeConfig) {\n        NativeAnimatedAPI.updateAnimatedNodeConfig(\n          nativeTag,\n          this.__getNativeConfig(),\n        );\n      }\n      NativeAnimatedAPI.unsetWaitingForIdentifier(nativeTag.toString());\n    } else {\n      flushValue(this);\n    }\n\n    // $FlowFixMe[incompatible-call]\n    this.__callListeners(this.__getValue());\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   */\n  setOffset(offset: RgbaValue): void {\n    this.r.setOffset(offset.r);\n    this.g.setOffset(offset.g);\n    this.b.setOffset(offset.b);\n    this.a.setOffset(offset.a);\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   */\n  flattenOffset(): void {\n    this.r.flattenOffset();\n    this.g.flattenOffset();\n    this.b.flattenOffset();\n    this.a.flattenOffset();\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   */\n  extractOffset(): void {\n    this.r.extractOffset();\n    this.g.extractOffset();\n    this.b.extractOffset();\n    this.a.extractOffset();\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   */\n  stopAnimation(callback?: ColorListenerCallback): void {\n    this.r.stopAnimation();\n    this.g.stopAnimation();\n    this.b.stopAnimation();\n    this.a.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   */\n  resetAnimation(callback?: ColorListenerCallback): void {\n    this.r.resetAnimation();\n    this.g.resetAnimation();\n    this.b.resetAnimation();\n    this.a.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  __getValue(): ColorValue {\n    if (this.nativeColor != null) {\n      return this.nativeColor;\n    } else {\n      return `rgba(${this.r.__getValue()}, ${this.g.__getValue()}, ${this.b.__getValue()}, ${this.a.__getValue()})`;\n    }\n  }\n\n  __attach(): void {\n    this.r.__addChild(this);\n    this.g.__addChild(this);\n    this.b.__addChild(this);\n    this.a.__addChild(this);\n    super.__attach();\n  }\n\n  __detach(): void {\n    this.r.__removeChild(this);\n    this.g.__removeChild(this);\n    this.b.__removeChild(this);\n    this.a.__removeChild(this);\n    super.__detach();\n  }\n\n  _withSuspendedCallbacks(callback: () => void) {\n    this._suspendCallbacks++;\n    callback();\n    this._suspendCallbacks--;\n  }\n\n  __callListeners(value: number): void {\n    if (this._suspendCallbacks === 0) {\n      super.__callListeners(value);\n    }\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this.r.__makeNative(platformConfig);\n    this.g.__makeNative(platformConfig);\n    this.b.__makeNative(platformConfig);\n    this.a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig(): {...} {\n    return {\n      type: 'color',\n      r: this.r.__getNativeTag(),\n      g: this.g.__getNativeTag(),\n      b: this.b.__getNativeTag(),\n      a: this.a.__getNativeTag(),\n      nativeColor: this.nativeColor,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}