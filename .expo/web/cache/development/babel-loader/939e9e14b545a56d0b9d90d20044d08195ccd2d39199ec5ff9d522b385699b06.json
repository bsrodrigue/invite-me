{"ast":null,"code":"import invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar initialURL = canUseDOM ? window.location.href : '';\nclass Linking {\n  constructor() {\n    this._eventCallbacks = {};\n  }\n  _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n    var listeners = this._eventCallbacks[event];\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(listener => {\n        listener(...data);\n      });\n    }\n  }\n  addEventListener(eventType, callback) {\n    var _this = this;\n    if (!_this._eventCallbacks[eventType]) {\n      _this._eventCallbacks[eventType] = [callback];\n    }\n    _this._eventCallbacks[eventType].push(callback);\n    return {\n      remove() {\n        var callbacks = _this._eventCallbacks[eventType];\n        var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n        _this._eventCallbacks[eventType] = filteredCallbacks;\n      }\n    };\n  }\n  removeEventListener(eventType, callback) {\n    console.error(\"Linking.removeEventListener('\" + eventType + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `Linking.addEventListener`.');\n    var callbacks = this._eventCallbacks[eventType];\n    var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n    this._eventCallbacks[eventType] = filteredCallbacks;\n  }\n  canOpenURL() {\n    return Promise.resolve(true);\n  }\n  getInitialURL() {\n    return Promise.resolve(initialURL);\n  }\n  openURL(url, target) {\n    if (arguments.length === 1) {\n      target = '_blank';\n    }\n    try {\n      open(url, target);\n      this._dispatchEvent('onOpen', url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n}\nvar open = (url, target) => {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, 'noopener');\n    }\n  }\n};\nexport default new Linking();","map":{"version":3,"names":["invariant","canUseDOM","initialURL","window","location","href","Linking","constructor","_eventCallbacks","_dispatchEvent","event","_len","arguments","length","data","Array","_key","listeners","isArray","map","listener","addEventListener","eventType","callback","_this","push","remove","callbacks","filteredCallbacks","filter","c","toString","removeEventListener","console","error","canOpenURL","Promise","resolve","getInitialURL","openURL","url","target","open","e","reject","_validateURL","urlToOpen","URL","indexOf"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-web/dist/exports/Linking/index.js"],"sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport invariant from 'fbjs/lib/invariant';\nimport canUseDOM from '../../modules/canUseDom';\nvar initialURL = canUseDOM ? window.location.href : '';\nclass Linking {\n  constructor() {\n    this._eventCallbacks = {};\n  }\n  /**\n   * An object mapping of event name\n   * and all the callbacks subscribing to it\n   */\n  _dispatchEvent(event) {\n    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      data[_key - 1] = arguments[_key];\n    }\n    var listeners = this._eventCallbacks[event];\n    if (listeners != null && Array.isArray(listeners)) {\n      listeners.map(listener => {\n        listener(...data);\n      });\n    }\n  }\n\n  /**\n   * Adds a event listener for the specified event. The callback will be called when the\n   * said event is dispatched.\n   */\n  addEventListener(eventType, callback) {\n    var _this = this;\n    if (!_this._eventCallbacks[eventType]) {\n      _this._eventCallbacks[eventType] = [callback];\n    }\n    _this._eventCallbacks[eventType].push(callback);\n    return {\n      remove() {\n        var callbacks = _this._eventCallbacks[eventType];\n        var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n        _this._eventCallbacks[eventType] = filteredCallbacks;\n      }\n    };\n  }\n\n  /**\n   * Removes a previously added event listener for the specified event. The callback must\n   * be the same object as the one passed to `addEventListener`.\n   */\n  removeEventListener(eventType, callback) {\n    console.error(\"Linking.removeEventListener('\" + eventType + \"', ...): Method has been \" + 'deprecated. Please instead use `remove()` on the subscription ' + 'returned by `Linking.addEventListener`.');\n    var callbacks = this._eventCallbacks[eventType];\n    var filteredCallbacks = callbacks.filter(c => c.toString() !== callback.toString());\n    this._eventCallbacks[eventType] = filteredCallbacks;\n  }\n  canOpenURL() {\n    return Promise.resolve(true);\n  }\n  getInitialURL() {\n    return Promise.resolve(initialURL);\n  }\n\n  /**\n   * Try to open the given url in a secure fashion. The method returns a Promise object.\n   * If a target is passed (including undefined) that target will be used, otherwise '_blank'.\n   * If the url opens, the promise is resolved. If not, the promise is rejected.\n   * Dispatches the `onOpen` event if `url` is opened successfully.\n   */\n  openURL(url, target) {\n    if (arguments.length === 1) {\n      target = '_blank';\n    }\n    try {\n      open(url, target);\n      this._dispatchEvent('onOpen', url);\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  }\n  _validateURL(url) {\n    invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n    invariant(url, 'Invalid URL: cannot be empty');\n  }\n}\nvar open = (url, target) => {\n  if (canUseDOM) {\n    var urlToOpen = new URL(url, window.location).toString();\n    if (urlToOpen.indexOf('tel:') === 0) {\n      window.location = urlToOpen;\n    } else {\n      window.open(urlToOpen, target, 'noopener');\n    }\n  }\n};\nexport default new Linking();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}