{"ast":null,"code":"import NativeFrameRateLogger from './NativeFrameRateLogger';\nconst invariant = require('invariant');\nconst FrameRateLogger = {\n  setGlobalOptions: function (options) {\n    if (options.debug !== undefined) {\n      invariant(NativeFrameRateLogger, 'Trying to debug FrameRateLogger without the native module!');\n    }\n    NativeFrameRateLogger?.setGlobalOptions({\n      debug: !!options.debug\n    });\n  },\n  setContext: function (context) {\n    NativeFrameRateLogger?.setContext(context);\n  },\n  beginScroll() {\n    NativeFrameRateLogger?.beginScroll();\n  },\n  endScroll() {\n    NativeFrameRateLogger?.endScroll();\n  }\n};\nmodule.exports = FrameRateLogger;","map":{"version":3,"names":["NativeFrameRateLogger","invariant","require","FrameRateLogger","setGlobalOptions","options","debug","undefined","setContext","context","beginScroll","endScroll","module","exports"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Interaction/FrameRateLogger.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport NativeFrameRateLogger from './NativeFrameRateLogger';\n\nconst invariant = require('invariant');\n\n/**\n * Flow API for native FrameRateLogger module. If the native module is not installed, function calls\n * are just no-ops.\n *\n * Typical behavior is that `setContext` is called when a new screen is loaded (e.g. via a\n * navigation integration), and then `beginScroll` is called by `ScrollResponder` at which point the\n * native module then begins tracking frame drops. When `ScrollResponder` calls `endScroll`, the\n * native module gathers up all it's frame drop data and reports it via an analytics pipeline for\n * analysis.\n *\n * Note that `beginScroll` may be called multiple times by `ScrollResponder` - unclear if that's a\n * bug, but the native module should be robust to that.\n *\n * In the future we may add support for tracking frame drops in other types of interactions beyond\n * scrolling.\n */\nconst FrameRateLogger = {\n  /**\n   * Enable `debug` to see local logs of what's going on.\n   */\n  setGlobalOptions: function (options: {debug?: boolean, ...}) {\n    if (options.debug !== undefined) {\n      invariant(\n        NativeFrameRateLogger,\n        'Trying to debug FrameRateLogger without the native module!',\n      );\n    }\n    NativeFrameRateLogger?.setGlobalOptions({\n      debug: !!options.debug,\n    });\n  },\n\n  /**\n   * Must call `setContext` before any events can be properly tracked, which is done automatically\n   * in `AppRegistry`, but navigation is also a common place to hook in.\n   */\n  setContext: function (context: string) {\n    NativeFrameRateLogger?.setContext(context);\n  },\n\n  /**\n   * Called in `ScrollResponder` so any component that uses that module will handle this\n   * automatically.\n   */\n  beginScroll() {\n    NativeFrameRateLogger?.beginScroll();\n  },\n\n  /**\n   * Called in `ScrollResponder` so any component that uses that module will handle this\n   * automatically.\n   */\n  endScroll() {\n    NativeFrameRateLogger?.endScroll();\n  },\n};\n\nmodule.exports = FrameRateLogger;\n"],"mappings":"AAUA,OAAOA,qBAAqB,MAAM,yBAAyB;AAE3D,MAAMC,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AAkBtC,MAAMC,eAAe,GAAG;EAItBC,gBAAgB,EAAE,SAAAA,CAAUC,OAA+B,EAAE;IAC3D,IAAIA,OAAO,CAACC,KAAK,KAAKC,SAAS,EAAE;MAC/BN,SAAS,CACPD,qBAAqB,EACrB,4DACF,CAAC;IACH;IACAA,qBAAqB,EAAEI,gBAAgB,CAAC;MACtCE,KAAK,EAAE,CAAC,CAACD,OAAO,CAACC;IACnB,CAAC,CAAC;EACJ,CAAC;EAMDE,UAAU,EAAE,SAAAA,CAAUC,OAAe,EAAE;IACrCT,qBAAqB,EAAEQ,UAAU,CAACC,OAAO,CAAC;EAC5C,CAAC;EAMDC,WAAWA,CAAA,EAAG;IACZV,qBAAqB,EAAEU,WAAW,CAAC,CAAC;EACtC,CAAC;EAMDC,SAASA,CAAA,EAAG;IACVX,qBAAqB,EAAEW,SAAS,CAAC,CAAC;EACpC;AACF,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGV,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}