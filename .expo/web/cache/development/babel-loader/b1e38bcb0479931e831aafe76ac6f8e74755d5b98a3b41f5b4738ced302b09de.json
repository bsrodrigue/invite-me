{"ast":null,"code":"import * as ImagePicker from \"expo-image-picker\";\nimport { useState } from \"react\";\nimport FS from \"../lib/fs\";\nexport default function useImagePicker({\n  fileName\n}) {\n  const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n  const [imgUri, setImgUri] = useState(\"\");\n  const [imgBase64, setImgBase64] = useState(\"\");\n  const handlePermission = async () => {\n    const response = await requestPermission();\n    return response.granted;\n  };\n  const pickImage = async (aspect = [1, 1]) => {\n    if (!status.granted && !(await handlePermission())) return;\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect,\n      quality: 0.5,\n      base64: true\n    });\n    if (result.canceled) return;\n    const b64 = result.assets[0].base64;\n    const uri = fileName ? await FS.saveFile(fileName, b64) : result.assets[0].uri;\n    setImgUri(uri);\n    setImgBase64(b64);\n  };\n  return {\n    imgUri,\n    imgBase64,\n    pickImage\n  };\n}","map":{"version":3,"names":["ImagePicker","useState","FS","useImagePicker","fileName","status","requestPermission","useMediaLibraryPermissions","imgUri","setImgUri","imgBase64","setImgBase64","handlePermission","response","granted","pickImage","aspect","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","quality","base64","canceled","b64","assets","uri","saveFile"],"sources":["/home/rodo/workspace/passion/apps/muh-money/src/hooks/useImagePicker.ts"],"sourcesContent":["import * as ImagePicker from \"expo-image-picker\";\nimport { useState } from \"react\";\nimport FS from \"../lib/fs\";\n\ninterface ImagePickerProps {\n  fileName?: string;\n}\n\nexport default function useImagePicker({ fileName }: ImagePickerProps) {\n  const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n  const [imgUri, setImgUri] = useState(\"\");\n  const [imgBase64, setImgBase64] = useState(\"\");\n\n  const handlePermission = async () => {\n    const response = await requestPermission();\n    return response.granted;\n  }\n\n  const pickImage = async (aspect: [number, number] = [1, 1]) => {\n    if (!status.granted && ! await handlePermission()) return;\n\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect,\n      quality: 0.5,\n      base64: true\n    })\n\n    if (result.canceled) return;\n\n    const b64 = result.assets[0].base64;\n    const uri =\n      (fileName) ? await FS.saveFile(fileName, b64) : result.assets[0].uri;\n\n    setImgUri(uri);\n    setImgBase64(b64);\n  }\n\n  return { imgUri, imgBase64, pickImage };\n}\n"],"mappings":"AAAA,OAAO,KAAKA,WAAW,MAAM,mBAAmB;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,EAAE,MAAM,WAAW;AAM1B,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAA2B,CAAC,EAAE;EACrE,MAAM,CAACC,MAAM,EAAEC,iBAAiB,CAAC,GAAGN,WAAW,CAACO,0BAA0B,CAAC,CAAC;EAC5E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,QAAQ,GAAG,MAAMP,iBAAiB,CAAC,CAAC;IAC1C,OAAOO,QAAQ,CAACC,OAAO;EACzB,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAOC,MAAwB,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK;IAC7D,IAAI,CAACX,MAAM,CAACS,OAAO,IAAI,EAAE,MAAMF,gBAAgB,CAAC,CAAC,GAAE;IAEnD,MAAMK,MAAM,GAAG,MAAMjB,WAAW,CAACkB,uBAAuB,CAAC;MACvDC,UAAU,EAAEnB,WAAW,CAACoB,gBAAgB,CAACC,MAAM;MAC/CC,aAAa,EAAE,IAAI;MACnBN,MAAM;MACNO,OAAO,EAAE,GAAG;MACZC,MAAM,EAAE;IACV,CAAC,CAAC;IAEF,IAAIP,MAAM,CAACQ,QAAQ,EAAE;IAErB,MAAMC,GAAG,GAAGT,MAAM,CAACU,MAAM,CAAC,CAAC,CAAC,CAACH,MAAM;IACnC,MAAMI,GAAG,GACNxB,QAAQ,GAAI,MAAMF,EAAE,CAAC2B,QAAQ,CAACzB,QAAQ,EAAEsB,GAAG,CAAC,GAAGT,MAAM,CAACU,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG;IAEtEnB,SAAS,CAACmB,GAAG,CAAC;IACdjB,YAAY,CAACe,GAAG,CAAC;EACnB,CAAC;EAED,OAAO;IAAElB,MAAM;IAAEE,SAAS;IAAEK;EAAU,CAAC;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}