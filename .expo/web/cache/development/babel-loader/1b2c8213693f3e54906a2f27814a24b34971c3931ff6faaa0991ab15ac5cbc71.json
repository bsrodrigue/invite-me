{"ast":null,"code":"'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport invariant from 'invariant';\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\nlet _uniqueId = 1;\nexport default class AnimatedNode {\n  __attach() {}\n  __detach() {\n    this.removeAllListeners();\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n  __getValue() {}\n  __getAnimatedValue() {\n    return this.__getValue();\n  }\n  __addChild(child) {}\n  __removeChild(child) {}\n  __getChildren() {\n    return [];\n  }\n  constructor() {\n    this._listeners = {};\n  }\n  __makeNative(platformConfig) {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n    this._platformConfig = platformConfig;\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n  addListener(callback) {\n    const id = String(_uniqueId++);\n    this._listeners[id] = callback;\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n    return id;\n  }\n  removeListener(id) {\n    delete this._listeners[id];\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  removeAllListeners() {\n    this._listeners = {};\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n  hasListeners() {\n    return !!Object.keys(this._listeners).length;\n  }\n  _startListeningToNativeValueUpdates() {\n    if (this.__nativeAnimatedValueListener && !this.__shouldUpdateListenersForNewNativeTag) {\n      return;\n    }\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n      this._stopListeningForNativeValueUpdates();\n    }\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener = NativeAnimatedHelper.nativeEventEmitter.addListener('onAnimatedValueUpdate', data => {\n      if (data.tag !== this.__getNativeTag()) {\n        return;\n      }\n      this.__onAnimatedValueUpdateReceived(data.value);\n    });\n  }\n  __onAnimatedValueUpdateReceived(value) {\n    this.__callListeners(value);\n  }\n  __callListeners(value) {\n    for (const key in this._listeners) {\n      this._listeners[key]({\n        value\n      });\n    }\n  }\n  _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n    this.__nativeAnimatedValueListener.remove();\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  }\n  __getNativeTag() {\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(this.__isNative, 'Attempt to get native tag from node not marked as \"native\"');\n    const nativeTag = this.__nativeTag ?? NativeAnimatedHelper.generateNewNodeTag();\n    if (this.__nativeTag == null) {\n      this.__nativeTag = nativeTag;\n      const config = this.__getNativeConfig();\n      if (this._platformConfig) {\n        config.platformConfig = this._platformConfig;\n      }\n      NativeAnimatedHelper.API.createAnimatedNode(nativeTag, config);\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n    return nativeTag;\n  }\n  __getNativeConfig() {\n    throw new Error('This JS animated node type cannot be used as native animated node');\n  }\n  toJSON() {\n    return this.__getValue();\n  }\n  __getPlatformConfig() {\n    return this._platformConfig;\n  }\n  __setPlatformConfig(platformConfig) {\n    this._platformConfig = platformConfig;\n  }\n}","map":{"version":3,"names":["NativeAnimatedHelper","invariant","NativeAnimatedAPI","API","_uniqueId","AnimatedNode","__attach","__detach","removeAllListeners","__isNative","__nativeTag","dropAnimatedNode","undefined","__getValue","__getAnimatedValue","__addChild","child","__removeChild","__getChildren","constructor","_listeners","__makeNative","platformConfig","Error","_platformConfig","hasListeners","_startListeningToNativeValueUpdates","addListener","callback","id","String","removeListener","_stopListeningForNativeValueUpdates","Object","keys","length","__nativeAnimatedValueListener","__shouldUpdateListenersForNewNativeTag","startListeningToAnimatedNodeValue","__getNativeTag","nativeEventEmitter","data","tag","__onAnimatedValueUpdateReceived","value","__callListeners","key","remove","stopListeningToAnimatedNodeValue","assertNativeAnimatedModule","nativeTag","generateNewNodeTag","config","__getNativeConfig","createAnimatedNode","toJSON","__getPlatformConfig","__setPlatformConfig"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Animated/nodes/AnimatedNode.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport invariant from 'invariant';\n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\ntype ValueListenerCallback = (state: {value: number, ...}) => mixed;\n\nlet _uniqueId = 1;\n\n// Note(vjeux): this would be better as an interface but flow doesn't\n// support them yet\nexport default class AnimatedNode {\n  _listeners: {[key: string]: ValueListenerCallback, ...};\n  _platformConfig: ?PlatformConfig;\n  __nativeAnimatedValueListener: ?any;\n  __attach(): void {}\n  __detach(): void {\n    this.removeAllListeners();\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n  __getValue(): any {}\n  __getAnimatedValue(): any {\n    return this.__getValue();\n  }\n  __addChild(child: AnimatedNode) {}\n  __removeChild(child: AnimatedNode) {}\n  __getChildren(): $ReadOnlyArray<AnimatedNode> {\n    return [];\n  }\n\n  /* Methods and props used by native Animated impl */\n  __isNative: boolean;\n  __nativeTag: ?number;\n  __shouldUpdateListenersForNewNativeTag: boolean;\n\n  constructor() {\n    this._listeners = {};\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig): void {\n    if (!this.__isNative) {\n      throw new Error('This node cannot be made a \"native\" animated node');\n    }\n\n    this._platformConfig = platformConfig;\n    if (this.hasListeners()) {\n      this._startListeningToNativeValueUpdates();\n    }\n  }\n\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#addlistener\n   */\n  addListener(callback: (value: any) => mixed): string {\n    const id = String(_uniqueId++);\n    this._listeners[id] = callback;\n    if (this.__isNative) {\n      this._startListeningToNativeValueUpdates();\n    }\n    return id;\n  }\n\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#removelistener\n   */\n  removeListener(id: string): void {\n    delete this._listeners[id];\n    if (this.__isNative && !this.hasListeners()) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#removealllisteners\n   */\n  removeAllListeners(): void {\n    this._listeners = {};\n    if (this.__isNative) {\n      this._stopListeningForNativeValueUpdates();\n    }\n  }\n\n  hasListeners(): boolean {\n    return !!Object.keys(this._listeners).length;\n  }\n\n  _startListeningToNativeValueUpdates() {\n    if (\n      this.__nativeAnimatedValueListener &&\n      !this.__shouldUpdateListenersForNewNativeTag\n    ) {\n      return;\n    }\n\n    if (this.__shouldUpdateListenersForNewNativeTag) {\n      this.__shouldUpdateListenersForNewNativeTag = false;\n      this._stopListeningForNativeValueUpdates();\n    }\n\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(this.__getNativeTag());\n    this.__nativeAnimatedValueListener =\n      NativeAnimatedHelper.nativeEventEmitter.addListener(\n        'onAnimatedValueUpdate',\n        data => {\n          if (data.tag !== this.__getNativeTag()) {\n            return;\n          }\n          this.__onAnimatedValueUpdateReceived(data.value);\n        },\n      );\n  }\n\n  __onAnimatedValueUpdateReceived(value: number) {\n    this.__callListeners(value);\n  }\n\n  __callListeners(value: number): void {\n    for (const key in this._listeners) {\n      this._listeners[key]({value});\n    }\n  }\n\n  _stopListeningForNativeValueUpdates() {\n    if (!this.__nativeAnimatedValueListener) {\n      return;\n    }\n\n    this.__nativeAnimatedValueListener.remove();\n    this.__nativeAnimatedValueListener = null;\n    NativeAnimatedAPI.stopListeningToAnimatedNodeValue(this.__getNativeTag());\n  }\n\n  __getNativeTag(): number {\n    NativeAnimatedHelper.assertNativeAnimatedModule();\n    invariant(\n      this.__isNative,\n      'Attempt to get native tag from node not marked as \"native\"',\n    );\n\n    const nativeTag =\n      this.__nativeTag ?? NativeAnimatedHelper.generateNewNodeTag();\n\n    if (this.__nativeTag == null) {\n      this.__nativeTag = nativeTag;\n      const config = this.__getNativeConfig();\n      if (this._platformConfig) {\n        config.platformConfig = this._platformConfig;\n      }\n      NativeAnimatedHelper.API.createAnimatedNode(nativeTag, config);\n      this.__shouldUpdateListenersForNewNativeTag = true;\n    }\n\n    return nativeTag;\n  }\n  __getNativeConfig(): Object {\n    throw new Error(\n      'This JS animated node type cannot be used as native animated node',\n    );\n  }\n\n  toJSON(): any {\n    return this.__getValue();\n  }\n\n  __getPlatformConfig(): ?PlatformConfig {\n    return this._platformConfig;\n  }\n  __setPlatformConfig(platformConfig: ?PlatformConfig) {\n    this._platformConfig = platformConfig;\n  }\n}\n"],"mappings":"AAUA,YAAY;;AAIZ,OAAOA,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,SAAS,MAAM,WAAW;AAEjC,MAAMC,iBAAiB,GAAGF,oBAAoB,CAACG,GAAG;AAIlD,IAAIC,SAAS,GAAG,CAAC;AAIjB,eAAe,MAAMC,YAAY,CAAC;EAIhCC,QAAQA,CAAA,EAAS,CAAC;EAClBC,QAAQA,CAAA,EAAS;IACf,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACzB,IAAI,IAAI,CAACC,UAAU,IAAI,IAAI,CAACC,WAAW,IAAI,IAAI,EAAE;MAC/CV,oBAAoB,CAACG,GAAG,CAACQ,gBAAgB,CAAC,IAAI,CAACD,WAAW,CAAC;MAC3D,IAAI,CAACA,WAAW,GAAGE,SAAS;IAC9B;EACF;EACAC,UAAUA,CAAA,EAAQ,CAAC;EACnBC,kBAAkBA,CAAA,EAAQ;IACxB,OAAO,IAAI,CAACD,UAAU,CAAC,CAAC;EAC1B;EACAE,UAAUA,CAACC,KAAmB,EAAE,CAAC;EACjCC,aAAaA,CAACD,KAAmB,EAAE,CAAC;EACpCE,aAAaA,CAAA,EAAiC;IAC5C,OAAO,EAAE;EACX;EAOAC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC;EACtB;EAEAC,YAAYA,CAACC,cAA+B,EAAQ;IAClD,IAAI,CAAC,IAAI,CAACb,UAAU,EAAE;MACpB,MAAM,IAAIc,KAAK,CAAC,mDAAmD,CAAC;IACtE;IAEA,IAAI,CAACC,eAAe,GAAGF,cAAc;IACrC,IAAI,IAAI,CAACG,YAAY,CAAC,CAAC,EAAE;MACvB,IAAI,CAACC,mCAAmC,CAAC,CAAC;IAC5C;EACF;EASAC,WAAWA,CAACC,QAA+B,EAAU;IACnD,MAAMC,EAAE,GAAGC,MAAM,CAAC1B,SAAS,EAAE,CAAC;IAC9B,IAAI,CAACgB,UAAU,CAACS,EAAE,CAAC,GAAGD,QAAQ;IAC9B,IAAI,IAAI,CAACnB,UAAU,EAAE;MACnB,IAAI,CAACiB,mCAAmC,CAAC,CAAC;IAC5C;IACA,OAAOG,EAAE;EACX;EAQAE,cAAcA,CAACF,EAAU,EAAQ;IAC/B,OAAO,IAAI,CAACT,UAAU,CAACS,EAAE,CAAC;IAC1B,IAAI,IAAI,CAACpB,UAAU,IAAI,CAAC,IAAI,CAACgB,YAAY,CAAC,CAAC,EAAE;MAC3C,IAAI,CAACO,mCAAmC,CAAC,CAAC;IAC5C;EACF;EAOAxB,kBAAkBA,CAAA,EAAS;IACzB,IAAI,CAACY,UAAU,GAAG,CAAC,CAAC;IACpB,IAAI,IAAI,CAACX,UAAU,EAAE;MACnB,IAAI,CAACuB,mCAAmC,CAAC,CAAC;IAC5C;EACF;EAEAP,YAAYA,CAAA,EAAY;IACtB,OAAO,CAAC,CAACQ,MAAM,CAACC,IAAI,CAAC,IAAI,CAACd,UAAU,CAAC,CAACe,MAAM;EAC9C;EAEAT,mCAAmCA,CAAA,EAAG;IACpC,IACE,IAAI,CAACU,6BAA6B,IAClC,CAAC,IAAI,CAACC,sCAAsC,EAC5C;MACA;IACF;IAEA,IAAI,IAAI,CAACA,sCAAsC,EAAE;MAC/C,IAAI,CAACA,sCAAsC,GAAG,KAAK;MACnD,IAAI,CAACL,mCAAmC,CAAC,CAAC;IAC5C;IAEA9B,iBAAiB,CAACoC,iCAAiC,CAAC,IAAI,CAACC,cAAc,CAAC,CAAC,CAAC;IAC1E,IAAI,CAACH,6BAA6B,GAChCpC,oBAAoB,CAACwC,kBAAkB,CAACb,WAAW,CACjD,uBAAuB,EACvBc,IAAI,IAAI;MACN,IAAIA,IAAI,CAACC,GAAG,KAAK,IAAI,CAACH,cAAc,CAAC,CAAC,EAAE;QACtC;MACF;MACA,IAAI,CAACI,+BAA+B,CAACF,IAAI,CAACG,KAAK,CAAC;IAClD,CACF,CAAC;EACL;EAEAD,+BAA+BA,CAACC,KAAa,EAAE;IAC7C,IAAI,CAACC,eAAe,CAACD,KAAK,CAAC;EAC7B;EAEAC,eAAeA,CAACD,KAAa,EAAQ;IACnC,KAAK,MAAME,GAAG,IAAI,IAAI,CAAC1B,UAAU,EAAE;MACjC,IAAI,CAACA,UAAU,CAAC0B,GAAG,CAAC,CAAC;QAACF;MAAK,CAAC,CAAC;IAC/B;EACF;EAEAZ,mCAAmCA,CAAA,EAAG;IACpC,IAAI,CAAC,IAAI,CAACI,6BAA6B,EAAE;MACvC;IACF;IAEA,IAAI,CAACA,6BAA6B,CAACW,MAAM,CAAC,CAAC;IAC3C,IAAI,CAACX,6BAA6B,GAAG,IAAI;IACzClC,iBAAiB,CAAC8C,gCAAgC,CAAC,IAAI,CAACT,cAAc,CAAC,CAAC,CAAC;EAC3E;EAEAA,cAAcA,CAAA,EAAW;IACvBvC,oBAAoB,CAACiD,0BAA0B,CAAC,CAAC;IACjDhD,SAAS,CACP,IAAI,CAACQ,UAAU,EACf,4DACF,CAAC;IAED,MAAMyC,SAAS,GACb,IAAI,CAACxC,WAAW,IAAIV,oBAAoB,CAACmD,kBAAkB,CAAC,CAAC;IAE/D,IAAI,IAAI,CAACzC,WAAW,IAAI,IAAI,EAAE;MAC5B,IAAI,CAACA,WAAW,GAAGwC,SAAS;MAC5B,MAAME,MAAM,GAAG,IAAI,CAACC,iBAAiB,CAAC,CAAC;MACvC,IAAI,IAAI,CAAC7B,eAAe,EAAE;QACxB4B,MAAM,CAAC9B,cAAc,GAAG,IAAI,CAACE,eAAe;MAC9C;MACAxB,oBAAoB,CAACG,GAAG,CAACmD,kBAAkB,CAACJ,SAAS,EAAEE,MAAM,CAAC;MAC9D,IAAI,CAACf,sCAAsC,GAAG,IAAI;IACpD;IAEA,OAAOa,SAAS;EAClB;EACAG,iBAAiBA,CAAA,EAAW;IAC1B,MAAM,IAAI9B,KAAK,CACb,mEACF,CAAC;EACH;EAEAgC,MAAMA,CAAA,EAAQ;IACZ,OAAO,IAAI,CAAC1C,UAAU,CAAC,CAAC;EAC1B;EAEA2C,mBAAmBA,CAAA,EAAoB;IACrC,OAAO,IAAI,CAAChC,eAAe;EAC7B;EACAiC,mBAAmBA,CAACnC,cAA+B,EAAE;IACnD,IAAI,CAACE,eAAe,GAAGF,cAAc;EACvC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}