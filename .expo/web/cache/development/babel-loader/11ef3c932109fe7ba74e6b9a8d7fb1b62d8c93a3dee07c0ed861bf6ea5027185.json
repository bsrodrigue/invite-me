{"ast":null,"code":"import { NavigationContext, NavigationRouteContext } from '@react-navigation/native';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaFrame, useSafeAreaInsets } from 'react-native-safe-area-context';\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\nexport default function Screen(props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style\n  } = props;\n  const [headerHeight, setHeaderHeight] = React.useState(() => getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight));\n  return React.createElement(Background, {\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    style: [styles.container, style]\n  }, React.createElement(View, {\n    style: styles.content\n  }, React.createElement(HeaderShownContext.Provider, {\n    value: isParentHeaderShown || headerShown !== false\n  }, React.createElement(HeaderHeightContext.Provider, {\n    value: headerShown ? headerHeight : parentHeaderHeight ?? 0\n  }, children))), headerShown ? React.createElement(NavigationContext.Provider, {\n    value: navigation\n  }, React.createElement(NavigationRouteContext.Provider, {\n    value: route\n  }, React.createElement(View, {\n    onLayout: e => {\n      const {\n        height\n      } = e.nativeEvent.layout;\n      setHeaderHeight(height);\n    },\n    style: headerTransparent ? styles.absolute : null\n  }, header))) : null);\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  content: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  }\n});","map":{"version":3,"names":["NavigationContext","NavigationRouteContext","React","StyleSheet","View","useSafeAreaFrame","useSafeAreaInsets","Background","getDefaultHeaderHeight","HeaderHeightContext","HeaderShownContext","Screen","props","dimensions","insets","isParentHeaderShown","useContext","parentHeaderHeight","focused","modal","header","headerShown","headerTransparent","headerStatusBarHeight","top","navigation","route","children","style","headerHeight","setHeaderHeight","useState","createElement","accessibilityElementsHidden","importantForAccessibility","styles","container","content","Provider","value","onLayout","e","height","nativeEvent","layout","absolute","create","flex","flexDirection","position","left","right"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/@react-navigation/elements/src/Screen.tsx"],"sourcesContent":["import {\n  NavigationContext,\n  NavigationProp,\n  NavigationRouteContext,\n  ParamListBase,\n  RouteProp,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\n\nimport Background from './Background';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport HeaderShownContext from './Header/HeaderShownContext';\n\ntype Props = {\n  focused: boolean;\n  modal?: boolean;\n  navigation: NavigationProp<ParamListBase>;\n  route: RouteProp<ParamListBase>;\n  header: React.ReactNode;\n  headerShown?: boolean;\n  headerStatusBarHeight?: number;\n  headerTransparent?: boolean;\n  style?: StyleProp<ViewStyle>;\n  children: React.ReactNode;\n};\n\nexport default function Screen(props: Props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    focused,\n    modal = false,\n    header,\n    headerShown = true,\n    headerTransparent,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = React.useState(() =>\n    getDefaultHeaderHeight(dimensions, modal, headerStatusBarHeight)\n  );\n\n  return (\n    <Background\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.container, style]}\n    >\n      <View style={styles.content}>\n        <HeaderShownContext.Provider\n          value={isParentHeaderShown || headerShown !== false}\n        >\n          <HeaderHeightContext.Provider\n            value={headerShown ? headerHeight : parentHeaderHeight ?? 0}\n          >\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View\n              onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n\n                setHeaderHeight(height);\n              }}\n              style={headerTransparent ? styles.absolute : null}\n            >\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      ) : null}\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}