{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { getHeaderTitle, Header, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\nexport default function BottomTabView(props) {\n  const {\n    tabBar = props => React.createElement(BottomTabBar, props),\n    state,\n    navigation,\n    descriptors,\n    safeAreaInsets,\n    detachInactiveScreens = Platform.OS === 'web' || Platform.OS === 'android' || Platform.OS === 'ios',\n    sceneContainerStyle\n  } = props;\n  const focusedRouteKey = state.routes[state.index].key;\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n  const dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  const [tabBarHeight, setTabBarHeight] = React.useState(() => getTabBarHeight({\n    state,\n    descriptors,\n    dimensions,\n    layout: {\n      width: dimensions.width,\n      height: 0\n    },\n    insets: _objectSpread(_objectSpread({}, SafeAreaProviderCompat.initialMetrics.insets), props.safeAreaInsets),\n    style: descriptors[state.routes[state.index].key].options.tabBarStyle\n  }));\n  const renderTabBar = () => {\n    return React.createElement(SafeAreaInsetsContext.Consumer, null, insets => tabBar({\n      state: state,\n      descriptors: descriptors,\n      navigation: navigation,\n      insets: {\n        top: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) ?? (insets === null || insets === void 0 ? void 0 : insets.top) ?? 0,\n        right: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) ?? (insets === null || insets === void 0 ? void 0 : insets.right) ?? 0,\n        bottom: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) ?? (insets === null || insets === void 0 ? void 0 : insets.bottom) ?? 0,\n        left: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) ?? (insets === null || insets === void 0 ? void 0 : insets.left) ?? 0\n      }\n    }));\n  };\n  const {\n    routes\n  } = state;\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(MaybeScreenContainer, {\n    enabled: detachInactiveScreens,\n    hasTwoStates: true,\n    style: styles.container\n  }, routes.map((route, index) => {\n    const descriptor = descriptors[route.key];\n    const {\n      lazy = true,\n      unmountOnBlur\n    } = descriptor.options;\n    const isFocused = state.index === index;\n    if (unmountOnBlur && !isFocused) {\n      return null;\n    }\n    if (lazy && !loaded.includes(route.key) && !isFocused) {\n      return null;\n    }\n    const {\n      freezeOnBlur,\n      header = _ref => {\n        let {\n          layout,\n          options\n        } = _ref;\n        return React.createElement(Header, _extends({}, options, {\n          layout: layout,\n          title: getHeaderTitle(options, route.name)\n        }));\n      },\n      headerShown,\n      headerStatusBarHeight,\n      headerTransparent\n    } = descriptor.options;\n    return React.createElement(MaybeScreen, {\n      key: route.key,\n      style: [StyleSheet.absoluteFill, {\n        zIndex: isFocused ? 0 : -1\n      }],\n      visible: isFocused,\n      enabled: detachInactiveScreens,\n      freezeOnBlur: freezeOnBlur\n    }, React.createElement(BottomTabBarHeightContext.Provider, {\n      value: tabBarHeight\n    }, React.createElement(Screen, {\n      focused: isFocused,\n      route: descriptor.route,\n      navigation: descriptor.navigation,\n      headerShown: headerShown,\n      headerStatusBarHeight: headerStatusBarHeight,\n      headerTransparent: headerTransparent,\n      header: header({\n        layout: dimensions,\n        route: descriptor.route,\n        navigation: descriptor.navigation,\n        options: descriptor.options\n      }),\n      style: sceneContainerStyle\n    }, descriptor.render())));\n  })), React.createElement(BottomTabBarHeightCallbackContext.Provider, {\n    value: setTabBarHeight\n  }, renderTabBar()));\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"names":["getHeaderTitle","Header","SafeAreaProviderCompat","Screen","React","Platform","StyleSheet","SafeAreaInsetsContext","BottomTabBarHeightCallbackContext","BottomTabBarHeightContext","BottomTabBar","getTabBarHeight","MaybeScreen","MaybeScreenContainer","BottomTabView","props","tabBar","createElement","state","navigation","descriptors","safeAreaInsets","detachInactiveScreens","OS","sceneContainerStyle","focusedRouteKey","routes","index","key","loaded","setLoaded","useState","includes","dimensions","initialMetrics","frame","tabBarHeight","setTabBarHeight","layout","width","height","insets","_objectSpread","style","options","tabBarStyle","renderTabBar","Consumer","top","right","bottom","left","enabled","hasTwoStates","styles","container","map","route","descriptor","lazy","unmountOnBlur","isFocused","freezeOnBlur","header","_ref","_extends","title","name","headerShown","headerStatusBarHeight","headerTransparent","absoluteFill","zIndex","visible","Provider","value","focused","render","create","flex","overflow"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/@react-navigation/bottom-tabs/src/views/BottomTabView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  TabNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\n\nimport type {\n  BottomTabBarProps,\n  BottomTabDescriptorMap,\n  BottomTabHeaderProps,\n  BottomTabNavigationConfig,\n  BottomTabNavigationHelpers,\n  BottomTabNavigationProp,\n} from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\nexport default function BottomTabView(props: Props) {\n  const {\n    tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n    state,\n    navigation,\n    descriptors,\n    safeAreaInsets,\n    detachInactiveScreens = Platform.OS === 'web' ||\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios',\n    sceneContainerStyle,\n  } = props;\n\n  const focusedRouteKey = state.routes[state.index].key;\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n\n  const dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  const [tabBarHeight, setTabBarHeight] = React.useState(() =>\n    getTabBarHeight({\n      state,\n      descriptors,\n      dimensions,\n      layout: { width: dimensions.width, height: 0 },\n      insets: {\n        ...SafeAreaProviderCompat.initialMetrics.insets,\n        ...props.safeAreaInsets,\n      },\n      style: descriptors[state.routes[state.index].key].options.tabBarStyle,\n    })\n  );\n\n  const renderTabBar = () => {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n        {(insets) =>\n          tabBar({\n            state: state,\n            descriptors: descriptors,\n            navigation: navigation,\n            insets: {\n              top: safeAreaInsets?.top ?? insets?.top ?? 0,\n              right: safeAreaInsets?.right ?? insets?.right ?? 0,\n              bottom: safeAreaInsets?.bottom ?? insets?.bottom ?? 0,\n              left: safeAreaInsets?.left ?? insets?.left ?? 0,\n            },\n          })\n        }\n      </SafeAreaInsetsContext.Consumer>\n    );\n  };\n\n  const { routes } = state;\n\n  return (\n    <SafeAreaProviderCompat>\n      <MaybeScreenContainer\n        enabled={detachInactiveScreens}\n        hasTwoStates\n        style={styles.container}\n      >\n        {routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const { lazy = true, unmountOnBlur } = descriptor.options;\n          const isFocused = state.index === index;\n\n          if (unmountOnBlur && !isFocused) {\n            return null;\n          }\n\n          if (lazy && !loaded.includes(route.key) && !isFocused) {\n            // Don't render a lazy screen if we've never navigated to it\n            return null;\n          }\n\n          const {\n            freezeOnBlur,\n            header = ({ layout, options }: BottomTabHeaderProps) => (\n              <Header\n                {...options}\n                layout={layout}\n                title={getHeaderTitle(options, route.name)}\n              />\n            ),\n            headerShown,\n            headerStatusBarHeight,\n            headerTransparent,\n          } = descriptor.options;\n\n          return (\n            <MaybeScreen\n              key={route.key}\n              style={[StyleSheet.absoluteFill, { zIndex: isFocused ? 0 : -1 }]}\n              visible={isFocused}\n              enabled={detachInactiveScreens}\n              freezeOnBlur={freezeOnBlur}\n            >\n              <BottomTabBarHeightContext.Provider value={tabBarHeight}>\n                <Screen\n                  focused={isFocused}\n                  route={descriptor.route}\n                  navigation={descriptor.navigation}\n                  headerShown={headerShown}\n                  headerStatusBarHeight={headerStatusBarHeight}\n                  headerTransparent={headerTransparent}\n                  header={header({\n                    layout: dimensions,\n                    route: descriptor.route,\n                    navigation:\n                      descriptor.navigation as BottomTabNavigationProp<ParamListBase>,\n                    options: descriptor.options,\n                  })}\n                  style={sceneContainerStyle}\n                >\n                  {descriptor.render()}\n                </Screen>\n              </BottomTabBarHeightContext.Provider>\n            </MaybeScreen>\n          );\n        })}\n      </MaybeScreenContainer>\n      <BottomTabBarHeightCallbackContext.Provider value={setTabBarHeight}>\n        {renderTabBar()}\n      </BottomTabBarHeightCallbackContext.Provider>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}