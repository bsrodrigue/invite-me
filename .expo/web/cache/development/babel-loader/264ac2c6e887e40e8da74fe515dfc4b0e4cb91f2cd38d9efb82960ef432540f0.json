{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"state\", \"descriptors\", \"dimensions\", \"insets\", \"style\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { MissingIcon } from '@react-navigation/elements';\nimport { CommonActions, NavigationContext, NavigationRouteContext, useLinkBuilder, useTheme } from '@react-navigation/native';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaFrame } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\nconst useNativeDriver = Platform.OS !== 'web';\nconst shouldUseHorizontalLabels = _ref => {\n  let {\n    state,\n    descriptors,\n    layout,\n    dimensions\n  } = _ref;\n  const {\n    tabBarLabelPosition\n  } = descriptors[state.routes[state.index].key].options;\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n  if (layout.width >= 768) {\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const {\n        tabBarItemStyle\n      } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\nconst getPaddingBottom = insets => Math.max(insets.bottom - Platform.select({\n  ios: 4,\n  default: 0\n}), 0);\nexport const getTabBarHeight = _ref2 => {\n  var _StyleSheet$flatten;\n  let {\n      state,\n      descriptors,\n      dimensions,\n      insets,\n      style\n    } = _ref2,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  const customHeight = (_StyleSheet$flatten = StyleSheet.flatten(style)) === null || _StyleSheet$flatten === void 0 ? void 0 : _StyleSheet$flatten.height;\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels(_objectSpread({\n    state,\n    descriptors,\n    dimensions\n  }, rest));\n  const paddingBottom = getPaddingBottom(insets);\n  if (Platform.OS === 'ios' && !Platform.isPad && isLandscape && horizontalLabels) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\nexport default function BottomTabBar(_ref3) {\n  let {\n    state,\n    navigation,\n    descriptors,\n    insets,\n    style\n  } = _ref3;\n  const {\n    colors\n  } = useTheme();\n  const buildLink = useLinkBuilder();\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor\n  } = focusedOptions;\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n  const visibilityAnimationConfigRef = React.useRef(tabBarVisibilityAnimationConfig);\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n  const [visible] = React.useState(() => new Animated.Value(shouldShowTabBar ? 1 : 0));\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n    if (shouldShowTabBar) {\n      var _visibilityAnimationC, _visibilityAnimationC2;\n      const animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC = visibilityAnimationConfig.show) === null || _visibilityAnimationC === void 0 ? void 0 : _visibilityAnimationC.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 1,\n        useNativeDriver,\n        duration: 250\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC2 = visibilityAnimationConfig.show) === null || _visibilityAnimationC2 === void 0 ? void 0 : _visibilityAnimationC2.config)).start(_ref4 => {\n        let {\n          finished\n        } = _ref4;\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      var _visibilityAnimationC3, _visibilityAnimationC4;\n      setIsTabBarHidden(true);\n      const animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC3 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC3 === void 0 ? void 0 : _visibilityAnimationC3.animation) === 'spring' ? Animated.spring : Animated.timing;\n      animation(visible, _objectSpread({\n        toValue: 0,\n        useNativeDriver,\n        duration: 200\n      }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationC4 = visibilityAnimationConfig.hide) === null || _visibilityAnimationC4 === void 0 ? void 0 : _visibilityAnimationC4.config)).start();\n    }\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width\n  });\n  const handleLayout = e => {\n    const {\n      height,\n      width\n    } = e.nativeEvent.layout;\n    onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);\n    setLayout(layout => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width\n        };\n      }\n    });\n  };\n  const {\n    routes\n  } = state;\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style]\n  });\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout\n  });\n  const tabBarBackgroundElement = tabBarBackground === null || tabBarBackground === void 0 ? void 0 : tabBarBackground();\n  return React.createElement(Animated.View, {\n    style: [styles.tabBar, {\n      backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,\n      borderTopColor: colors.border\n    }, {\n      transform: [{\n        translateY: visible.interpolate({\n          inputRange: [0, 1],\n          outputRange: [layout.height + paddingBottom + StyleSheet.hairlineWidth, 0]\n        })\n      }],\n      position: isTabBarHidden ? 'absolute' : null\n    }, {\n      height: tabBarHeight,\n      paddingBottom,\n      paddingHorizontal: Math.max(insets.left, insets.right)\n    }, tabBarStyle],\n    pointerEvents: isTabBarHidden ? 'none' : 'auto',\n    onLayout: handleLayout\n  }, React.createElement(View, {\n    pointerEvents: \"none\",\n    style: StyleSheet.absoluteFill\n  }, tabBarBackgroundElement), React.createElement(View, {\n    accessibilityRole: \"tablist\",\n    style: styles.content\n  }, routes.map((route, index) => {\n    const focused = index === state.index;\n    const {\n      options\n    } = descriptors[route.key];\n    const onPress = () => {\n      const event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n      if (!focused && !event.defaultPrevented) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate({\n          name: route.name,\n          merge: true\n        })), {}, {\n          target: state.key\n        }));\n      }\n    };\n    const onLongPress = () => {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n    const label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    const accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && Platform.OS === 'ios' ? `${label}, tab, ${index + 1} of ${routes.length}` : undefined;\n    return React.createElement(NavigationContext.Provider, {\n      key: route.key,\n      value: descriptors[route.key].navigation\n    }, React.createElement(NavigationRouteContext.Provider, {\n      value: route\n    }, React.createElement(BottomTabItem, {\n      route: route,\n      descriptor: descriptors[route.key],\n      focused: focused,\n      horizontal: hasHorizontalLabels,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      accessibilityLabel: accessibilityLabel,\n      to: buildLink(route.name, route.params),\n      testID: options.tabBarTestID,\n      allowFontScaling: options.tabBarAllowFontScaling,\n      activeTintColor: tabBarActiveTintColor,\n      inactiveTintColor: tabBarInactiveTintColor,\n      activeBackgroundColor: tabBarActiveBackgroundColor,\n      inactiveBackgroundColor: tabBarInactiveBackgroundColor,\n      button: options.tabBarButton,\n      icon: options.tabBarIcon ?? (_ref5 => {\n        let {\n          color,\n          size\n        } = _ref5;\n        return React.createElement(MissingIcon, {\n          color: color,\n          size: size\n        });\n      }),\n      badge: options.tabBarBadge,\n      badgeStyle: options.tabBarBadgeStyle,\n      label: label,\n      showLabel: tabBarShowLabel,\n      labelStyle: options.tabBarLabelStyle,\n      iconStyle: options.tabBarIconStyle,\n      style: options.tabBarItemStyle\n    })));\n  })));\n}\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["MissingIcon","CommonActions","NavigationContext","NavigationRouteContext","useLinkBuilder","useTheme","React","Animated","Platform","StyleSheet","View","useSafeAreaFrame","BottomTabBarHeightCallbackContext","useIsKeyboardShown","BottomTabItem","DEFAULT_TABBAR_HEIGHT","COMPACT_TABBAR_HEIGHT","DEFAULT_MAX_TAB_ITEM_WIDTH","useNativeDriver","OS","shouldUseHorizontalLabels","_ref","state","descriptors","layout","dimensions","tabBarLabelPosition","routes","index","key","options","width","maxTabWidth","reduce","acc","route","tabBarItemStyle","flattenedStyle","flatten","maxWidth","height","getPaddingBottom","insets","Math","max","bottom","select","ios","default","getTabBarHeight","_ref2","_StyleSheet$flatten","style","rest","_objectWithoutProperties","_excluded","customHeight","isLandscape","horizontalLabels","_objectSpread","paddingBottom","isPad","BottomTabBar","_ref3","navigation","colors","buildLink","focusedRoute","focusedDescriptor","focusedOptions","tabBarShowLabel","tabBarHideOnKeyboard","tabBarVisibilityAnimationConfig","tabBarStyle","tabBarBackground","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarActiveBackgroundColor","tabBarInactiveBackgroundColor","isKeyboardShown","onHeightChange","useContext","shouldShowTabBar","visibilityAnimationConfigRef","useRef","useEffect","current","isTabBarHidden","setIsTabBarHidden","useState","visible","Value","visibilityAnimationConfig","_visibilityAnimationC","_visibilityAnimationC2","animation","show","spring","timing","toValue","duration","config","start","_ref4","finished","_visibilityAnimationC3","_visibilityAnimationC4","hide","stopAnimation","setLayout","handleLayout","e","nativeEvent","tabBarHeight","hasHorizontalLabels","tabBarBackgroundElement","createElement","styles","tabBar","backgroundColor","card","borderTopColor","border","transform","translateY","interpolate","inputRange","outputRange","hairlineWidth","position","paddingHorizontal","left","right","pointerEvents","onLayout","absoluteFill","accessibilityRole","content","map","focused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","dispatch","navigate","name","merge","onLongPress","label","tabBarLabel","undefined","title","accessibilityLabel","tabBarAccessibilityLabel","length","Provider","value","descriptor","horizontal","to","params","testID","tabBarTestID","allowFontScaling","tabBarAllowFontScaling","activeTintColor","inactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","button","tabBarButton","icon","tabBarIcon","_ref5","color","size","badge","tabBarBadge","badgeStyle","tabBarBadgeStyle","showLabel","labelStyle","tabBarLabelStyle","iconStyle","tabBarIconStyle","create","borderTopWidth","elevation","flex","flexDirection"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/@react-navigation/bottom-tabs/src/views/BottomTabBar.tsx"],"sourcesContent":["import { MissingIcon } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  NavigationContext,\n  NavigationRouteContext,\n  ParamListBase,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { EdgeInsets, useSafeAreaFrame } from 'react-native-safe-area-context';\n\nimport type { BottomTabBarProps, BottomTabDescriptorMap } from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport useIsKeyboardShown from '../utils/useIsKeyboardShown';\nimport BottomTabItem from './BottomTabItem';\n\ntype Props = BottomTabBarProps & {\n  style?: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n};\n\nconst DEFAULT_TABBAR_HEIGHT = 49;\nconst COMPACT_TABBAR_HEIGHT = 32;\nconst DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\ntype Options = {\n  state: TabNavigationState<ParamListBase>;\n  descriptors: BottomTabDescriptorMap;\n  layout: { height: number; width: number };\n  dimensions: { height: number; width: number };\n};\n\nconst shouldUseHorizontalLabels = ({\n  state,\n  descriptors,\n  layout,\n  dimensions,\n}: Options) => {\n  const { tabBarLabelPosition } =\n    descriptors[state.routes[state.index].key].options;\n\n  if (tabBarLabelPosition) {\n    switch (tabBarLabelPosition) {\n      case 'beside-icon':\n        return true;\n      case 'below-icon':\n        return false;\n    }\n  }\n\n  if (layout.width >= 768) {\n    // Screen size matches a tablet\n    const maxTabWidth = state.routes.reduce((acc, route) => {\n      const { tabBarItemStyle } = descriptors[route.key].options;\n      const flattenedStyle = StyleSheet.flatten(tabBarItemStyle);\n\n      if (flattenedStyle) {\n        if (typeof flattenedStyle.width === 'number') {\n          return acc + flattenedStyle.width;\n        } else if (typeof flattenedStyle.maxWidth === 'number') {\n          return acc + flattenedStyle.maxWidth;\n        }\n      }\n\n      return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;\n    }, 0);\n\n    return maxTabWidth <= layout.width;\n  } else {\n    return dimensions.width > dimensions.height;\n  }\n};\n\nconst getPaddingBottom = (insets: EdgeInsets) =>\n  Math.max(insets.bottom - Platform.select({ ios: 4, default: 0 }), 0);\n\nexport const getTabBarHeight = ({\n  state,\n  descriptors,\n  dimensions,\n  insets,\n  style,\n  ...rest\n}: Options & {\n  insets: EdgeInsets;\n  style: Animated.WithAnimatedValue<StyleProp<ViewStyle>> | undefined;\n}) => {\n  // @ts-ignore\n  const customHeight = StyleSheet.flatten(style)?.height;\n\n  if (typeof customHeight === 'number') {\n    return customHeight;\n  }\n\n  const isLandscape = dimensions.width > dimensions.height;\n  const horizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    ...rest,\n  });\n  const paddingBottom = getPaddingBottom(insets);\n\n  if (\n    Platform.OS === 'ios' &&\n    !Platform.isPad &&\n    isLandscape &&\n    horizontalLabels\n  ) {\n    return COMPACT_TABBAR_HEIGHT + paddingBottom;\n  }\n\n  return DEFAULT_TABBAR_HEIGHT + paddingBottom;\n};\n\nexport default function BottomTabBar({\n  state,\n  navigation,\n  descriptors,\n  insets,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const {\n    tabBarShowLabel,\n    tabBarHideOnKeyboard = false,\n    tabBarVisibilityAnimationConfig,\n    tabBarStyle,\n    tabBarBackground,\n    tabBarActiveTintColor,\n    tabBarInactiveTintColor,\n    tabBarActiveBackgroundColor,\n    tabBarInactiveBackgroundColor,\n  } = focusedOptions;\n\n  const dimensions = useSafeAreaFrame();\n  const isKeyboardShown = useIsKeyboardShown();\n\n  const onHeightChange = React.useContext(BottomTabBarHeightCallbackContext);\n\n  const shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);\n\n  const visibilityAnimationConfigRef = React.useRef(\n    tabBarVisibilityAnimationConfig\n  );\n\n  React.useEffect(() => {\n    visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;\n  });\n\n  const [isTabBarHidden, setIsTabBarHidden] = React.useState(!shouldShowTabBar);\n\n  const [visible] = React.useState(\n    () => new Animated.Value(shouldShowTabBar ? 1 : 0)\n  );\n\n  React.useEffect(() => {\n    const visibilityAnimationConfig = visibilityAnimationConfigRef.current;\n\n    if (shouldShowTabBar) {\n      const animation =\n        visibilityAnimationConfig?.show?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 1,\n        useNativeDriver,\n        duration: 250,\n        ...visibilityAnimationConfig?.show?.config,\n      }).start(({ finished }) => {\n        if (finished) {\n          setIsTabBarHidden(false);\n        }\n      });\n    } else {\n      setIsTabBarHidden(true);\n\n      const animation =\n        visibilityAnimationConfig?.hide?.animation === 'spring'\n          ? Animated.spring\n          : Animated.timing;\n\n      animation(visible, {\n        toValue: 0,\n        useNativeDriver,\n        duration: 200,\n        ...visibilityAnimationConfig?.hide?.config,\n      }).start();\n    }\n\n    return () => visible.stopAnimation();\n  }, [visible, shouldShowTabBar]);\n\n  const [layout, setLayout] = React.useState({\n    height: 0,\n    width: dimensions.width,\n  });\n\n  const handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    onHeightChange?.(height);\n\n    setLayout((layout) => {\n      if (height === layout.height && width === layout.width) {\n        return layout;\n      } else {\n        return {\n          height,\n          width,\n        };\n      }\n    });\n  };\n\n  const { routes } = state;\n\n  const paddingBottom = getPaddingBottom(insets);\n  const tabBarHeight = getTabBarHeight({\n    state,\n    descriptors,\n    insets,\n    dimensions,\n    layout,\n    style: [tabBarStyle, style],\n  });\n\n  const hasHorizontalLabels = shouldUseHorizontalLabels({\n    state,\n    descriptors,\n    dimensions,\n    layout,\n  });\n\n  const tabBarBackgroundElement = tabBarBackground?.();\n\n  return (\n    <Animated.View\n      style={[\n        styles.tabBar,\n        {\n          backgroundColor:\n            tabBarBackgroundElement != null ? 'transparent' : colors.card,\n          borderTopColor: colors.border,\n        },\n        {\n          transform: [\n            {\n              translateY: visible.interpolate({\n                inputRange: [0, 1],\n                outputRange: [\n                  layout.height + paddingBottom + StyleSheet.hairlineWidth,\n                  0,\n                ],\n              }),\n            },\n          ],\n          // Absolutely position the tab bar so that the content is below it\n          // This is needed to avoid gap at bottom when the tab bar is hidden\n          position: isTabBarHidden ? 'absolute' : (null as any),\n        },\n        {\n          height: tabBarHeight,\n          paddingBottom,\n          paddingHorizontal: Math.max(insets.left, insets.right),\n        },\n        tabBarStyle,\n      ]}\n      pointerEvents={isTabBarHidden ? 'none' : 'auto'}\n      onLayout={handleLayout}\n    >\n      <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n        {tabBarBackgroundElement}\n      </View>\n      <View accessibilityRole=\"tablist\" style={styles.content}>\n        {routes.map((route, index) => {\n          const focused = index === state.index;\n          const { options } = descriptors[route.key];\n\n          const onPress = () => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (!focused && !event.defaultPrevented) {\n              navigation.dispatch({\n                ...CommonActions.navigate({ name: route.name, merge: true }),\n                target: state.key,\n              });\n            }\n          };\n\n          const onLongPress = () => {\n            navigation.emit({\n              type: 'tabLongPress',\n              target: route.key,\n            });\n          };\n\n          const label =\n            options.tabBarLabel !== undefined\n              ? options.tabBarLabel\n              : options.title !== undefined\n              ? options.title\n              : route.name;\n\n          const accessibilityLabel =\n            options.tabBarAccessibilityLabel !== undefined\n              ? options.tabBarAccessibilityLabel\n              : typeof label === 'string' && Platform.OS === 'ios'\n              ? `${label}, tab, ${index + 1} of ${routes.length}`\n              : undefined;\n\n          return (\n            <NavigationContext.Provider\n              key={route.key}\n              value={descriptors[route.key].navigation}\n            >\n              <NavigationRouteContext.Provider value={route}>\n                <BottomTabItem\n                  route={route}\n                  descriptor={descriptors[route.key]}\n                  focused={focused}\n                  horizontal={hasHorizontalLabels}\n                  onPress={onPress}\n                  onLongPress={onLongPress}\n                  accessibilityLabel={accessibilityLabel}\n                  to={buildLink(route.name, route.params)}\n                  testID={options.tabBarTestID}\n                  allowFontScaling={options.tabBarAllowFontScaling}\n                  activeTintColor={tabBarActiveTintColor}\n                  inactiveTintColor={tabBarInactiveTintColor}\n                  activeBackgroundColor={tabBarActiveBackgroundColor}\n                  inactiveBackgroundColor={tabBarInactiveBackgroundColor}\n                  button={options.tabBarButton}\n                  icon={\n                    options.tabBarIcon ??\n                    (({ color, size }) => (\n                      <MissingIcon color={color} size={size} />\n                    ))\n                  }\n                  badge={options.tabBarBadge}\n                  badgeStyle={options.tabBarBadgeStyle}\n                  label={label}\n                  showLabel={tabBarShowLabel}\n                  labelStyle={options.tabBarLabelStyle}\n                  iconStyle={options.tabBarIconStyle}\n                  style={options.tabBarItemStyle}\n                />\n              </NavigationRouteContext.Provider>\n            </NavigationContext.Provider>\n          );\n        })}\n      </View>\n    </Animated.View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  tabBar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    borderTopWidth: StyleSheet.hairlineWidth,\n    elevation: 8,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}