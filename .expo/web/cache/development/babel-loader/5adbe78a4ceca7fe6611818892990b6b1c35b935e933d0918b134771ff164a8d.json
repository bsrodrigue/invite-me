{"ast":null,"code":"import PixelRatio from '../Utilities/PixelRatio';\nlet cacheBreaker;\nlet warnIfCacheBreakerUnset = true;\nexport function pickScale(scales, deviceScale) {\n  const requiredDeviceScale = deviceScale ?? PixelRatio.get();\n  for (let i = 0; i < scales.length; i++) {\n    if (scales[i] >= requiredDeviceScale) {\n      return scales[i];\n    }\n  }\n  return scales[scales.length - 1] || 1;\n}\nexport function setUrlCacheBreaker(appendage) {\n  cacheBreaker = appendage;\n}\nexport function getUrlCacheBreaker() {\n  if (cacheBreaker == null) {\n    if (__DEV__ && warnIfCacheBreakerUnset) {\n      warnIfCacheBreakerUnset = false;\n      console.warn('AssetUtils.getUrlCacheBreaker: Cache breaker value is unset');\n    }\n    return '';\n  }\n  return cacheBreaker;\n}","map":{"version":3,"names":["PixelRatio","cacheBreaker","warnIfCacheBreakerUnset","pickScale","scales","deviceScale","requiredDeviceScale","get","i","length","setUrlCacheBreaker","appendage","getUrlCacheBreaker","__DEV__","console","warn"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Image/AssetUtils.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport PixelRatio from '../Utilities/PixelRatio';\n\nlet cacheBreaker;\nlet warnIfCacheBreakerUnset = true;\n\nexport function pickScale(scales: Array<number>, deviceScale?: number): number {\n  const requiredDeviceScale = deviceScale ?? PixelRatio.get();\n\n  // Packager guarantees that `scales` array is sorted\n  for (let i = 0; i < scales.length; i++) {\n    if (scales[i] >= requiredDeviceScale) {\n      return scales[i];\n    }\n  }\n\n  // If nothing matches, device scale is larger than any available\n  // scales, so we return the biggest one. Unless the array is empty,\n  // in which case we default to 1\n  return scales[scales.length - 1] || 1;\n}\n\nexport function setUrlCacheBreaker(appendage: string) {\n  cacheBreaker = appendage;\n}\n\nexport function getUrlCacheBreaker(): string {\n  if (cacheBreaker == null) {\n    if (__DEV__ && warnIfCacheBreakerUnset) {\n      warnIfCacheBreakerUnset = false;\n      console.warn(\n        'AssetUtils.getUrlCacheBreaker: Cache breaker value is unset',\n      );\n    }\n    return '';\n  }\n  return cacheBreaker;\n}\n"],"mappings":"AAUA,OAAOA,UAAU,MAAM,yBAAyB;AAEhD,IAAIC,YAAY;AAChB,IAAIC,uBAAuB,GAAG,IAAI;AAElC,OAAO,SAASC,SAASA,CAACC,MAAqB,EAAEC,WAAoB,EAAU;EAC7E,MAAMC,mBAAmB,GAAGD,WAAW,IAAIL,UAAU,CAACO,GAAG,CAAC,CAAC;EAG3D,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,MAAM,CAACK,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAIJ,MAAM,CAACI,CAAC,CAAC,IAAIF,mBAAmB,EAAE;MACpC,OAAOF,MAAM,CAACI,CAAC,CAAC;IAClB;EACF;EAKA,OAAOJ,MAAM,CAACA,MAAM,CAACK,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;AACvC;AAEA,OAAO,SAASC,kBAAkBA,CAACC,SAAiB,EAAE;EACpDV,YAAY,GAAGU,SAAS;AAC1B;AAEA,OAAO,SAASC,kBAAkBA,CAAA,EAAW;EAC3C,IAAIX,YAAY,IAAI,IAAI,EAAE;IACxB,IAAIY,OAAO,IAAIX,uBAAuB,EAAE;MACtCA,uBAAuB,GAAG,KAAK;MAC/BY,OAAO,CAACC,IAAI,CACV,6DACF,CAAC;IACH;IACA,OAAO,EAAE;EACX;EACA,OAAOd,YAAY;AACrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}