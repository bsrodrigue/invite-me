{"ast":null,"code":"'use strict';\n\nimport { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nimport { shouldBeUseWeb } from '../PlatformChecker';\nconst _worklet_4899742148771_init_data = {\n  code: \"function anonymous(){const{sharedValue,updater}=this.__closure;sharedValue.value=updater();}\",\n  location: \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useDerivedValue.js\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"anonymous\\\",\\\"sharedValue\\\",\\\"updater\\\",\\\"__closure\\\",\\\"value\\\"],\\\"sources\\\":[\\\"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useDerivedValue.js\\\"],\\\"mappings\\\":\\\"AAuCgB,SAAAA,SAAMA,CAAA,QAAAC,WAAA,CAAAC,OAAA,OAAAC,SAAA,CAGhBF,WAAW,CAACG,KAAK,CAAGF,OAAO,CAAC,CAAC,CAC/B\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.10.1\"\n};\nexport function useDerivedValue(updater, dependencies) {\n  const initRef = useRef(null);\n  let inputs = Object.values(updater.__closure ?? {});\n  if (shouldBeUseWeb()) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {\n      inputs = dependencies;\n    }\n  }\n  if (dependencies === undefined) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(updater));\n  }\n  const sharedValue = initRef.current;\n  useEffect(() => {\n    const fun = function () {\n      const _e = [new global.Error(), -3, -27];\n      const anonymous = function () {\n        sharedValue.value = updater();\n      };\n      anonymous.__closure = {\n        sharedValue,\n        updater\n      };\n      anonymous.__workletHash = 4899742148771;\n      anonymous.__initData = _worklet_4899742148771_init_data;\n      anonymous.__stackDetails = _e;\n      return anonymous;\n    }();\n    const mapperId = startMapper(fun, inputs, [sharedValue]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n  return sharedValue;\n}","map":{"version":3,"names":["useEffect","useRef","initialUpdaterRun","makeMutable","startMapper","stopMapper","shouldBeUseWeb","_worklet_4899742148771_init_data","code","location","sourceMap","version","useDerivedValue","updater","dependencies","initRef","inputs","Object","values","__closure","_dependencies","length","undefined","__workletHash","push","current","sharedValue","fun","_e","global","Error","anonymous","value","__initData","__stackDetails","mapperId"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useDerivedValue.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport { initialUpdaterRun } from '../animation';\nimport type { SharedValue, WorkletFunction } from '../commonTypes';\nimport { makeMutable, startMapper, stopMapper } from '../core';\nimport type { DependencyList } from './commonTypes';\nimport { shouldBeUseWeb } from '../PlatformChecker';\n\nexport type DerivedValue<Value> = Readonly<SharedValue<Value>>;\n\n/**\n * Lets you create new shared values based on existing ones while keeping them reactive.\n *\n * @param updater - A function called whenever at least one of the shared values or state used in the function body changes.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @returns A new readonly shared value based on a value returned from the updater function\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useDerivedValue\n */\n// @ts-expect-error This overload is required by our API.\nexport function useDerivedValue<Value>(\n  updater: () => Value,\n  dependencies?: DependencyList\n): DerivedValue<Value>;\n\nexport function useDerivedValue<Value>(\n  updater: WorkletFunction<[], Value>,\n  dependencies?: DependencyList\n): DerivedValue<Value> {\n  const initRef = useRef<SharedValue<Value> | null>(null);\n  let inputs = Object.values(updater.__closure ?? {});\n  if (shouldBeUseWeb()) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel/SWC plugin\n      inputs = dependencies;\n    }\n  }\n\n  // build dependencies\n  if (dependencies === undefined) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n\n  if (initRef.current === null) {\n    initRef.current = makeMutable(initialUpdaterRun(updater));\n  }\n\n  const sharedValue: SharedValue<Value> = initRef.current;\n\n  useEffect(() => {\n    const fun = () => {\n      'worklet';\n      sharedValue.value = updater();\n    };\n    const mapperId = startMapper(fun, inputs, [sharedValue]);\n    return () => {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n\n  useEffect(() => {\n    return () => {\n      initRef.current = null;\n    };\n  }, []);\n\n  return sharedValue;\n}\n"],"mappings":"AAAA,YAAY;;AACZ,SAASA,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACzC,SAASC,iBAAiB,QAAQ,cAAc;AAEhD,SAASC,WAAW,EAAEC,WAAW,EAAEC,UAAU,QAAQ,SAAS;AAE9D,SAASC,cAAc,QAAQ,oBAAoB;AAAA,MAAAC,gCAAA;EAAAC,IAAA;EAAAC,QAAA;EAAAC,SAAA;EAAAC,OAAA;AAAA;AAkBnD,OAAO,SAASC,eAAeA,CAC7BC,OAAmC,EACnCC,YAA6B,EACR;EACrB,MAAMC,OAAO,GAAGd,MAAM,CAA4B,IAAI,CAAC;EACvD,IAAIe,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACL,OAAO,CAACM,SAAS,IAAI,CAAC,CAAC,CAAC;EACnD,IAAIb,cAAc,CAAC,CAAC,EAAE;IAAA,IAAAc,aAAA;IACpB,IAAI,CAACJ,MAAM,CAACK,MAAM,KAAAD,aAAA,GAAIN,YAAY,cAAAM,aAAA,eAAZA,aAAA,CAAcC,MAAM,EAAE;MAE1CL,MAAM,GAAGF,YAAY;IACvB;EACF;EAGA,IAAIA,YAAY,KAAKQ,SAAS,EAAE;IAC9BR,YAAY,GAAG,CAAC,GAAGE,MAAM,EAAEH,OAAO,CAACU,aAAa,CAAC;EACnD,CAAC,MAAM;IACLT,YAAY,CAACU,IAAI,CAACX,OAAO,CAACU,aAAa,CAAC;EAC1C;EAEA,IAAIR,OAAO,CAACU,OAAO,KAAK,IAAI,EAAE;IAC5BV,OAAO,CAACU,OAAO,GAAGtB,WAAW,CAACD,iBAAiB,CAACW,OAAO,CAAC,CAAC;EAC3D;EAEA,MAAMa,WAA+B,GAAGX,OAAO,CAACU,OAAO;EAEvDzB,SAAS,CAAC,MAAM;IACd,MAAM2B,GAAG,GAAG;MAAA,MAAAC,EAAA,QAAAC,MAAA,CAAAC,KAAA;MAAA,MAAAC,SAAA,YAAAA,CAAA,EAAM;QAEhBL,WAAW,CAACM,KAAK,GAAGnB,OAAO,CAAC,CAAC;MAC/B,CAAC;MAAAkB,SAAA,CAAAZ,SAAA;QAAAO,WAAA;QAAAb;MAAA;MAAAkB,SAAA,CAAAR,aAAA;MAAAQ,SAAA,CAAAE,UAAA,GAAA1B,gCAAA;MAAAwB,SAAA,CAAAG,cAAA,GAAAN,EAAA;MAAA,OAAAG,SAAA;IAAA,CAHW,EAGX;IACD,MAAMI,QAAQ,GAAG/B,WAAW,CAACuB,GAAG,EAAEX,MAAM,EAAE,CAACU,WAAW,CAAC,CAAC;IACxD,OAAO,MAAM;MACXrB,UAAU,CAAC8B,QAAQ,CAAC;IACtB,CAAC;EACH,CAAC,EAAErB,YAAY,CAAC;EAEhBd,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACXe,OAAO,CAACU,OAAO,GAAG,IAAI;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOC,WAAW;AACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}