{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { create } from 'zustand';\nimport { useAsyncStorage } from '../lib/storage';\nconst {\n  storeData\n} = useAsyncStorage();\nexport default function createBaseStore(namespace) {\n  return create(set => ({\n    items: [],\n    init: items => set({\n      items\n    }),\n    create: item => {\n      const createdAt = new Date().toISOString();\n      item.createdAt = createdAt;\n      item.updatedAt = createdAt;\n      set(state => {\n        const items = [...state.items, item];\n        storeData(namespace, items);\n        return {\n          items\n        };\n      });\n    },\n    update: item => {\n      const updatedAt = new Date().toISOString();\n      item.updatedAt = updatedAt;\n      set(state => {\n        const items = state.items.map(i => {\n          if (i.uuid == item.uuid) {\n            i = _objectSpread(_objectSpread({}, i), item);\n          }\n          return i;\n        });\n        storeData(namespace, items);\n        return {\n          items\n        };\n      });\n    },\n    remove: uuid => {\n      set(state => {\n        const items = state.items.filter(item => item.uuid != uuid);\n        storeData(namespace, items);\n        return {\n          items\n        };\n      });\n    },\n    clear: () => {\n      set(state => {\n        storeData(namespace, []);\n        return {\n          items: []\n        };\n      });\n    }\n  }));\n}","map":{"version":3,"names":["create","useAsyncStorage","storeData","createBaseStore","namespace","set","items","init","item","createdAt","Date","toISOString","updatedAt","state","update","map","i","uuid","_objectSpread","remove","filter","clear"],"sources":["/home/rodo/workspace/passion/apps/muh-money/src/stores/base.store.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { useAsyncStorage } from '../lib/storage';\n\ninterface BaseState<T> {\n  items: T[];\n\n  init: (items: T[]) => void;\n  create: (item: T) => void;\n  update: (item: Partial<T>) => void;\n  remove: (uuid: string) => void;\n\n  clear: () => void;\n}\n\nconst { storeData } = useAsyncStorage();\n\nexport default function createBaseStore<T>(namespace: string) {\n\n\n  return create<BaseState<T>>((set) => ({\n    items: [],\n\n    init: (items) => set({ items }),\n\n    create: (item) => {\n      const createdAt = new Date().toISOString();\n      item.createdAt = createdAt;\n      item.updatedAt = createdAt;\n      set((state) => {\n        const items = [...state.items, item]\n        storeData(namespace, items);\n        return {\n          items,\n        }\n      });\n    },\n\n    update: (item) => {\n      const updatedAt = new Date().toISOString();\n      item.updatedAt = updatedAt;\n\n      set((state) => {\n\n        const items = state.items.map((i) => {\n          if (i.uuid == item.uuid) {\n            i = { ...i, ...item };\n          }\n          return i;\n        });\n\n        storeData(namespace, items);\n\n        return {\n          items,\n        }\n      });\n    },\n\n    remove: (uuid) => {\n      set((state) => {\n        const items = state.items.filter((item) => (item.uuid != uuid))\n\n        storeData(namespace, items);\n        return {\n          items,\n        }\n      });\n    },\n\n    clear: () => {\n      set((state) => {\n        storeData(namespace, []);\n        return {\n          items: []\n        };\n      })\n    }\n  }));\n\n}\n\n"],"mappings":";;;AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,SAASC,eAAe,QAAQ,gBAAgB;AAahD,MAAM;EAAEC;AAAU,CAAC,GAAGD,eAAe,CAAC,CAAC;AAEvC,eAAe,SAASE,eAAeA,CAAIC,SAAiB,EAAE;EAG5D,OAAOJ,MAAM,CAAgBK,GAAG,KAAM;IACpCC,KAAK,EAAE,EAAE;IAETC,IAAI,EAAGD,KAAK,IAAKD,GAAG,CAAC;MAAEC;IAAM,CAAC,CAAC;IAE/BN,MAAM,EAAGQ,IAAI,IAAK;MAChB,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC1CH,IAAI,CAACC,SAAS,GAAGA,SAAS;MAC1BD,IAAI,CAACI,SAAS,GAAGH,SAAS;MAC1BJ,GAAG,CAAEQ,KAAK,IAAK;QACb,MAAMP,KAAK,GAAG,CAAC,GAAGO,KAAK,CAACP,KAAK,EAAEE,IAAI,CAAC;QACpCN,SAAS,CAACE,SAAS,EAAEE,KAAK,CAAC;QAC3B,OAAO;UACLA;QACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAEDQ,MAAM,EAAGN,IAAI,IAAK;MAChB,MAAMI,SAAS,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC1CH,IAAI,CAACI,SAAS,GAAGA,SAAS;MAE1BP,GAAG,CAAEQ,KAAK,IAAK;QAEb,MAAMP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAACS,GAAG,CAAEC,CAAC,IAAK;UACnC,IAAIA,CAAC,CAACC,IAAI,IAAIT,IAAI,CAACS,IAAI,EAAE;YACvBD,CAAC,GAAAE,aAAA,CAAAA,aAAA,KAAQF,CAAC,GAAKR,IAAI,CAAE;UACvB;UACA,OAAOQ,CAAC;QACV,CAAC,CAAC;QAEFd,SAAS,CAACE,SAAS,EAAEE,KAAK,CAAC;QAE3B,OAAO;UACLA;QACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAEDa,MAAM,EAAGF,IAAI,IAAK;MAChBZ,GAAG,CAAEQ,KAAK,IAAK;QACb,MAAMP,KAAK,GAAGO,KAAK,CAACP,KAAK,CAACc,MAAM,CAAEZ,IAAI,IAAMA,IAAI,CAACS,IAAI,IAAIA,IAAK,CAAC;QAE/Df,SAAS,CAACE,SAAS,EAAEE,KAAK,CAAC;QAC3B,OAAO;UACLA;QACF,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAEDe,KAAK,EAAEA,CAAA,KAAM;MACXhB,GAAG,CAAEQ,KAAK,IAAK;QACbX,SAAS,CAACE,SAAS,EAAE,EAAE,CAAC;QACxB,OAAO;UACLE,KAAK,EAAE;QACT,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,CAAC;AAEL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}