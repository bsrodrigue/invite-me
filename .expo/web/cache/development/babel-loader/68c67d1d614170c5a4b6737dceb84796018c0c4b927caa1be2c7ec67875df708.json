{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/LogBox/UI/LogBoxMessage.js\";\nimport Linking from '../../Linking/Linking';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction getLinkRanges(string) {\n  const regex = /https?:\\/\\/[^\\s$.?#].[^\\s]*/gi;\n  const matches = [];\n  let regexResult;\n  while ((regexResult = regex.exec(string)) !== null) {\n    if (regexResult != null) {\n      matches.push({\n        lowerBound: regexResult.index,\n        upperBound: regex.lastIndex\n      });\n    }\n  }\n  return matches;\n}\nfunction TappableLinks(props) {\n  const matches = getLinkRanges(props.content);\n  if (matches.length === 0) {\n    return _jsxDEV(Text, {\n      style: props.style,\n      children: props.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n  let fragments = [];\n  let indexCounter = 0;\n  let startIndex = 0;\n  for (const linkRange of matches) {\n    if (startIndex < linkRange.lowerBound) {\n      const text = props.content.substring(startIndex, linkRange.lowerBound);\n      fragments.push(_jsxDEV(Text, {\n        children: text\n      }, ++indexCounter, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 22\n      }, this));\n    }\n    const link = props.content.substring(linkRange.lowerBound, linkRange.upperBound);\n    fragments.push(_jsxDEV(Text, {\n      onPress: () => {\n        Linking.openURL(link);\n      },\n      style: styles.linkText,\n      children: link\n    }, ++indexCounter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this));\n    startIndex = linkRange.upperBound;\n  }\n  if (startIndex < props.content.length) {\n    const text = props.content.substring(startIndex);\n    fragments.push(_jsxDEV(Text, {\n      style: props.style,\n      children: text\n    }, ++indexCounter, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this));\n  }\n  return _jsxDEV(Text, {\n    style: props.style,\n    children: fragments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n}\nconst cleanContent = content => content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, '');\nfunction LogBoxMessage(props) {\n  const {\n    content,\n    substitutions\n  } = props.message;\n  if (props.plaintext === true) {\n    return _jsxDEV(Text, {\n      children: cleanContent(content)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  }\n  const maxLength = props.maxLength != null ? props.maxLength : Infinity;\n  const substitutionStyle = props.style;\n  const elements = [];\n  let length = 0;\n  const createUnderLength = (key, message, style) => {\n    let cleanMessage = cleanContent(message);\n    if (props.maxLength != null) {\n      cleanMessage = cleanMessage.slice(0, props.maxLength - length);\n    }\n    if (length < maxLength) {\n      elements.push(_jsxDEV(TappableLinks, {\n        content: cleanMessage,\n        style: style\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this));\n    }\n    length += cleanMessage.length;\n  };\n  const lastOffset = substitutions.reduce((prevOffset, substitution, index) => {\n    const key = String(index);\n    if (substitution.offset > prevOffset) {\n      const prevPart = content.slice(prevOffset, substitution.offset);\n      createUnderLength(key, prevPart);\n    }\n    const substitutionPart = content.slice(substitution.offset, substitution.offset + substitution.length);\n    createUnderLength(key + '.5', substitutionPart, substitutionStyle);\n    return substitution.offset + substitution.length;\n  }, 0);\n  if (lastOffset < content.length) {\n    const lastPart = content.slice(lastOffset);\n    createUnderLength('-1', lastPart);\n  }\n  return _jsxDEV(_Fragment, {\n    children: elements\n  }, void 0, false);\n}\nconst styles = StyleSheet.create({\n  linkText: {\n    textDecorationLine: 'underline'\n  }\n});\nexport default LogBoxMessage;","map":{"version":3,"names":["Linking","StyleSheet","Text","React","jsxDEV","_jsxDEV","Fragment","_Fragment","getLinkRanges","string","regex","matches","regexResult","exec","push","lowerBound","index","upperBound","lastIndex","TappableLinks","props","content","length","style","children","fileName","_jsxFileName","lineNumber","columnNumber","fragments","indexCounter","startIndex","linkRange","text","substring","link","onPress","openURL","styles","linkText","cleanContent","replace","LogBoxMessage","substitutions","message","plaintext","maxLength","Infinity","substitutionStyle","elements","createUnderLength","key","cleanMessage","slice","lastOffset","reduce","prevOffset","substitution","String","offset","prevPart","substitutionPart","lastPart","create","textDecorationLine"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/LogBox/UI/LogBoxMessage.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {TextStyleProp} from '../../StyleSheet/StyleSheet';\nimport type {Message} from '../Data/parseLogBoxLog';\n\nimport Linking from '../../Linking/Linking';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport * as React from 'react';\n\ntype Props = {\n  message: Message,\n  style: TextStyleProp,\n  plaintext?: ?boolean,\n  maxLength?: ?number,\n  ...\n};\n\ntype Range = {\n  lowerBound: number,\n  upperBound: number,\n};\n\nfunction getLinkRanges(string: string): $ReadOnlyArray<Range> {\n  const regex = /https?:\\/\\/[^\\s$.?#].[^\\s]*/gi;\n  const matches = [];\n\n  let regexResult: RegExp$matchResult | null;\n  while ((regexResult = regex.exec(string)) !== null) {\n    if (regexResult != null) {\n      matches.push({\n        lowerBound: regexResult.index,\n        upperBound: regex.lastIndex,\n      });\n    }\n  }\n\n  return matches;\n}\n\nfunction TappableLinks(props: {\n  content: string,\n  style: void | TextStyleProp,\n}): React.Node {\n  const matches = getLinkRanges(props.content);\n\n  if (matches.length === 0) {\n    // No URLs detected. Just return the content.\n    return <Text style={props.style}>{props.content}</Text>;\n  }\n\n  // URLs were detected. Construct array of Text nodes.\n\n  let fragments: Array<React.Node> = [];\n  let indexCounter = 0;\n  let startIndex = 0;\n\n  for (const linkRange of matches) {\n    if (startIndex < linkRange.lowerBound) {\n      const text = props.content.substring(startIndex, linkRange.lowerBound);\n      fragments.push(<Text key={++indexCounter}>{text}</Text>);\n    }\n\n    const link = props.content.substring(\n      linkRange.lowerBound,\n      linkRange.upperBound,\n    );\n    fragments.push(\n      <Text\n        onPress={() => {\n          // $FlowFixMe[unused-promise]\n          Linking.openURL(link);\n        }}\n        key={++indexCounter}\n        style={styles.linkText}>\n        {link}\n      </Text>,\n    );\n\n    startIndex = linkRange.upperBound;\n  }\n\n  if (startIndex < props.content.length) {\n    const text = props.content.substring(startIndex);\n    fragments.push(\n      <Text key={++indexCounter} style={props.style}>\n        {text}\n      </Text>,\n    );\n  }\n\n  return <Text style={props.style}>{fragments}</Text>;\n}\n\nconst cleanContent = (content: string) =>\n  content.replace(/^(TransformError |Warning: (Warning: )?|Error: )/g, '');\n\nfunction LogBoxMessage(props: Props): React.Node {\n  const {content, substitutions}: Message = props.message;\n\n  if (props.plaintext === true) {\n    return <Text>{cleanContent(content)}</Text>;\n  }\n\n  const maxLength = props.maxLength != null ? props.maxLength : Infinity;\n  const substitutionStyle: TextStyleProp = props.style;\n  const elements = [];\n  let length = 0;\n  const createUnderLength = (\n    key: string | $TEMPORARY$string<'-1'>,\n    message: string,\n    style: void | TextStyleProp,\n  ) => {\n    let cleanMessage = cleanContent(message);\n\n    if (props.maxLength != null) {\n      cleanMessage = cleanMessage.slice(0, props.maxLength - length);\n    }\n\n    if (length < maxLength) {\n      elements.push(\n        <TappableLinks content={cleanMessage} key={key} style={style} />,\n      );\n    }\n\n    length += cleanMessage.length;\n  };\n\n  const lastOffset = substitutions.reduce((prevOffset, substitution, index) => {\n    const key = String(index);\n\n    if (substitution.offset > prevOffset) {\n      const prevPart = content.slice(prevOffset, substitution.offset);\n\n      createUnderLength(key, prevPart);\n    }\n\n    const substitutionPart = content.slice(\n      substitution.offset,\n      substitution.offset + substitution.length,\n    );\n\n    createUnderLength(key + '.5', substitutionPart, substitutionStyle);\n    return substitution.offset + substitution.length;\n  }, 0);\n\n  if (lastOffset < content.length) {\n    const lastPart = content.slice(lastOffset);\n    createUnderLength('-1', lastPart);\n  }\n\n  return <>{elements}</>;\n}\n\nconst styles = StyleSheet.create({\n  linkText: {\n    textDecorationLine: 'underline',\n  },\n});\n\nexport default LogBoxMessage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}