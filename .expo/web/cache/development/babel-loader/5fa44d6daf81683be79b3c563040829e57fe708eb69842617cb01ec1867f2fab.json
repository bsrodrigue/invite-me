{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/src/screens/SettingsScreen/SettingsScreen.tsx\";\nimport { useTheme } from \"@rneui/themed\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button, CardBottomSheet, ExpandingView, Text, TextInput } from \"../../components\";\nimport { useImagePicker } from \"../../hooks\";\nimport { useEffect, useState } from \"react\";\nimport { useAccountStore, useBudgetStore, useTransactionStore, useUserStore } from \"../../stores\";\nimport { useAsyncStorage } from \"../../lib/storage\";\nimport { notify } from \"../../lib\";\nimport { b64ToUri } from '../../lib/base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SettingsScreen({\n  navigation\n}) {\n  const {\n    theme: {\n      colors: {\n        error\n      }\n    }\n  } = useTheme();\n  const {\n    pickImage,\n    imgBase64\n  } = useImagePicker({\n    fileName: \"avatar.jpg\"\n  });\n  const {\n    user: {\n      username\n    },\n    update,\n    clear: clearUser\n  } = useUserStore();\n  const {\n    storeData,\n    clearData\n  } = useAsyncStorage();\n  const [fullname, setFullname] = useState(username);\n  const [userProfileEditorIsOpen, setUserProfileEditorIsOpen] = useState(false);\n  const {\n    clear: clearAccounts\n  } = useAccountStore();\n  const {\n    clear: clearTransactions\n  } = useTransactionStore();\n  const {\n    clear: clearBudgets\n  } = useBudgetStore();\n  const onChangeFullname = () => {\n    update({\n      username: fullname\n    });\n    setUserProfileEditorIsOpen(false);\n    storeData('username', fullname);\n    notify.success(\"Username updated\");\n  };\n  useEffect(() => {\n    const uri = b64ToUri('png', imgBase64);\n    if (imgBase64) {\n      update({\n        avatar: uri\n      });\n      storeData('avatar', uri);\n    }\n  }, [imgBase64]);\n  const settings = [{\n    title: \"Account Settings\",\n    children: [{\n      title: \"Change your avatar\",\n      onPress: async () => {\n        await pickImage();\n      }\n    }, {\n      title: \"Change your username\",\n      onPress: () => {\n        setUserProfileEditorIsOpen(true);\n      }\n    }, {\n      title: \"Export data\",\n      onPress: () => {}\n    }, {\n      title: \"Import data\",\n      onPress: () => {}\n    }, {\n      title: \"Clear data\",\n      danger: true,\n      onPress: () => {\n        clearUser();\n        clearAccounts();\n        clearTransactions();\n        clearBudgets();\n        clearData();\n      }\n    }]\n  }];\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      backgroundColor: \"white\",\n      paddingVertical: 10\n    },\n    children: [_jsxDEV(FlatList, {\n      data: settings,\n      renderItem: ({\n        index,\n        item: {\n          title,\n          children\n        }\n      }) => _jsxDEV(View, {\n        style: {\n          paddingHorizontal: 40,\n          marginVertical: 5\n        },\n        children: [_jsxDEV(Text, {\n          weight: \"700\",\n          style: {\n            opacity: 0.5\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), _jsxDEV(View, {\n          style: {\n            marginVertical: 10\n          },\n          children: _jsxDEV(FlatList, {\n            data: children,\n            renderItem: ({\n              index,\n              item\n            }) => _jsxDEV(TouchableOpacity, {\n              onPress: item.onPress,\n              style: {\n                marginVertical: 10\n              },\n              children: _jsxDEV(Text, {\n                weight: \"600\",\n                style: {\n                  color: item?.danger ? error : \"black\"\n                },\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), _jsxDEV(CardBottomSheet, {\n      isVisible: userProfileEditorIsOpen,\n      onBackdropPress: () => setUserProfileEditorIsOpen(false),\n      children: _jsxDEV(ExpandingView, {\n        style: {\n          paddingHorizontal: 10,\n          paddingVertical: 5\n        },\n        children: [_jsxDEV(TextInput, {\n          label: \"Username\",\n          placeholder: \"Enter your username\",\n          defaultValue: fullname,\n          onChangeText: setFullname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), _jsxDEV(View, {\n          style: {\n            height: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), _jsxDEV(Button, {\n          onPress: onChangeFullname,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["useTheme","FlatList","TouchableOpacity","View","Button","CardBottomSheet","ExpandingView","Text","TextInput","useImagePicker","useEffect","useState","useAccountStore","useBudgetStore","useTransactionStore","useUserStore","useAsyncStorage","notify","b64ToUri","jsxDEV","_jsxDEV","SettingsScreen","navigation","theme","colors","error","pickImage","imgBase64","fileName","user","username","update","clear","clearUser","storeData","clearData","fullname","setFullname","userProfileEditorIsOpen","setUserProfileEditorIsOpen","clearAccounts","clearTransactions","clearBudgets","onChangeFullname","success","uri","avatar","settings","title","children","onPress","danger","style","flex","backgroundColor","paddingVertical","data","renderItem","index","item","paddingHorizontal","marginVertical","weight","opacity","_jsxFileName","lineNumber","columnNumber","color","isVisible","onBackdropPress","label","placeholder","defaultValue","onChangeText","height"],"sources":["/home/rodo/workspace/passion/apps/muh-money/src/screens/SettingsScreen/SettingsScreen.tsx"],"sourcesContent":["import { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { useTheme } from \"@rneui/themed\";\nimport { FlatList, TouchableOpacity, View } from \"react-native\";\nimport { RootStackParamList } from \"../../types\";\nimport { Button, CardBottomSheet, ExpandingView, Text, TextInput } from \"../../components\";\nimport { useImagePicker } from \"../../hooks\";\nimport { useEffect, useState } from \"react\";\nimport { useAccountStore, useBudgetStore, useTransactionStore, useUserStore } from \"../../stores\";\nimport { useAsyncStorage } from \"../../lib/storage\";\nimport { notify } from \"../../lib\";\nimport { b64ToUri } from '../../lib/base64';\n\ntype SettingsScreenProps = NativeStackScreenProps<RootStackParamList, 'Settings'>;\n\nexport default function SettingsScreen({ navigation }: SettingsScreenProps) {\n  const { theme: { colors: { error } } } = useTheme();\n  const { pickImage, imgBase64 } = useImagePicker({ fileName: \"avatar.jpg\" });\n  const { user: { username }, update, clear: clearUser } = useUserStore();\n  const { storeData, clearData } = useAsyncStorage();\n  const [fullname, setFullname] = useState(username);\n  const [userProfileEditorIsOpen, setUserProfileEditorIsOpen] = useState(false);\n\n  const { clear: clearAccounts } = useAccountStore();\n  const { clear: clearTransactions } = useTransactionStore();\n  const { clear: clearBudgets } = useBudgetStore();\n\n\n\n  const onChangeFullname = () => {\n    update({ username: fullname });\n    setUserProfileEditorIsOpen(false);\n    storeData('username', fullname);\n    notify.success(\"Username updated\");\n  }\n\n  useEffect(() => {\n    const uri = b64ToUri('png', imgBase64);\n    if (imgBase64) {\n      update({ avatar: uri });\n      storeData('avatar', uri);\n    }\n\n  }, [imgBase64]);\n\n  const settings = [\n    {\n      title: \"Account Settings\",\n      children:\n        [\n          {\n            title: \"Change your avatar\",\n            onPress: async () => {\n              await pickImage();\n            }\n          },\n          {\n            title: \"Change your username\",\n            onPress: () => {\n              setUserProfileEditorIsOpen(true);\n            }\n          },\n          {\n            title: \"Export data\",\n            onPress: () => { }\n          },\n          {\n            title: \"Import data\",\n            onPress: () => { }\n          },\n          {\n            title: \"Clear data\",\n            danger: true,\n            onPress: () => {\n\n              clearUser();\n              clearAccounts();\n              clearTransactions();\n              clearBudgets();\n\n              clearData();\n            }\n          },\n        ]\n    },\n  ];\n\n  return (\n    <View style={{ flex: 1, backgroundColor: \"white\", paddingVertical: 10 }}>\n      <FlatList data={settings}\n        renderItem={({ index, item: { title, children } }) => (\n          <View key={index} style={{ paddingHorizontal: 40, marginVertical: 5 }}>\n            <Text weight=\"700\" style={{ opacity: 0.5 }}>{title}</Text>\n            <View style={{ marginVertical: 10 }}>\n              <FlatList\n                data={children} renderItem={({ index, item }) => (\n                  <TouchableOpacity\n                    onPress={item.onPress}\n                    style={{ marginVertical: 10 }} key={index}>\n                    <Text weight=\"600\" style={{ color: item?.danger ? error : \"black\" }}>{item.title}</Text>\n                  </TouchableOpacity>\n                )} />\n            </View>\n          </View>\n        )} />\n      <CardBottomSheet\n        isVisible={userProfileEditorIsOpen}\n        onBackdropPress={() => setUserProfileEditorIsOpen(false)}>\n        <ExpandingView style={{ paddingHorizontal: 10, paddingVertical: 5 }}>\n          <TextInput\n            label=\"Username\"\n            placeholder=\"Enter your username\"\n            defaultValue={fullname}\n            onChangeText={setFullname} />\n          <View style={{ height: 10 }} />\n          <Button onPress={onChangeFullname}>Submit</Button>\n        </ExpandingView>\n      </CardBottomSheet>\n    </View>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}