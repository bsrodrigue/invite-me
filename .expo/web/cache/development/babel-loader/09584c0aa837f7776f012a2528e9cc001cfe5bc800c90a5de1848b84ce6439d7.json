{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/src/screens/SuccessScreen/SuccessScreen.tsx\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    paddingHorizontal: 40,\n    paddingVertical: 15,\n    paddingTop: 100\n  },\n  title: {\n    fontSize: 40,\n    fontFamily: \"Quicksand-700\",\n    textAlign: \"center\",\n    marginBottom: 10\n  },\n  subtitle: {\n    fontSize: 20,\n    fontFamily: \"Quicksand-600\",\n    opacity: 0.5,\n    textAlign: \"center\"\n  },\n  confirm: {\n    fontSize: 20,\n    fontFamily: \"Quicksand-700\"\n  }\n});\nexport default function SuccessScreen({\n  navigation,\n  route\n}) {\n  const {} = route.params;\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(View, {\n      children: [_jsxDEV(Text, {\n        style: styles.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: styles.subtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: async () => {},\n      children: _jsxDEV(Text, {\n        style: styles.confirm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["styles","StyleSheet","create","container","flex","backgroundColor","justifyContent","alignItems","paddingHorizontal","paddingVertical","paddingTop","title","fontSize","fontFamily","textAlign","marginBottom","subtitle","opacity","confirm","SuccessScreen","navigation","route","params","_jsxDEV","View","style","children","Text","fileName","_jsxFileName","lineNumber","columnNumber","TouchableOpacity","onPress"],"sources":["/home/rodo/workspace/passion/apps/muh-money/src/screens/SuccessScreen/SuccessScreen.tsx"],"sourcesContent":["import { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { StyleSheet, Text, TouchableOpacity, View } from \"react-native\";\nimport { RootStackParamList } from \"../../types\";\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"white\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    paddingHorizontal: 40,\n    paddingVertical: 15,\n    paddingTop: 100,\n  },\n\n  title: {\n    fontSize: 40,\n    fontFamily: \"Quicksand-700\",\n    textAlign: \"center\",\n    marginBottom: 10,\n  },\n\n  subtitle: {\n    fontSize: 20,\n    fontFamily: \"Quicksand-600\",\n    opacity: 0.5,\n    textAlign: \"center\"\n  },\n\n  confirm: {\n    fontSize: 20,\n    fontFamily: \"Quicksand-700\",\n  }\n});\n\n\ntype SuccessScreenProps = NativeStackScreenProps<RootStackParamList, 'Success'>;\n\nexport default function SuccessScreen({ navigation, route }: SuccessScreenProps) {\n  const { } = route.params;\n\n  return (\n    <View style={styles.container}>\n      <View>\n        <Text style={styles.title}></Text>\n        <Text style={styles.subtitle}></Text>\n      </View>\n      <TouchableOpacity onPress={async () => {\n        //navigation.navigate()\n      }}>\n        <Text style={styles.confirm}></Text>\n      </TouchableOpacity>\n    </View>\n  )\n}\n"],"mappings":";;;;;;AAIA,MAAMA,MAAM,GAAGC,UAAU,CAACC,MAAM,CAAC;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,OAAO;IACxBC,cAAc,EAAE,cAAc;IAC9BC,UAAU,EAAE,QAAQ;IACpBC,iBAAiB,EAAE,EAAE;IACrBC,eAAe,EAAE,EAAE;IACnBC,UAAU,EAAE;EACd,CAAC;EAEDC,KAAK,EAAE;IACLC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,eAAe;IAC3BC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE;EAChB,CAAC;EAEDC,QAAQ,EAAE;IACRJ,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,eAAe;IAC3BI,OAAO,EAAE,GAAG;IACZH,SAAS,EAAE;EACb,CAAC;EAEDI,OAAO,EAAE;IACPN,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAKF,eAAe,SAASM,aAAaA,CAAC;EAAEC,UAAU;EAAEC;AAA0B,CAAC,EAAE;EAC/E,MAAM,CAAE,CAAC,GAAGA,KAAK,CAACC,MAAM;EAExB,OACEC,OAAA,CAACC,IAAI;IAACC,KAAK,EAAEzB,MAAM,CAACG,SAAU;IAAAuB,QAAA,GAC5BH,OAAA,CAACC,IAAI;MAAAE,QAAA,GACHH,OAAA,CAACI,IAAI;QAACF,KAAK,EAAEzB,MAAM,CAACW;MAAM;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EAClCR,OAAA,CAACI,IAAI;QAACF,KAAK,EAAEzB,MAAM,CAACgB;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACPR,OAAA,CAACS,gBAAgB;MAACC,OAAO,EAAE,MAAAA,CAAA,KAAY,CAEvC,CAAE;MAAAP,QAAA,EACAH,OAAA,CAACI,IAAI;QAACF,KAAK,EAAEzB,MAAM,CAACkB;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}