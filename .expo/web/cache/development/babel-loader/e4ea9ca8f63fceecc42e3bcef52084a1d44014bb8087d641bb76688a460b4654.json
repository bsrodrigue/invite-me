{"ast":null,"code":"import invariant from 'invariant';\nimport * as React from 'react';\nexport default class StateSafePureComponent extends React.PureComponent {\n  _inAsyncStateUpdate = false;\n  constructor(props) {\n    super(props);\n    this._installSetStateHooks();\n  }\n  setState(partialState, callback) {\n    if (typeof partialState === 'function') {\n      super.setState((state, props) => {\n        this._inAsyncStateUpdate = true;\n        let ret;\n        try {\n          ret = partialState(state, props);\n        } catch (err) {\n          throw err;\n        } finally {\n          this._inAsyncStateUpdate = false;\n        }\n        return ret;\n      }, callback);\n    } else {\n      super.setState(partialState, callback);\n    }\n  }\n  _installSetStateHooks() {\n    const that = this;\n    let {\n      props,\n      state\n    } = this;\n    Object.defineProperty(this, 'props', {\n      get() {\n        invariant(!that._inAsyncStateUpdate, '\"this.props\" should not be accessed during state updates');\n        return props;\n      },\n      set(newProps) {\n        props = newProps;\n      }\n    });\n    Object.defineProperty(this, 'state', {\n      get() {\n        invariant(!that._inAsyncStateUpdate, '\"this.state\" should not be acceessed during state updates');\n        return state;\n      },\n      set(newState) {\n        state = newState;\n      }\n    });\n  }\n}","map":{"version":3,"names":["invariant","React","StateSafePureComponent","PureComponent","_inAsyncStateUpdate","constructor","props","_installSetStateHooks","setState","partialState","callback","state","ret","err","that","Object","defineProperty","get","set","newProps","newState"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/@react-native/virtualized-lists/Lists/StateSafePureComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport invariant from 'invariant';\nimport * as React from 'react';\n\n/**\n * `setState` is called asynchronously, and should not rely on the value of\n * `this.props` or `this.state`:\n * https://react.dev/docs/state-and-lifecycle.html#state-updates-may-be-asynchronous\n *\n * SafePureComponent adds runtime enforcement, to catch cases where these\n * variables are read in a state updater function, instead of the ones passed\n * in.\n */\nexport default class StateSafePureComponent<\n  Props,\n  State: interface {},\n> extends React.PureComponent<Props, State> {\n  _inAsyncStateUpdate = false;\n\n  constructor(props: Props) {\n    super(props);\n    this._installSetStateHooks();\n  }\n\n  setState(\n    partialState: ?(Partial<State> | ((State, Props) => ?Partial<State>)),\n    callback?: () => mixed,\n  ): void {\n    if (typeof partialState === 'function') {\n      super.setState((state, props) => {\n        this._inAsyncStateUpdate = true;\n        let ret;\n        try {\n          ret = partialState(state, props);\n        } catch (err) {\n          throw err;\n        } finally {\n          this._inAsyncStateUpdate = false;\n        }\n        return ret;\n      }, callback);\n    } else {\n      super.setState(partialState, callback);\n    }\n  }\n\n  _installSetStateHooks() {\n    const that = this;\n    let {props, state} = this;\n\n    Object.defineProperty(this, 'props', {\n      get() {\n        invariant(\n          !that._inAsyncStateUpdate,\n          '\"this.props\" should not be accessed during state updates',\n        );\n        return props;\n      },\n      set(newProps: Props) {\n        props = newProps;\n      },\n    });\n    Object.defineProperty(this, 'state', {\n      get() {\n        invariant(\n          !that._inAsyncStateUpdate,\n          '\"this.state\" should not be acceessed during state updates',\n        );\n        return state;\n      },\n      set(newState: State) {\n        state = newState;\n      },\n    });\n  }\n}\n"],"mappings":"AAUA,OAAOA,SAAS,MAAM,WAAW;AACjC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAW9B,eAAe,MAAMC,sBAAsB,SAGjCD,KAAK,CAACE,aAAa,CAAe;EAC1CC,mBAAmB,GAAG,KAAK;EAE3BC,WAAWA,CAACC,KAAY,EAAE;IACxB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,qBAAqB,CAAC,CAAC;EAC9B;EAEAC,QAAQA,CACNC,YAAqE,EACrEC,QAAsB,EAChB;IACN,IAAI,OAAOD,YAAY,KAAK,UAAU,EAAE;MACtC,KAAK,CAACD,QAAQ,CAAC,CAACG,KAAK,EAAEL,KAAK,KAAK;QAC/B,IAAI,CAACF,mBAAmB,GAAG,IAAI;QAC/B,IAAIQ,GAAG;QACP,IAAI;UACFA,GAAG,GAAGH,YAAY,CAACE,KAAK,EAAEL,KAAK,CAAC;QAClC,CAAC,CAAC,OAAOO,GAAG,EAAE;UACZ,MAAMA,GAAG;QACX,CAAC,SAAS;UACR,IAAI,CAACT,mBAAmB,GAAG,KAAK;QAClC;QACA,OAAOQ,GAAG;MACZ,CAAC,EAAEF,QAAQ,CAAC;IACd,CAAC,MAAM;MACL,KAAK,CAACF,QAAQ,CAACC,YAAY,EAAEC,QAAQ,CAAC;IACxC;EACF;EAEAH,qBAAqBA,CAAA,EAAG;IACtB,MAAMO,IAAI,GAAG,IAAI;IACjB,IAAI;MAACR,KAAK;MAAEK;IAAK,CAAC,GAAG,IAAI;IAEzBI,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;MACnCC,GAAGA,CAAA,EAAG;QACJjB,SAAS,CACP,CAACc,IAAI,CAACV,mBAAmB,EACzB,0DACF,CAAC;QACD,OAAOE,KAAK;MACd,CAAC;MACDY,GAAGA,CAACC,QAAe,EAAE;QACnBb,KAAK,GAAGa,QAAQ;MAClB;IACF,CAAC,CAAC;IACFJ,MAAM,CAACC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;MACnCC,GAAGA,CAAA,EAAG;QACJjB,SAAS,CACP,CAACc,IAAI,CAACV,mBAAmB,EACzB,2DACF,CAAC;QACD,OAAOO,KAAK;MACd,CAAC;MACDO,GAAGA,CAACE,QAAe,EAAE;QACnBT,KAAK,GAAGS,QAAQ;MAClB;IACF,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}