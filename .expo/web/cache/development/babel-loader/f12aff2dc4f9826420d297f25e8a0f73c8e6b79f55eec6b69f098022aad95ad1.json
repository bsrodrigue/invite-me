{"ast":null,"code":"'use strict';\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { AnimatedEvent, attachNativeEvent } from './AnimatedEvent';\nimport AnimatedImplementation from './AnimatedImplementation';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport AnimatedColor from './nodes/AnimatedColor';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\nlet inAnimationCallback = false;\nfunction mockAnimationStart(start) {\n  return callback => {\n    const guardedCallback = callback == null ? callback : (...args) => {\n      if (inAnimationCallback) {\n        console.warn('Ignoring recursive animation callback when running mock animations');\n        return;\n      }\n      inAnimationCallback = true;\n      try {\n        callback(...args);\n      } finally {\n        inAnimationCallback = false;\n      }\n    };\n    start(guardedCallback);\n  };\n}\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  }\n};\nconst mockCompositeAnimation = animations => _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n  start: mockAnimationStart(callback => {\n    animations.forEach(animation => animation.start());\n    callback?.({\n      finished: true\n    });\n  })\n});\nconst spring = function (value, config) {\n  const anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(callback => {\n      anyValue.setValue(config.toValue);\n      callback?.({\n        finished: true\n      });\n    })\n  });\n};\nconst timing = function (value, config) {\n  const anyValue = value;\n  return _objectSpread(_objectSpread({}, emptyAnimation), {}, {\n    start: mockAnimationStart(callback => {\n      anyValue.setValue(config.toValue);\n      callback?.({\n        finished: true\n      });\n    })\n  });\n};\nconst decay = function (value, config) {\n  return emptyAnimation;\n};\nconst sequence = function (animations) {\n  return mockCompositeAnimation(animations);\n};\nconst parallel = function (animations, config) {\n  return mockCompositeAnimation(animations);\n};\nconst delay = function (time) {\n  return emptyAnimation;\n};\nconst stagger = function (time, animations) {\n  return mockCompositeAnimation(animations);\n};\nconst loop = function (animation, {\n  iterations = -1\n} = {}) {\n  return emptyAnimation;\n};\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent\n};","map":{"version":3,"names":["_defineProperty","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","AnimatedEvent","attachNativeEvent","AnimatedImplementation","createAnimatedComponent","AnimatedColor","AnimatedInterpolation","AnimatedNode","AnimatedValue","AnimatedValueXY","inAnimationCallback","mockAnimationStart","start","callback","guardedCallback","args","console","warn","emptyAnimation","stop","reset","_startNativeLoop","_isUsingNativeDriver","mockCompositeAnimation","animations","animation","finished","spring","value","config","anyValue","setValue","toValue","timing","decay","sequence","parallel","delay","time","stagger","loop","iterations","Value","ValueXY","Color","Interpolation","Node","add","subtract","divide","multiply","modulo","diffClamp","event","forkEvent","unforkEvent","Event"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Animated/AnimatedMock.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {Numeric as AnimatedNumeric} from './AnimatedImplementation';\nimport type {EndResult} from './animations/Animation';\nimport type {EndCallback} from './animations/Animation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\n\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\nimport AnimatedImplementation from './AnimatedImplementation';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport AnimatedColor from './nodes/AnimatedColor';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\n\n/**\n * Animations are a source of flakiness in snapshot testing. This mock replaces\n * animation functions from AnimatedImplementation with empty animations for\n * predictability in tests. When possible the animation will run immediately\n * to the final state.\n */\n\n// Prevent any callback invocation from recursively triggering another\n// callback, which may trigger another animation\nlet inAnimationCallback = false;\nfunction mockAnimationStart(\n  start: (callback?: ?EndCallback) => void,\n): (callback?: ?EndCallback) => void {\n  return callback => {\n    const guardedCallback =\n      callback == null\n        ? callback\n        : (...args: Array<EndResult>) => {\n            if (inAnimationCallback) {\n              console.warn(\n                'Ignoring recursive animation callback when running mock animations',\n              );\n              return;\n            }\n            inAnimationCallback = true;\n            try {\n              callback(...args);\n            } finally {\n              inAnimationCallback = false;\n            }\n          };\n    start(guardedCallback);\n  };\n}\n\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n  ...\n};\n\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  },\n};\n\nconst mockCompositeAnimation = (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation => ({\n  ...emptyAnimation,\n  start: mockAnimationStart((callback?: ?EndCallback): void => {\n    animations.forEach(animation => animation.start());\n    callback?.({finished: true});\n  }),\n});\n\nconst spring = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst timing = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst decay = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst sequence = function (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype ParallelConfig = {stopTogether?: boolean, ...};\nconst parallel = function (\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\nconst delay = function (time: number): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst stagger = function (\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype LoopAnimationConfig = {\n  iterations: number,\n  resetBeforeIteration?: boolean,\n  ...\n};\n\nconst loop = function (\n  animation: CompositeAnimation,\n  // $FlowFixMe[prop-missing]\n  {iterations = -1}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nexport type {AnimatedNumeric as Numeric};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}