{"ast":null,"code":"'use strict';\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js\";\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst ElementBox = require('./ElementBox');\nconst React = require('react');\nfunction InspectorOverlay({\n  inspected,\n  onTouchPoint\n}) {\n  const findViewForTouchEvent = e => {\n    const {\n      locationX,\n      locationY\n    } = e.nativeEvent.touches[0];\n    onTouchPoint(locationX, locationY);\n  };\n  const handleStartShouldSetResponder = e => {\n    findViewForTouchEvent(e);\n    return true;\n  };\n  let content = null;\n  if (inspected) {\n    content = _reactJsxDevRuntime.jsxDEV(ElementBox, {\n      frame: inspected.frame,\n      style: inspected.style\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }, this);\n  }\n  return _reactJsxDevRuntime.jsxDEV(View, {\n    onStartShouldSetResponder: handleStartShouldSetResponder,\n    onResponderMove: findViewForTouchEvent,\n    nativeID: \"inspectorOverlay\",\n    style: styles.inspector,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  }\n});\nmodule.exports = InspectorOverlay;","map":{"version":3,"names":["_reactJsxDevRuntime","require","_jsxFileName","View","StyleSheet","ElementBox","React","InspectorOverlay","inspected","onTouchPoint","findViewForTouchEvent","e","locationX","locationY","nativeEvent","touches","handleStartShouldSetResponder","content","jsxDEV","frame","style","fileName","lineNumber","columnNumber","onStartShouldSetResponder","onResponderMove","nativeID","styles","inspector","children","create","backgroundColor","position","left","top","right","bottom","module","exports"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\nimport type {InspectedElement} from './Inspector';\n\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst ElementBox = require('./ElementBox');\nconst React = require('react');\n\ntype Props = $ReadOnly<{|\n  inspected?: ?InspectedElement,\n  onTouchPoint: (locationX: number, locationY: number) => void,\n|}>;\n\nfunction InspectorOverlay({inspected, onTouchPoint}: Props): React.Node {\n  const findViewForTouchEvent = (e: PressEvent) => {\n    const {locationX, locationY} = e.nativeEvent.touches[0];\n\n    onTouchPoint(locationX, locationY);\n  };\n\n  const handleStartShouldSetResponder = (e: PressEvent): boolean => {\n    findViewForTouchEvent(e);\n    return true;\n  };\n\n  let content = null;\n  if (inspected) {\n    content = <ElementBox frame={inspected.frame} style={inspected.style} />;\n  }\n\n  return (\n    <View\n      onStartShouldSetResponder={handleStartShouldSetResponder}\n      onResponderMove={findViewForTouchEvent}\n      nativeID=\"inspectorOverlay\" /* TODO: T68258846. */\n      style={styles.inspector}>\n      {content}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n\nmodule.exports = InspectorOverlay;\n"],"mappings":"AAUA,YAAY;;AAAC,IAAAA,mBAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA;AAKb,MAAMC,IAAI,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAC/C,MAAMG,UAAU,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AACtD,MAAMI,UAAU,GAAGJ,OAAO,CAAC,cAAc,CAAC;AAC1C,MAAMK,KAAK,GAAGL,OAAO,CAAC,OAAO,CAAC;AAO9B,SAASM,gBAAgBA,CAAC;EAACC,SAAS;EAAEC;AAAmB,CAAC,EAAc;EACtE,MAAMC,qBAAqB,GAAIC,CAAa,IAAK;IAC/C,MAAM;MAACC,SAAS;MAAEC;IAAS,CAAC,GAAGF,CAAC,CAACG,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC;IAEvDN,YAAY,CAACG,SAAS,EAAEC,SAAS,CAAC;EACpC,CAAC;EAED,MAAMG,6BAA6B,GAAIL,CAAa,IAAc;IAChED,qBAAqB,CAACC,CAAC,CAAC;IACxB,OAAO,IAAI;EACb,CAAC;EAED,IAAIM,OAAO,GAAG,IAAI;EAClB,IAAIT,SAAS,EAAE;IACbS,OAAO,GAAGjB,mBAAA,CAAAkB,MAAA,CAACb,UAAU;MAACc,KAAK,EAAEX,SAAS,CAACW,KAAM;MAACC,KAAK,EAAEZ,SAAS,CAACY;IAAM;MAAAC,QAAA,EAAAnB,YAAA;MAAAoB,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1E;EAEA,OACEvB,mBAAA,CAAAkB,MAAA,CAACf,IAAI;IACHqB,yBAAyB,EAAER,6BAA8B;IACzDS,eAAe,EAAEf,qBAAsB;IACvCgB,QAAQ,EAAC,kBAAkB;IAC3BN,KAAK,EAAEO,MAAM,CAACC,SAAU;IAAAC,QAAA,EACvBZ;EAAO;IAAAI,QAAA,EAAAnB,YAAA;IAAAoB,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEX;AAEA,MAAMI,MAAM,GAAGvB,UAAU,CAAC0B,MAAM,CAAC;EAC/BF,SAAS,EAAE;IACTG,eAAe,EAAE,aAAa;IAC9BC,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC;IACNC,KAAK,EAAE,CAAC;IACRC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG/B,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}