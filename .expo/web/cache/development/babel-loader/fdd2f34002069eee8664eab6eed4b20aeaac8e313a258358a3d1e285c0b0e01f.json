{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/LogBox/LogBoxNotificationContainer.js\";\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxLog from './Data/LogBoxLog';\nimport LogBoxLogNotification from './UI/LogBoxNotification';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function _LogBoxNotificationContainer(props) {\n  const {\n    logs\n  } = props;\n  const onDismissWarns = () => {\n    LogBoxData.clearWarnings();\n  };\n  const onDismissErrors = () => {\n    LogBoxData.clearErrors();\n  };\n  const setSelectedLog = index => {\n    LogBoxData.setSelectedLog(index);\n  };\n  function openLog(log) {\n    let index = logs.length - 1;\n    while (index > 0 && logs[index] !== log) {\n      index -= 1;\n    }\n    setSelectedLog(index);\n  }\n  if (logs.length === 0 || props.isDisabled === true) {\n    return null;\n  }\n  const warnings = logs.filter(log => log.level === 'warn');\n  const errors = logs.filter(log => log.level === 'error' || log.level === 'fatal');\n  return _jsxDEV(View, {\n    style: styles.list,\n    children: [warnings.length > 0 && _jsxDEV(View, {\n      style: styles.toast,\n      children: _jsxDEV(LogBoxLogNotification, {\n        log: warnings[warnings.length - 1],\n        level: \"warn\",\n        totalLogCount: warnings.length,\n        onPressOpen: () => openLog(warnings[warnings.length - 1]),\n        onPressDismiss: onDismissWarns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), errors.length > 0 && _jsxDEV(View, {\n      style: styles.toast,\n      children: _jsxDEV(LogBoxLogNotification, {\n        log: errors[errors.length - 1],\n        level: \"error\",\n        totalLogCount: errors.length,\n        onPressOpen: () => openLog(errors[errors.length - 1]),\n        onPressDismiss: onDismissErrors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  list: {\n    bottom: 20,\n    left: 10,\n    right: 10,\n    position: 'absolute'\n  },\n  toast: {\n    borderRadius: 8,\n    marginBottom: 5,\n    overflow: 'hidden'\n  }\n});\nexport default LogBoxData.withSubscription(_LogBoxNotificationContainer);","map":{"version":3,"names":["View","StyleSheet","LogBoxData","LogBoxLog","LogBoxLogNotification","React","jsxDEV","_jsxDEV","_LogBoxNotificationContainer","props","logs","onDismissWarns","clearWarnings","onDismissErrors","clearErrors","setSelectedLog","index","openLog","log","length","isDisabled","warnings","filter","level","errors","style","styles","list","children","toast","totalLogCount","onPressOpen","onPressDismiss","fileName","_jsxFileName","lineNumber","columnNumber","create","bottom","left","right","position","borderRadius","marginBottom","overflow","withSubscription"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/LogBox/LogBoxNotificationContainer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxLog from './Data/LogBoxLog';\nimport LogBoxLogNotification from './UI/LogBoxNotification';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  logs: $ReadOnlyArray<LogBoxLog>,\n  selectedLogIndex: number,\n  isDisabled?: ?boolean,\n|}>;\n\nexport function _LogBoxNotificationContainer(props: Props): React.Node {\n  const {logs} = props;\n\n  const onDismissWarns = () => {\n    LogBoxData.clearWarnings();\n  };\n  const onDismissErrors = () => {\n    LogBoxData.clearErrors();\n  };\n\n  const setSelectedLog = (index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  };\n\n  function openLog(log: LogBoxLog) {\n    let index = logs.length - 1;\n\n    // Stop at zero because if we don't find any log, we'll open the first log.\n    while (index > 0 && logs[index] !== log) {\n      index -= 1;\n    }\n    setSelectedLog(index);\n  }\n\n  if (logs.length === 0 || props.isDisabled === true) {\n    return null;\n  }\n\n  const warnings = logs.filter(log => log.level === 'warn');\n  const errors = logs.filter(\n    log => log.level === 'error' || log.level === 'fatal',\n  );\n  return (\n    <View style={styles.list}>\n      {warnings.length > 0 && (\n        <View style={styles.toast}>\n          <LogBoxLogNotification\n            log={warnings[warnings.length - 1]}\n            level=\"warn\"\n            totalLogCount={warnings.length}\n            onPressOpen={() => openLog(warnings[warnings.length - 1])}\n            onPressDismiss={onDismissWarns}\n          />\n        </View>\n      )}\n      {errors.length > 0 && (\n        <View style={styles.toast}>\n          <LogBoxLogNotification\n            log={errors[errors.length - 1]}\n            level=\"error\"\n            totalLogCount={errors.length}\n            onPressOpen={() => openLog(errors[errors.length - 1])}\n            onPressDismiss={onDismissErrors}\n          />\n        </View>\n      )}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  list: {\n    bottom: 20,\n    left: 10,\n    right: 10,\n    position: 'absolute',\n  },\n  toast: {\n    borderRadius: 8,\n    marginBottom: 5,\n    overflow: 'hidden',\n  },\n});\n\nexport default (LogBoxData.withSubscription(\n  _LogBoxNotificationContainer,\n): React.AbstractComponent<{||}>);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}