{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"children\", \"style\", \"onPress\", \"to\", \"accessibilityRole\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport { Link, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TabBarIcon from './TabBarIcon';\nexport default function BottomTabBarItem(_ref) {\n  let {\n    focused,\n    route,\n    descriptor,\n    label,\n    icon,\n    badge,\n    badgeStyle,\n    to,\n    button = _ref2 => {\n      let {\n          children,\n          style,\n          onPress,\n          to,\n          accessibilityRole\n        } = _ref2,\n        rest = _objectWithoutProperties(_ref2, _excluded);\n      if (Platform.OS === 'web' && to) {\n        return React.createElement(Link, _extends({}, rest, {\n          to: to,\n          style: [styles.button, style],\n          onPress: e => {\n            if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n              e.preventDefault();\n              onPress === null || onPress === void 0 ? void 0 : onPress(e);\n            }\n          }\n        }), children);\n      } else {\n        return React.createElement(Pressable, _extends({}, rest, {\n          accessibilityRole: accessibilityRole,\n          onPress: onPress,\n          style: style\n        }), children);\n      }\n    },\n    accessibilityLabel,\n    testID,\n    onPress,\n    onLongPress,\n    horizontal,\n    activeTintColor: customActiveTintColor,\n    inactiveTintColor: customInactiveTintColor,\n    activeBackgroundColor = 'transparent',\n    inactiveBackgroundColor = 'transparent',\n    showLabel = true,\n    allowFontScaling,\n    labelStyle,\n    iconStyle,\n    style\n  } = _ref;\n  const {\n    colors\n  } = useTheme();\n  const activeTintColor = customActiveTintColor === undefined ? colors.primary : customActiveTintColor;\n  const inactiveTintColor = customInactiveTintColor === undefined ? Color(colors.text).mix(Color(colors.card), 0.5).hex() : customInactiveTintColor;\n  const renderLabel = _ref3 => {\n    let {\n      focused\n    } = _ref3;\n    if (showLabel === false) {\n      return null;\n    }\n    const color = focused ? activeTintColor : inactiveTintColor;\n    if (typeof label === 'string') {\n      return React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.label, {\n          color\n        }, horizontal ? styles.labelBeside : styles.labelBeneath, labelStyle],\n        allowFontScaling: allowFontScaling\n      }, label);\n    }\n    const {\n      options\n    } = descriptor;\n    const children = typeof options.tabBarLabel === 'string' ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n      children\n    });\n  };\n  const renderIcon = _ref4 => {\n    let {\n      focused\n    } = _ref4;\n    if (icon === undefined) {\n      return null;\n    }\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n    return React.createElement(TabBarIcon, {\n      route: route,\n      horizontal: horizontal,\n      badge: badge,\n      badgeStyle: badgeStyle,\n      activeOpacity: activeOpacity,\n      inactiveOpacity: inactiveOpacity,\n      activeTintColor: activeTintColor,\n      inactiveTintColor: inactiveTintColor,\n      renderIcon: icon,\n      style: iconStyle\n    });\n  };\n  const scene = {\n    route,\n    focused\n  };\n  const backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    accessibilityRole: Platform.select({\n      ios: 'button',\n      default: 'tab'\n    }),\n    accessibilityState: {\n      selected: focused\n    },\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [styles.tab, {\n      backgroundColor\n    }, horizontal ? styles.tabLandscape : styles.tabPortrait, style],\n    children: React.createElement(React.Fragment, null, renderIcon(scene), renderLabel(scene))\n  });\n}\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column'\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  },\n  labelBeneath: {\n    fontSize: 10\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3\n  },\n  button: {\n    display: 'flex'\n  }\n});","map":{"version":3,"names":["Link","useTheme","Color","React","Platform","Pressable","StyleSheet","Text","TabBarIcon","BottomTabBarItem","_ref","focused","route","descriptor","label","icon","badge","badgeStyle","to","button","_ref2","children","style","onPress","accessibilityRole","rest","_objectWithoutProperties","_excluded","OS","createElement","_extends","styles","e","metaKey","altKey","ctrlKey","shiftKey","preventDefault","accessibilityLabel","testID","onLongPress","horizontal","activeTintColor","customActiveTintColor","inactiveTintColor","customInactiveTintColor","activeBackgroundColor","inactiveBackgroundColor","showLabel","allowFontScaling","labelStyle","iconStyle","colors","undefined","primary","text","mix","card","hex","renderLabel","_ref3","color","numberOfLines","labelBeside","labelBeneath","options","tabBarLabel","title","name","position","renderIcon","_ref4","activeOpacity","inactiveOpacity","scene","backgroundColor","select","ios","default","accessibilityState","selected","accessibilityStates","tab","tabLandscape","tabPortrait","Fragment","create","flex","alignItems","justifyContent","flexDirection","textAlign","fontSize","marginLeft","marginTop","display"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/@react-navigation/bottom-tabs/src/views/BottomTabItem.tsx"],"sourcesContent":["import { Link, Route, useTheme } from '@react-navigation/native';\nimport Color from 'color';\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  StyleProp,\n  StyleSheet,\n  Text,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\n\nimport type {\n  BottomTabBarButtonProps,\n  BottomTabDescriptor,\n  LabelPosition,\n} from '../types';\nimport TabBarIcon from './TabBarIcon';\n\ntype Props = {\n  /**\n   * Whether the tab is focused.\n   */\n  focused: boolean;\n  /**\n   * The route object which should be specified by the tab.\n   */\n  route: Route<string>;\n  /**\n   * The descriptor object for the route.\n   */\n  descriptor: BottomTabDescriptor;\n  /**\n   * The label text of the tab.\n   */\n  label:\n    | string\n    | ((props: {\n        focused: boolean;\n        color: string;\n        position: LabelPosition;\n        children: string;\n      }) => React.ReactNode);\n  /**\n   * Icon to display for the tab.\n   */\n  icon: (props: {\n    focused: boolean;\n    size: number;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Text to show in a badge on the tab icon.\n   */\n  badge?: number | string;\n  /**\n   * Custom style for the badge.\n   */\n  badgeStyle?: StyleProp<TextStyle>;\n  /**\n   * URL to use for the link to the tab.\n   */\n  to?: string;\n  /**\n   * The button for the tab. Uses a `TouchableWithoutFeedback` by default.\n   */\n  button?: (props: BottomTabBarButtonProps) => React.ReactNode;\n  /**\n   * The accessibility label for the tab.\n   */\n  accessibilityLabel?: string;\n  /**\n   * An unique ID for testing for the tab.\n   */\n  testID?: string;\n  /**\n   * Function to execute on press in React Native.\n   * On the web, this will use onClick.\n   */\n  onPress: (\n    e: React.MouseEvent<HTMLElement, MouseEvent> | GestureResponderEvent\n  ) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress: (e: GestureResponderEvent) => void;\n  /**\n   * Whether the label should be aligned with the icon horizontally.\n   */\n  horizontal: boolean;\n  /**\n   * Color for the icon and label when the item is active.\n   */\n  activeTintColor?: string;\n  /**\n   * Color for the icon and label when the item is inactive.\n   */\n  inactiveTintColor?: string;\n  /**\n   * Background color for item when its active.\n   */\n  activeBackgroundColor?: string;\n  /**\n   * Background color for item when its inactive.\n   */\n  inactiveBackgroundColor?: string;\n  /**\n   * Whether to show the label text for the tab.\n   */\n  showLabel?: boolean;\n  /**\n   * Whether to allow scaling the font for the label for accessibility purposes.\n   */\n  allowFontScaling?: boolean;\n  /**\n   * Style object for the label element.\n   */\n  labelStyle?: StyleProp<TextStyle>;\n  /**\n   * Style object for the icon element.\n   */\n  iconStyle?: StyleProp<ViewStyle>;\n  /**\n   * Style object for the wrapper element.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nexport default function BottomTabBarItem({\n  focused,\n  route,\n  descriptor,\n  label,\n  icon,\n  badge,\n  badgeStyle,\n  to,\n  button = ({\n    children,\n    style,\n    onPress,\n    to,\n    accessibilityRole,\n    ...rest\n  }: BottomTabBarButtonProps) => {\n    if (Platform.OS === 'web' && to) {\n      // React Native Web doesn't forward `onClick` if we use `TouchableWithoutFeedback`.\n      // We need to use `onClick` to be able to prevent default browser handling of links.\n      return (\n        <Link\n          {...rest}\n          to={to}\n          style={[styles.button, style]}\n          onPress={(e: any) => {\n            if (\n              !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n              (e.button == null || e.button === 0) // ignore everything but left clicks\n            ) {\n              e.preventDefault();\n              onPress?.(e);\n            }\n          }}\n        >\n          {children}\n        </Link>\n      );\n    } else {\n      return (\n        <Pressable\n          {...rest}\n          accessibilityRole={accessibilityRole}\n          onPress={onPress}\n          style={style}\n        >\n          {children}\n        </Pressable>\n      );\n    }\n  },\n  accessibilityLabel,\n  testID,\n  onPress,\n  onLongPress,\n  horizontal,\n  activeTintColor: customActiveTintColor,\n  inactiveTintColor: customInactiveTintColor,\n  activeBackgroundColor = 'transparent',\n  inactiveBackgroundColor = 'transparent',\n  showLabel = true,\n  allowFontScaling,\n  labelStyle,\n  iconStyle,\n  style,\n}: Props) {\n  const { colors } = useTheme();\n\n  const activeTintColor =\n    customActiveTintColor === undefined\n      ? colors.primary\n      : customActiveTintColor;\n\n  const inactiveTintColor =\n    customInactiveTintColor === undefined\n      ? Color(colors.text).mix(Color(colors.card), 0.5).hex()\n      : customInactiveTintColor;\n\n  const renderLabel = ({ focused }: { focused: boolean }) => {\n    if (showLabel === false) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n\n    if (typeof label === 'string') {\n      return (\n        <Text\n          numberOfLines={1}\n          style={[\n            styles.label,\n            { color },\n            horizontal ? styles.labelBeside : styles.labelBeneath,\n            labelStyle,\n          ]}\n          allowFontScaling={allowFontScaling}\n        >\n          {label}\n        </Text>\n      );\n    }\n\n    const { options } = descriptor;\n    const children =\n      typeof options.tabBarLabel === 'string'\n        ? options.tabBarLabel\n        : options.title !== undefined\n        ? options.title\n        : route.name;\n\n    return label({\n      focused,\n      color,\n      position: horizontal ? 'beside-icon' : 'below-icon',\n      children,\n    });\n  };\n\n  const renderIcon = ({ focused }: { focused: boolean }) => {\n    if (icon === undefined) {\n      return null;\n    }\n\n    const activeOpacity = focused ? 1 : 0;\n    const inactiveOpacity = focused ? 0 : 1;\n\n    return (\n      <TabBarIcon\n        route={route}\n        horizontal={horizontal}\n        badge={badge}\n        badgeStyle={badgeStyle}\n        activeOpacity={activeOpacity}\n        inactiveOpacity={inactiveOpacity}\n        activeTintColor={activeTintColor}\n        inactiveTintColor={inactiveTintColor}\n        renderIcon={icon}\n        style={iconStyle}\n      />\n    );\n  };\n\n  const scene = { route, focused };\n\n  const backgroundColor = focused\n    ? activeBackgroundColor\n    : inactiveBackgroundColor;\n\n  return button({\n    to,\n    onPress,\n    onLongPress,\n    testID,\n    accessibilityLabel,\n    // FIXME: accessibilityRole: 'tab' doesn't seem to work as expected on iOS\n    accessibilityRole: Platform.select({ ios: 'button', default: 'tab' }),\n    accessibilityState: { selected: focused },\n    // @ts-expect-error: keep for compatibility with older React Native versions\n    accessibilityStates: focused ? ['selected'] : [],\n    style: [\n      styles.tab,\n      { backgroundColor },\n      horizontal ? styles.tabLandscape : styles.tabPortrait,\n      style,\n    ],\n    children: (\n      <React.Fragment>\n        {renderIcon(scene)}\n        {renderLabel(scene)}\n      </React.Fragment>\n    ),\n  }) as React.ReactElement;\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  tabPortrait: {\n    justifyContent: 'flex-end',\n    flexDirection: 'column',\n  },\n  tabLandscape: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n  label: {\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n  },\n  labelBeneath: {\n    fontSize: 10,\n  },\n  labelBeside: {\n    fontSize: 13,\n    marginLeft: 20,\n    marginTop: 3,\n  },\n  button: {\n    display: 'flex',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}