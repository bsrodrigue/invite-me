{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/LogBox/LogBoxInspectorContainer.js\";\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxInspector from './UI/LogBoxInspector';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class _LogBoxInspectorContainer extends React.Component {\n  render() {\n    return _jsxDEV(View, {\n      style: StyleSheet.absoluteFill,\n      children: _jsxDEV(LogBoxInspector, {\n        onDismiss: this._handleDismiss,\n        onMinimize: this._handleMinimize,\n        onChangeSelectedIndex: this._handleSetSelectedLog,\n        logs: this.props.logs,\n        selectedIndex: this.props.selectedLogIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  _handleDismiss = () => {\n    const {\n      selectedLogIndex,\n      logs\n    } = this.props;\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  };\n  _handleMinimize = () => {\n    LogBoxData.setSelectedLog(-1);\n  };\n  _handleSetSelectedLog = index => {\n    LogBoxData.setSelectedLog(index);\n  };\n}\nexport default LogBoxData.withSubscription(_LogBoxInspectorContainer);","map":{"version":3,"names":["View","StyleSheet","LogBoxData","LogBoxInspector","React","jsxDEV","_jsxDEV","_LogBoxInspectorContainer","Component","render","style","absoluteFill","children","onDismiss","_handleDismiss","onMinimize","_handleMinimize","onChangeSelectedIndex","_handleSetSelectedLog","logs","props","selectedIndex","selectedLogIndex","fileName","_jsxFileName","lineNumber","columnNumber","logsArray","Array","from","length","setSelectedLog","dismiss","index","withSubscription"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/LogBox/LogBoxInspectorContainer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type LogBoxLog from './Data/LogBoxLog';\n\nimport View from '../Components/View/View';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport * as LogBoxData from './Data/LogBoxData';\nimport LogBoxInspector from './UI/LogBoxInspector';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  logs: $ReadOnlyArray<LogBoxLog>,\n  selectedLogIndex: number,\n  isDisabled?: ?boolean,\n|}>;\n\nexport class _LogBoxInspectorContainer extends React.Component<Props> {\n  render(): React.Node {\n    return (\n      <View style={StyleSheet.absoluteFill}>\n        <LogBoxInspector\n          onDismiss={this._handleDismiss}\n          onMinimize={this._handleMinimize}\n          onChangeSelectedIndex={this._handleSetSelectedLog}\n          logs={this.props.logs}\n          selectedIndex={this.props.selectedLogIndex}\n        />\n      </View>\n    );\n  }\n\n  _handleDismiss = (): void => {\n    // Here we handle the cases when the log is dismissed and it\n    // was either the last log, or when the current index\n    // is now outside the bounds of the log array.\n    const {selectedLogIndex, logs} = this.props;\n    const logsArray = Array.from(logs);\n    if (selectedLogIndex != null) {\n      if (logsArray.length - 1 <= 0) {\n        LogBoxData.setSelectedLog(-1);\n      } else if (selectedLogIndex >= logsArray.length - 1) {\n        LogBoxData.setSelectedLog(selectedLogIndex - 1);\n      }\n\n      LogBoxData.dismiss(logsArray[selectedLogIndex]);\n    }\n  };\n\n  _handleMinimize = (): void => {\n    LogBoxData.setSelectedLog(-1);\n  };\n\n  _handleSetSelectedLog = (index: number): void => {\n    LogBoxData.setSelectedLog(index);\n  };\n}\n\nexport default (LogBoxData.withSubscription(\n  _LogBoxInspectorContainer,\n): React.AbstractComponent<{||}>);\n"],"mappings":";AAYA,OAAOA,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,KAAKC,UAAU,MAAM,mBAAmB;AAC/C,OAAOC,eAAe,MAAM,sBAAsB;AAClD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ/B,OAAO,MAAMC,yBAAyB,SAASH,KAAK,CAACI,SAAS,CAAQ;EACpEC,MAAMA,CAAA,EAAe;IACnB,OACEH,OAAA,CAACN,IAAI;MAACU,KAAK,EAAET,UAAU,CAACU,YAAa;MAAAC,QAAA,EACnCN,OAAA,CAACH,eAAe;QACdU,SAAS,EAAE,IAAI,CAACC,cAAe;QAC/BC,UAAU,EAAE,IAAI,CAACC,eAAgB;QACjCC,qBAAqB,EAAE,IAAI,CAACC,qBAAsB;QAClDC,IAAI,EAAE,IAAI,CAACC,KAAK,CAACD,IAAK;QACtBE,aAAa,EAAE,IAAI,CAACD,KAAK,CAACE;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEX;EAEAZ,cAAc,GAAGA,CAAA,KAAY;IAI3B,MAAM;MAACQ,gBAAgB;MAAEH;IAAI,CAAC,GAAG,IAAI,CAACC,KAAK;IAC3C,MAAMO,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACV,IAAI,CAAC;IAClC,IAAIG,gBAAgB,IAAI,IAAI,EAAE;MAC5B,IAAIK,SAAS,CAACG,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE;QAC7B5B,UAAU,CAAC6B,cAAc,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM,IAAIT,gBAAgB,IAAIK,SAAS,CAACG,MAAM,GAAG,CAAC,EAAE;QACnD5B,UAAU,CAAC6B,cAAc,CAACT,gBAAgB,GAAG,CAAC,CAAC;MACjD;MAEApB,UAAU,CAAC8B,OAAO,CAACL,SAAS,CAACL,gBAAgB,CAAC,CAAC;IACjD;EACF,CAAC;EAEDN,eAAe,GAAGA,CAAA,KAAY;IAC5Bd,UAAU,CAAC6B,cAAc,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC;EAEDb,qBAAqB,GAAIe,KAAa,IAAW;IAC/C/B,UAAU,CAAC6B,cAAc,CAACE,KAAK,CAAC;EAClC,CAAC;AACH;AAEA,eAAgB/B,UAAU,CAACgC,gBAAgB,CACzC3B,yBACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}