{"ast":null,"code":"'use strict';\n\nimport { findNodeHandle } from '../../ReactNative/RendererProxy';\nimport { AnimatedEvent } from '../AnimatedEvent';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedObject, { hasAnimatedNode } from './AnimatedObject';\nimport AnimatedStyle from './AnimatedStyle';\nimport invariant from 'invariant';\nfunction createAnimatedProps(inputProps) {\n  const props = {};\n  for (const key in inputProps) {\n    const value = inputProps[key];\n    if (key === 'style') {\n      props[key] = new AnimatedStyle(value);\n    } else if (value instanceof AnimatedNode) {\n      props[key] = value;\n    } else if (hasAnimatedNode(value)) {\n      props[key] = new AnimatedObject(value);\n    } else {\n      props[key] = value;\n    }\n  }\n  return props;\n}\nexport default class AnimatedProps extends AnimatedNode {\n  constructor(props, callback) {\n    super();\n    this._props = createAnimatedProps(props);\n    this._callback = callback;\n  }\n  __getValue() {\n    const props = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getValue();\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n  __getAnimatedValue() {\n    const props = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n    return props;\n  }\n  __attach() {\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n  __detach() {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n    super.__detach();\n  }\n  update() {\n    this._callback();\n  }\n  __makeNative(platformConfig) {\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__makeNative(platformConfig);\n      }\n    }\n    if (!this.__isNative) {\n      this.__isNative = true;\n      super.__setPlatformConfig(platformConfig);\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n  setNativeView(animatedView) {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n  __connectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(this.__getNativeTag(), nativeViewTag);\n  }\n  __disconnectAnimatedView() {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag = findNodeHandle(this._animatedView);\n    invariant(nativeViewTag != null, 'Unable to locate attached view in the native tree');\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(this.__getNativeTag(), nativeViewTag);\n  }\n  __restoreDefaultValues() {\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n  __getNativeConfig() {\n    const propsConfig = {};\n    for (const propKey in this._props) {\n      const value = this._props[propKey];\n      if (value instanceof AnimatedNode) {\n        value.__makeNative(this.__getPlatformConfig());\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n    return {\n      type: 'props',\n      props: propsConfig\n    };\n  }\n}","map":{"version":3,"names":["findNodeHandle","AnimatedEvent","NativeAnimatedHelper","AnimatedNode","AnimatedObject","hasAnimatedNode","AnimatedStyle","invariant","createAnimatedProps","inputProps","props","key","value","AnimatedProps","constructor","callback","_props","_callback","__getValue","__getHandler","__getAnimatedValue","__attach","__addChild","__detach","__isNative","_animatedView","__disconnectAnimatedView","__removeChild","update","__makeNative","platformConfig","__setPlatformConfig","__connectAnimatedView","setNativeView","animatedView","nativeViewTag","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","__restoreDefaultValues","restoreDefaultValues","__getNativeConfig","propsConfig","propKey","__getPlatformConfig","type"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport {findNodeHandle} from '../../ReactNative/RendererProxy';\nimport {AnimatedEvent} from '../AnimatedEvent';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedObject, {hasAnimatedNode} from './AnimatedObject';\nimport AnimatedStyle from './AnimatedStyle';\nimport invariant from 'invariant';\n\nfunction createAnimatedProps(inputProps: Object): Object {\n  const props: Object = {};\n  for (const key in inputProps) {\n    const value = inputProps[key];\n    if (key === 'style') {\n      props[key] = new AnimatedStyle(value);\n    } else if (value instanceof AnimatedNode) {\n      props[key] = value;\n    } else if (hasAnimatedNode(value)) {\n      props[key] = new AnimatedObject(value);\n    } else {\n      props[key] = value;\n    }\n  }\n  return props;\n}\n\nexport default class AnimatedProps extends AnimatedNode {\n  _props: Object;\n  _animatedView: any;\n  _callback: () => void;\n\n  constructor(props: Object, callback: () => void) {\n    super();\n    this._props = createAnimatedProps(props);\n    this._callback = callback;\n  }\n\n  __getValue(): Object {\n    const props: {[string]: any | ((...args: any) => void)} = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getValue();\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n\n    return props;\n  }\n\n  __getAnimatedValue(): Object {\n    const props: {[string]: any} = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n    return props;\n  }\n\n  __attach(): void {\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach(): void {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n    super.__detach();\n  }\n\n  update(): void {\n    this._callback();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig): void {\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__makeNative(platformConfig);\n      }\n    }\n\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      // Since this does not call the super.__makeNative, we need to store the\n      // supplied platformConfig here, before calling __connectAnimatedView\n      // where it will be needed to traverse the graph of attached values.\n      super.__setPlatformConfig(platformConfig);\n\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView: any): void {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView(): void {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag: ?number = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree',\n    );\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(\n      this.__getNativeTag(),\n      nativeViewTag,\n    );\n  }\n\n  __disconnectAnimatedView(): void {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag: ?number = findNodeHandle(this._animatedView);\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree',\n    );\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(\n      this.__getNativeTag(),\n      nativeViewTag,\n    );\n  }\n\n  __restoreDefaultValues(): void {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n\n  __getNativeConfig(): Object {\n    const propsConfig: {[string]: number} = {};\n    for (const propKey in this._props) {\n      const value = this._props[propKey];\n      if (value instanceof AnimatedNode) {\n        value.__makeNative(this.__getPlatformConfig());\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n    return {\n      type: 'props',\n      props: propsConfig,\n    };\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}