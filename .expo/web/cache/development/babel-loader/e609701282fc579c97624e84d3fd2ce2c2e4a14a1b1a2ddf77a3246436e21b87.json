{"ast":null,"code":"import { Asset } from './Asset';\nimport { IS_ENV_WITH_LOCAL_ASSETS } from './PlatformUtils';\nimport { setCustomSourceTransformer } from './resolveAssetSource';\nif (IS_ENV_WITH_LOCAL_ASSETS) {\n  setCustomSourceTransformer(resolver => {\n    try {\n      if (resolver.asset.fileHashes) {\n        const asset = Asset.fromMetadata(resolver.asset);\n        return resolver.fromSource(asset.downloaded ? asset.localUri : asset.uri);\n      } else {\n        return resolver.defaultAsset();\n      }\n    } catch {\n      return resolver.defaultAsset();\n    }\n  });\n}","map":{"version":3,"names":["Asset","IS_ENV_WITH_LOCAL_ASSETS","setCustomSourceTransformer","resolver","asset","fileHashes","fromMetadata","fromSource","downloaded","localUri","uri","defaultAsset"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/expo-asset/src/Asset.fx.ts"],"sourcesContent":["import { Asset } from './Asset';\nimport { IS_ENV_WITH_LOCAL_ASSETS } from './PlatformUtils';\nimport { setCustomSourceTransformer } from './resolveAssetSource';\n\n// Override React Native's asset resolution for `Image` components in contexts where it matters\nif (IS_ENV_WITH_LOCAL_ASSETS) {\n  setCustomSourceTransformer((resolver) => {\n    try {\n      // Bundler is using the hashAssetFiles plugin if and only if the fileHashes property exists\n      if (resolver.asset.fileHashes) {\n        const asset = Asset.fromMetadata(resolver.asset);\n        return resolver.fromSource(asset.downloaded ? asset.localUri! : asset.uri);\n      } else {\n        return resolver.defaultAsset();\n      }\n    } catch {\n      return resolver.defaultAsset();\n    }\n  });\n}\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,SAAS;AAC/B,SAASC,wBAAwB,QAAQ,iBAAiB;AAC1D,SAASC,0BAA0B,QAAQ,sBAAsB;AAGjE,IAAID,wBAAwB,EAAE;EAC5BC,0BAA0B,CAAEC,QAAQ,IAAI;IACtC,IAAI;MAEF,IAAIA,QAAQ,CAACC,KAAK,CAACC,UAAU,EAAE;QAC7B,MAAMD,KAAK,GAAGJ,KAAK,CAACM,YAAY,CAACH,QAAQ,CAACC,KAAK,CAAC;QAChD,OAAOD,QAAQ,CAACI,UAAU,CAACH,KAAK,CAACI,UAAU,GAAGJ,KAAK,CAACK,QAAS,GAAGL,KAAK,CAACM,GAAG,CAAC;OAC3E,MAAM;QACL,OAAOP,QAAQ,CAACQ,YAAY,EAAE;;KAEjC,CAAC,MAAM;MACN,OAAOR,QAAQ,CAACQ,YAAY,EAAE;;EAElC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}