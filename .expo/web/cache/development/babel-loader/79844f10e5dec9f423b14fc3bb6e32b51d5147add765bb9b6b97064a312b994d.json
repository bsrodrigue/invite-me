{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/ReactDevToolsOverlay.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport View from '../Components/View/View';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport ElementBox from './ElementBox';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  findNodeHandle\n} = require('../ReactNative/RendererProxy');\nconst getInspectorDataForViewAtPoint = require('./getInspectorDataForViewAtPoint');\nconst {\n  useEffect,\n  useState,\n  useCallback\n} = React;\nexport default function ReactDevToolsOverlay({\n  inspectedViewRef,\n  reactDevToolsAgent\n}) {\n  const [inspected, setInspected] = useState(null);\n  const [isInspecting, setIsInspecting] = useState(false);\n  useEffect(() => {\n    function cleanup() {\n      reactDevToolsAgent.removeListener('shutdown', cleanup);\n      reactDevToolsAgent.removeListener('startInspectingNative', onStartInspectingNative);\n      reactDevToolsAgent.removeListener('stopInspectingNative', onStopInspectingNative);\n    }\n    function onStartInspectingNative() {\n      setIsInspecting(true);\n    }\n    function onStopInspectingNative() {\n      setIsInspecting(false);\n    }\n    reactDevToolsAgent.addListener('shutdown', cleanup);\n    reactDevToolsAgent.addListener('startInspectingNative', onStartInspectingNative);\n    reactDevToolsAgent.addListener('stopInspectingNative', onStopInspectingNative);\n    return cleanup;\n  }, [reactDevToolsAgent]);\n  const findViewForLocation = useCallback((x, y) => {\n    getInspectorDataForViewAtPoint(inspectedViewRef.current, x, y, viewData => {\n      const {\n        touchedViewTag,\n        closestInstance,\n        frame\n      } = viewData;\n      if (closestInstance != null || touchedViewTag != null) {\n        reactDevToolsAgent.selectNode(findNodeHandle(touchedViewTag));\n        if (closestInstance != null) {\n          reactDevToolsAgent.selectNode(closestInstance);\n        }\n        setInspected({\n          frame\n        });\n        return true;\n      }\n      return false;\n    });\n  }, [inspectedViewRef, reactDevToolsAgent]);\n  const stopInspecting = useCallback(() => {\n    reactDevToolsAgent.stopInspectingNative(true);\n    setIsInspecting(false);\n    setInspected(null);\n  }, [reactDevToolsAgent]);\n  const onPointerMove = useCallback(e => {\n    findViewForLocation(e.nativeEvent.x, e.nativeEvent.y);\n  }, [findViewForLocation]);\n  const onResponderMove = useCallback(e => {\n    findViewForLocation(e.nativeEvent.touches[0].locationX, e.nativeEvent.touches[0].locationY);\n  }, [findViewForLocation]);\n  const shouldSetResponder = useCallback(e => {\n    onResponderMove(e);\n    return true;\n  }, [onResponderMove]);\n  const highlight = inspected ? _jsxDEV(ElementBox, {\n    frame: inspected.frame\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 33\n  }, this) : null;\n  if (isInspecting) {\n    const events = ReactNativeFeatureFlags.shouldEmitW3CPointerEvents() ? {\n      onPointerMove,\n      onPointerDown: onPointerMove,\n      onPointerUp: stopInspecting\n    } : {\n      onStartShouldSetResponder: shouldSetResponder,\n      onResponderMove: onResponderMove,\n      onResponderRelease: stopInspecting\n    };\n    return _jsxDEV(View, _objectSpread(_objectSpread({\n      nativeID: \"devToolsInspectorOverlay\",\n      style: styles.inspector\n    }, events), {}, {\n      children: highlight\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n  return highlight;\n}\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"names":["View","ReactNativeFeatureFlags","StyleSheet","ElementBox","React","jsxDEV","_jsxDEV","findNodeHandle","require","getInspectorDataForViewAtPoint","useEffect","useState","useCallback","ReactDevToolsOverlay","inspectedViewRef","reactDevToolsAgent","inspected","setInspected","isInspecting","setIsInspecting","cleanup","removeListener","onStartInspectingNative","onStopInspectingNative","addListener","findViewForLocation","x","y","current","viewData","touchedViewTag","closestInstance","frame","selectNode","stopInspecting","stopInspectingNative","onPointerMove","e","nativeEvent","onResponderMove","touches","locationX","locationY","shouldSetResponder","highlight","fileName","_jsxFileName","lineNumber","columnNumber","events","shouldEmitW3CPointerEvents","onPointerDown","onPointerUp","onStartShouldSetResponder","onResponderRelease","_objectSpread","nativeID","style","styles","inspector","children","create","backgroundColor","position","left","top","right","bottom"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/ReactDevToolsOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {InspectedViewRef} from '../ReactNative/AppContainer-dev';\nimport type {PointerEvent} from '../Types/CoreEventTypes';\nimport type {PressEvent} from '../Types/CoreEventTypes';\nimport type {ReactDevToolsAgent} from '../Types/ReactDevToolsTypes';\nimport type {InspectedElement} from './Inspector';\n\nimport View from '../Components/View/View';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport ElementBox from './ElementBox';\nimport * as React from 'react';\n\nconst {findNodeHandle} = require('../ReactNative/RendererProxy');\nconst getInspectorDataForViewAtPoint = require('./getInspectorDataForViewAtPoint');\n\nconst {useEffect, useState, useCallback} = React;\n\ntype Props = {\n  inspectedViewRef: InspectedViewRef,\n  reactDevToolsAgent: ReactDevToolsAgent,\n};\n\nexport default function ReactDevToolsOverlay({\n  inspectedViewRef,\n  reactDevToolsAgent,\n}: Props): React.Node {\n  const [inspected, setInspected] = useState<?InspectedElement>(null);\n  const [isInspecting, setIsInspecting] = useState(false);\n\n  useEffect(() => {\n    function cleanup() {\n      reactDevToolsAgent.removeListener('shutdown', cleanup);\n      reactDevToolsAgent.removeListener(\n        'startInspectingNative',\n        onStartInspectingNative,\n      );\n      reactDevToolsAgent.removeListener(\n        'stopInspectingNative',\n        onStopInspectingNative,\n      );\n    }\n\n    function onStartInspectingNative() {\n      setIsInspecting(true);\n    }\n\n    function onStopInspectingNative() {\n      setIsInspecting(false);\n    }\n\n    reactDevToolsAgent.addListener('shutdown', cleanup);\n    reactDevToolsAgent.addListener(\n      'startInspectingNative',\n      onStartInspectingNative,\n    );\n    reactDevToolsAgent.addListener(\n      'stopInspectingNative',\n      onStopInspectingNative,\n    );\n\n    return cleanup;\n  }, [reactDevToolsAgent]);\n\n  const findViewForLocation = useCallback(\n    (x: number, y: number) => {\n      getInspectorDataForViewAtPoint(\n        inspectedViewRef.current,\n        x,\n        y,\n        viewData => {\n          const {touchedViewTag, closestInstance, frame} = viewData;\n          if (closestInstance != null || touchedViewTag != null) {\n            // We call `selectNode` for both non-fabric(viewTag) and fabric(instance),\n            // this makes sure it works for both architectures.\n            reactDevToolsAgent.selectNode(findNodeHandle(touchedViewTag));\n            if (closestInstance != null) {\n              reactDevToolsAgent.selectNode(closestInstance);\n            }\n            setInspected({\n              frame,\n            });\n            return true;\n          }\n          return false;\n        },\n      );\n    },\n    [inspectedViewRef, reactDevToolsAgent],\n  );\n\n  const stopInspecting = useCallback(() => {\n    reactDevToolsAgent.stopInspectingNative(true);\n    setIsInspecting(false);\n    setInspected(null);\n  }, [reactDevToolsAgent]);\n\n  const onPointerMove = useCallback(\n    (e: PointerEvent) => {\n      findViewForLocation(e.nativeEvent.x, e.nativeEvent.y);\n    },\n    [findViewForLocation],\n  );\n\n  const onResponderMove = useCallback(\n    (e: PressEvent) => {\n      findViewForLocation(\n        e.nativeEvent.touches[0].locationX,\n        e.nativeEvent.touches[0].locationY,\n      );\n    },\n    [findViewForLocation],\n  );\n\n  const shouldSetResponder = useCallback(\n    (e: PressEvent): boolean => {\n      onResponderMove(e);\n      return true;\n    },\n    [onResponderMove],\n  );\n\n  const highlight = inspected ? <ElementBox frame={inspected.frame} /> : null;\n\n  if (isInspecting) {\n    const events =\n      // Pointer events only work on fabric\n      ReactNativeFeatureFlags.shouldEmitW3CPointerEvents()\n        ? {\n            onPointerMove,\n            onPointerDown: onPointerMove,\n            onPointerUp: stopInspecting,\n          }\n        : {\n            onStartShouldSetResponder: shouldSetResponder,\n            onResponderMove: onResponderMove,\n            onResponderRelease: stopInspecting,\n          };\n\n    return (\n      <View\n        nativeID=\"devToolsInspectorOverlay\"\n        style={styles.inspector}\n        {...events}>\n        {highlight}\n      </View>\n    );\n  }\n\n  return highlight;\n}\n\nconst styles = StyleSheet.create({\n  inspector: {\n    backgroundColor: 'transparent',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}