{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"html\", \"editorStyle\", \"useContainer\", \"style\", \"onLink\"];\nvar _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-pell-rich-editor/src/RichEditor.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { Component } from 'react';\nimport { WebView } from 'react-native-webview';\nimport { actions, messages } from './const';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { createHTML } from './editor';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlatformIOS = Platform.OS === 'ios';\nexport default class RichTextEditor extends Component {\n  static defaultProps = {\n    contentInset: {},\n    style: {},\n    placeholder: '',\n    initialContentHTML: '',\n    initialFocus: false,\n    disabled: false,\n    useContainer: true,\n    pasteAsPlainText: false,\n    autoCapitalize: 'off',\n    defaultParagraphSeparator: 'div',\n    editorInitializedCallback: () => {},\n    initialHeight: 0\n  };\n  constructor(props) {\n    super(props);\n    let that = this;\n    that.renderWebView = that.renderWebView.bind(that);\n    that.onMessage = that.onMessage.bind(that);\n    that.sendAction = that.sendAction.bind(that);\n    that.registerToolbar = that.registerToolbar.bind(that);\n    that._onKeyboardWillShow = that._onKeyboardWillShow.bind(that);\n    that._onKeyboardWillHide = that._onKeyboardWillHide.bind(that);\n    that.init = that.init.bind(that);\n    that.setRef = that.setRef.bind(that);\n    that.onViewLayout = that.onViewLayout.bind(that);\n    that.unmount = false;\n    that._keyOpen = false;\n    that._focus = false;\n    that.layout = {};\n    that.selectionChangeListeners = [];\n    const {\n      editorStyle: {\n        backgroundColor,\n        color,\n        placeholderColor,\n        initialCSSText,\n        cssText,\n        contentCSSText,\n        caretColor\n      } = {},\n      html,\n      pasteAsPlainText,\n      onPaste,\n      onKeyUp,\n      onKeyDown,\n      onInput,\n      enterKeyHint,\n      autoCapitalize,\n      autoCorrect,\n      defaultParagraphSeparator,\n      firstFocusEnd,\n      useContainer,\n      initialHeight,\n      initialFocus,\n      disabled,\n      styleWithCSS\n    } = props;\n    that.state = {\n      html: {\n        html: html || createHTML({\n          backgroundColor,\n          color,\n          caretColor,\n          placeholderColor,\n          initialCSSText,\n          cssText,\n          contentCSSText,\n          pasteAsPlainText,\n          pasteListener: !!onPaste,\n          keyUpListener: !!onKeyUp,\n          keyDownListener: !!onKeyDown,\n          inputListener: !!onInput,\n          enterKeyHint,\n          autoCapitalize,\n          autoCorrect,\n          initialFocus: initialFocus && !disabled,\n          defaultParagraphSeparator,\n          firstFocusEnd,\n          useContainer,\n          styleWithCSS\n        })\n      },\n      keyboardHeight: 0,\n      height: initialHeight\n    };\n    that.focusListeners = [];\n  }\n  componentDidMount() {\n    this.unmount = false;\n    if (PlatformIOS) {\n      this.keyboardEventListeners = [Keyboard.addListener('keyboardWillShow', this._onKeyboardWillShow), Keyboard.addListener('keyboardWillHide', this._onKeyboardWillHide)];\n    } else {\n      this.keyboardEventListeners = [Keyboard.addListener('keyboardDidShow', this._onKeyboardWillShow), Keyboard.addListener('keyboardDidHide', this._onKeyboardWillHide)];\n    }\n  }\n  componentWillUnmount() {\n    this.unmount = true;\n    this.keyboardEventListeners.forEach(eventListener => eventListener.remove());\n  }\n  _onKeyboardWillShow(event) {\n    this._keyOpen = true;\n  }\n  _onKeyboardWillHide(event) {\n    this._keyOpen = false;\n  }\n  onMessage(event) {\n    const that = this;\n    const {\n      onFocus,\n      onBlur,\n      onChange,\n      onPaste,\n      onKeyUp,\n      onKeyDown,\n      onInput,\n      onMessage,\n      onCursorPosition,\n      onLink\n    } = that.props;\n    try {\n      const message = JSON.parse(event.nativeEvent.data);\n      const data = message.data;\n      switch (message.type) {\n        case messages.CONTENT_HTML_RESPONSE:\n          if (that.contentResolve) {\n            that.contentResolve(message.data);\n            that.contentResolve = undefined;\n            that.contentReject = undefined;\n            if (that.pendingContentHtml) {\n              clearTimeout(that.pendingContentHtml);\n              that.pendingContentHtml = undefined;\n            }\n          }\n          break;\n        case messages.LINK_TOUCHED:\n          onLink?.(data);\n          break;\n        case messages.LOG:\n          console.log('FROM EDIT:', ...data);\n          break;\n        case messages.SELECTION_CHANGE:\n          const items = message.data;\n          that.selectionChangeListeners.map(listener => {\n            listener(items);\n          });\n          break;\n        case messages.CONTENT_FOCUSED:\n          that._focus = true;\n          that.focusListeners.map(da => da());\n          onFocus?.();\n          break;\n        case messages.CONTENT_BLUR:\n          that._focus = false;\n          onBlur?.();\n          break;\n        case messages.CONTENT_CHANGE:\n          onChange?.(data);\n          break;\n        case messages.CONTENT_PASTED:\n          onPaste?.(data);\n          break;\n        case messages.CONTENT_KEYUP:\n          onKeyUp?.(data);\n          break;\n        case messages.CONTENT_KEYDOWN:\n          onKeyDown?.(data);\n          break;\n        case messages.ON_INPUT:\n          onInput?.(data);\n          break;\n        case messages.OFFSET_HEIGHT:\n          that.setWebHeight(data);\n          break;\n        case messages.OFFSET_Y:\n          let offsetY = Number.parseInt(Number.parseInt(data) + that.layout.y || 0);\n          offsetY > 0 && onCursorPosition(offsetY);\n          break;\n        default:\n          onMessage?.(message);\n          break;\n      }\n    } catch (e) {}\n  }\n  setWebHeight(height) {\n    const {\n      onHeightChange,\n      useContainer,\n      initialHeight\n    } = this.props;\n    if (height !== this.state.height) {\n      const maxHeight = Math.max(height, initialHeight);\n      if (!this.unmount && useContainer && maxHeight >= initialHeight) {\n        this.setState({\n          height: maxHeight\n        });\n      }\n      onHeightChange && onHeightChange(height);\n    }\n  }\n  sendAction(type, action, data, options) {\n    let jsonString = JSON.stringify({\n      type,\n      name: action,\n      data,\n      options\n    });\n    if (!this.unmount && this.webviewBridge) {\n      this.webviewBridge.postMessage(jsonString);\n    }\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {\n      editorStyle,\n      disabled,\n      placeholder\n    } = this.props;\n    if (prevProps.editorStyle !== editorStyle) {\n      editorStyle && this.setContentStyle(editorStyle);\n    }\n    if (disabled !== prevProps.disabled) {\n      this.setDisable(disabled);\n    }\n    if (placeholder !== prevProps.placeholder) {\n      this.setPlaceholder(placeholder);\n    }\n  }\n  setRef(ref) {\n    this.webviewBridge = ref;\n  }\n  renderWebView() {\n    let that = this;\n    const _that$props = that.props,\n      {\n        html,\n        editorStyle,\n        useContainer,\n        style,\n        onLink\n      } = _that$props,\n      rest = _objectWithoutProperties(_that$props, _excluded);\n    const {\n      html: viewHTML\n    } = that.state;\n    return _jsxDEV(_Fragment, {\n      children: [_jsxDEV(WebView, _objectSpread(_objectSpread({\n        useWebKit: true,\n        scrollEnabled: false,\n        hideKeyboardAccessoryView: true,\n        keyboardDisplayRequiresUserAction: false,\n        nestedScrollEnabled: !useContainer,\n        style: [styles.webview, style]\n      }, rest), {}, {\n        ref: that.setRef,\n        onMessage: that.onMessage,\n        originWhitelist: ['*'],\n        dataDetectorTypes: 'none',\n        domStorageEnabled: false,\n        bounces: false,\n        javaScriptEnabled: true,\n        source: viewHTML,\n        onLoad: that.init,\n        onShouldStartLoadWithRequest: event => {\n          if (event.url !== 'about:blank') {\n            this.webviewBridge?.stopLoading();\n            Linking?.openURL(event.url);\n            return false;\n          }\n          return true;\n        }\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), Platform.OS === 'android' && _jsxDEV(TextInput, {\n        ref: ref => that._input = ref,\n        style: styles._input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true);\n  }\n  onViewLayout({\n    nativeEvent: {\n      layout\n    }\n  }) {\n    this.layout = layout;\n  }\n  render() {\n    let {\n      height\n    } = this.state;\n    const {\n      useContainer,\n      style\n    } = this.props;\n    return useContainer ? _jsxDEV(View, {\n      style: [style, {\n        height\n      }],\n      onLayout: this.onViewLayout,\n      children: this.renderWebView()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this) : this.renderWebView();\n  }\n  registerToolbar(listener) {\n    this.selectionChangeListeners = [...this.selectionChangeListeners, listener];\n  }\n  setContentFocusHandler(listener) {\n    this.focusListeners.push(listener);\n  }\n  setContentHTML(html) {\n    this.sendAction(actions.content, 'setHtml', html);\n  }\n  setPlaceholder(placeholder) {\n    this.sendAction(actions.content, 'setPlaceholder', placeholder);\n  }\n  setContentStyle(styles) {\n    this.sendAction(actions.content, 'setContentStyle', styles);\n  }\n  setDisable(dis) {\n    this.sendAction(actions.content, 'setDisable', !!dis);\n  }\n  blurContentEditor() {\n    this.sendAction(actions.content, 'blur');\n  }\n  focusContentEditor() {\n    this.showAndroidKeyboard();\n    this.sendAction(actions.content, 'focus');\n  }\n  showAndroidKeyboard() {\n    let that = this;\n    if (Platform.OS === 'android') {\n      !that._keyOpen && that._input.focus();\n      that.webviewBridge?.requestFocus?.();\n    }\n  }\n  insertImage(attributes, style) {\n    this.sendAction(actions.insertImage, 'result', attributes, style);\n  }\n  insertVideo(attributes, style) {\n    this.sendAction(actions.insertVideo, 'result', attributes, style);\n  }\n  insertText(text) {\n    this.sendAction(actions.insertText, 'result', text);\n  }\n  insertHTML(html) {\n    this.sendAction(actions.insertHTML, 'result', html);\n  }\n  insertLink(title, url) {\n    if (url) {\n      this.showAndroidKeyboard();\n      this.sendAction(actions.insertLink, 'result', {\n        title,\n        url\n      });\n    }\n  }\n  injectJavascript(script) {\n    return this.webviewBridge.injectJavaScript(script);\n  }\n  preCode(type) {\n    this.sendAction(actions.code, 'result', type);\n  }\n  setFontSize(size) {\n    this.sendAction(actions.fontSize, 'result', size);\n  }\n  setForeColor(color) {\n    this.sendAction(actions.foreColor, 'result', color);\n  }\n  setHiliteColor(color) {\n    this.sendAction(actions.hiliteColor, 'result', color);\n  }\n  setFontName(name) {\n    this.sendAction(actions.fontName, 'result', name);\n  }\n  commandDOM(command) {\n    if (command) {\n      this.sendAction(actions.content, 'commandDOM', command);\n    }\n  }\n  command(command) {\n    if (command) {\n      this.sendAction(actions.content, 'command', command);\n    }\n  }\n  dismissKeyboard() {\n    this._focus ? this.blurContentEditor() : Keyboard.dismiss();\n  }\n  get isKeyboardOpen() {\n    return this._keyOpen;\n  }\n  init() {\n    let that = this;\n    const {\n      initialFocus,\n      initialContentHTML,\n      placeholder,\n      editorInitializedCallback,\n      disabled\n    } = that.props;\n    initialContentHTML && that.setContentHTML(initialContentHTML);\n    placeholder && that.setPlaceholder(placeholder);\n    that.setDisable(disabled);\n    editorInitializedCallback();\n    initialFocus && !disabled && that.focusContentEditor();\n    that.sendAction(actions.init);\n  }\n  async getContentHtml() {\n    return new Promise((resolve, reject) => {\n      this.contentResolve = resolve;\n      this.contentReject = reject;\n      this.sendAction(actions.content, 'postHtml');\n      this.pendingContentHtml = setTimeout(() => {\n        if (this.contentReject) {\n          this.contentReject('timeout');\n        }\n      }, 5000);\n    });\n  }\n}\nconst styles = StyleSheet.create({\n  _input: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    zIndex: -999,\n    bottom: -999,\n    left: -999\n  },\n  webview: {\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"names":["React","Component","WebView","actions","messages","Keyboard","Platform","StyleSheet","TextInput","View","Linking","createHTML","jsxDEV","_jsxDEV","Fragment","_Fragment","PlatformIOS","OS","RichTextEditor","defaultProps","contentInset","style","placeholder","initialContentHTML","initialFocus","disabled","useContainer","pasteAsPlainText","autoCapitalize","defaultParagraphSeparator","editorInitializedCallback","initialHeight","constructor","props","that","renderWebView","bind","onMessage","sendAction","registerToolbar","_onKeyboardWillShow","_onKeyboardWillHide","init","setRef","onViewLayout","unmount","_keyOpen","_focus","layout","selectionChangeListeners","editorStyle","backgroundColor","color","placeholderColor","initialCSSText","cssText","contentCSSText","caretColor","html","onPaste","onKeyUp","onKeyDown","onInput","enterKeyHint","autoCorrect","firstFocusEnd","styleWithCSS","state","pasteListener","keyUpListener","keyDownListener","inputListener","keyboardHeight","height","focusListeners","componentDidMount","keyboardEventListeners","addListener","componentWillUnmount","forEach","eventListener","remove","event","onFocus","onBlur","onChange","onCursorPosition","onLink","message","JSON","parse","nativeEvent","data","type","CONTENT_HTML_RESPONSE","contentResolve","undefined","contentReject","pendingContentHtml","clearTimeout","LINK_TOUCHED","LOG","console","log","SELECTION_CHANGE","items","map","listener","CONTENT_FOCUSED","da","CONTENT_BLUR","CONTENT_CHANGE","CONTENT_PASTED","CONTENT_KEYUP","CONTENT_KEYDOWN","ON_INPUT","OFFSET_HEIGHT","setWebHeight","OFFSET_Y","offsetY","Number","parseInt","y","e","onHeightChange","maxHeight","Math","max","setState","action","options","jsonString","stringify","name","webviewBridge","postMessage","componentDidUpdate","prevProps","prevState","snapshot","setContentStyle","setDisable","setPlaceholder","ref","_that$props","rest","_objectWithoutProperties","_excluded","viewHTML","children","_objectSpread","useWebKit","scrollEnabled","hideKeyboardAccessoryView","keyboardDisplayRequiresUserAction","nestedScrollEnabled","styles","webview","originWhitelist","dataDetectorTypes","domStorageEnabled","bounces","javaScriptEnabled","source","onLoad","onShouldStartLoadWithRequest","url","stopLoading","openURL","fileName","_jsxFileName","lineNumber","columnNumber","_input","render","onLayout","setContentFocusHandler","push","setContentHTML","content","dis","blurContentEditor","focusContentEditor","showAndroidKeyboard","focus","requestFocus","insertImage","attributes","insertVideo","insertText","text","insertHTML","insertLink","title","injectJavascript","script","injectJavaScript","preCode","code","setFontSize","size","fontSize","setForeColor","foreColor","setHiliteColor","hiliteColor","setFontName","fontName","commandDOM","command","dismissKeyboard","dismiss","isKeyboardOpen","getContentHtml","Promise","resolve","reject","setTimeout","create","position","width","zIndex","bottom","left"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-pell-rich-editor/src/RichEditor.js"],"sourcesContent":["import React, {Component} from 'react';\nimport {WebView} from 'react-native-webview';\nimport {actions, messages} from './const';\nimport {Keyboard, Platform, StyleSheet, TextInput, View, Linking} from 'react-native';\nimport {createHTML} from './editor';\n\nconst PlatformIOS = Platform.OS === 'ios';\n\nexport default class RichTextEditor extends Component {\n  static defaultProps = {\n    contentInset: {},\n    style: {},\n    placeholder: '',\n    initialContentHTML: '',\n    initialFocus: false,\n    disabled: false,\n    useContainer: true,\n    pasteAsPlainText: false,\n    autoCapitalize: 'off',\n    defaultParagraphSeparator: 'div',\n    editorInitializedCallback: () => {},\n    initialHeight: 0,\n  };\n\n  constructor(props) {\n    super(props);\n    let that = this;\n    that.renderWebView = that.renderWebView.bind(that);\n    that.onMessage = that.onMessage.bind(that);\n    that.sendAction = that.sendAction.bind(that);\n    that.registerToolbar = that.registerToolbar.bind(that);\n    that._onKeyboardWillShow = that._onKeyboardWillShow.bind(that);\n    that._onKeyboardWillHide = that._onKeyboardWillHide.bind(that);\n    that.init = that.init.bind(that);\n    that.setRef = that.setRef.bind(that);\n    that.onViewLayout = that.onViewLayout.bind(that);\n    that.unmount = false;\n    that._keyOpen = false;\n    that._focus = false;\n    that.layout = {};\n    that.selectionChangeListeners = [];\n    const {\n      editorStyle: {backgroundColor, color, placeholderColor, initialCSSText, cssText, contentCSSText, caretColor} = {},\n      html,\n      pasteAsPlainText,\n      onPaste,\n      onKeyUp,\n      onKeyDown,\n      onInput,\n      enterKeyHint,\n      autoCapitalize,\n      autoCorrect,\n      defaultParagraphSeparator,\n      firstFocusEnd,\n      useContainer,\n      initialHeight,\n      initialFocus,\n      disabled,\n      styleWithCSS,\n    } = props;\n    that.state = {\n      html: {\n        html:\n          html ||\n          createHTML({\n            backgroundColor,\n            color,\n            caretColor,\n            placeholderColor,\n            initialCSSText,\n            cssText,\n            contentCSSText,\n            pasteAsPlainText,\n            pasteListener: !!onPaste,\n            keyUpListener: !!onKeyUp,\n            keyDownListener: !!onKeyDown,\n            inputListener: !!onInput,\n            enterKeyHint,\n            autoCapitalize,\n            autoCorrect,\n            initialFocus: initialFocus && !disabled,\n            defaultParagraphSeparator,\n            firstFocusEnd,\n            useContainer,\n            styleWithCSS,\n          }),\n      },\n      keyboardHeight: 0,\n      height: initialHeight,\n    };\n    that.focusListeners = [];\n  }\n\n  componentDidMount() {\n    this.unmount = false;\n    if (PlatformIOS) {\n      this.keyboardEventListeners = [\n        Keyboard.addListener('keyboardWillShow', this._onKeyboardWillShow),\n        Keyboard.addListener('keyboardWillHide', this._onKeyboardWillHide),\n      ];\n    } else {\n      this.keyboardEventListeners = [\n        Keyboard.addListener('keyboardDidShow', this._onKeyboardWillShow),\n        Keyboard.addListener('keyboardDidHide', this._onKeyboardWillHide),\n      ];\n    }\n  }\n\n  componentWillUnmount() {\n    this.unmount = true;\n    this.keyboardEventListeners.forEach(eventListener => eventListener.remove());\n  }\n\n  _onKeyboardWillShow(event) {\n    this._keyOpen = true;\n    // console.log('!!!!', event);\n    /*const newKeyboardHeight = event.endCoordinates.height;\n        if (this.state.keyboardHeight === newKeyboardHeight) {\n            return;\n        }\n        if (newKeyboardHeight) {\n            this.setEditorAvailableHeightBasedOnKeyboardHeight(newKeyboardHeight);\n        }\n        this.setState({keyboardHeight: newKeyboardHeight});*/\n  }\n\n  _onKeyboardWillHide(event) {\n    this._keyOpen = false;\n    // this.setState({keyboardHeight: 0});\n  }\n\n  /*setEditorAvailableHeightBasedOnKeyboardHeight(keyboardHeight) {\n        const {top = 0, bottom = 0} = this.props.contentInset;\n        const {marginTop = 0, marginBottom = 0} = this.props.style;\n        const spacing = marginTop + marginBottom + top + bottom;\n\n        const editorAvailableHeight = Dimensions.get('window').height - keyboardHeight - spacing;\n        // this.setEditorHeight(editorAvailableHeight);\n    }*/\n\n  onMessage(event) {\n    const that = this;\n    const {onFocus, onBlur, onChange, onPaste, onKeyUp, onKeyDown, onInput, onMessage, onCursorPosition, onLink} = that.props;\n    try {\n      const message = JSON.parse(event.nativeEvent.data);\n      const data = message.data;\n      switch (message.type) {\n        case messages.CONTENT_HTML_RESPONSE:\n          if (that.contentResolve) {\n            that.contentResolve(message.data);\n            that.contentResolve = undefined;\n            that.contentReject = undefined;\n            if (that.pendingContentHtml) {\n              clearTimeout(that.pendingContentHtml);\n              that.pendingContentHtml = undefined;\n            }\n          }\n          break;\n        case messages.LINK_TOUCHED:\n          onLink?.(data);\n          break;\n        case messages.LOG:\n          console.log('FROM EDIT:', ...data);\n          break;\n        case messages.SELECTION_CHANGE:\n          const items = message.data;\n          that.selectionChangeListeners.map(listener => {\n            listener(items);\n          });\n          break;\n        case messages.CONTENT_FOCUSED:\n          that._focus = true;\n          that.focusListeners.map(da => da()); // Subsequent versions will be deleted\n          onFocus?.();\n          break;\n        case messages.CONTENT_BLUR:\n          that._focus = false;\n          onBlur?.();\n          break;\n        case messages.CONTENT_CHANGE:\n          onChange?.(data);\n          break;\n        case messages.CONTENT_PASTED:\n          onPaste?.(data);\n          break;\n        case messages.CONTENT_KEYUP:\n          onKeyUp?.(data);\n          break;\n        case messages.CONTENT_KEYDOWN:\n          onKeyDown?.(data);\n          break;\n        case messages.ON_INPUT:\n          onInput?.(data);\n          break;\n        case messages.OFFSET_HEIGHT:\n          that.setWebHeight(data);\n          break;\n        case messages.OFFSET_Y:\n          let offsetY = Number.parseInt(Number.parseInt(data) + that.layout.y || 0);\n          offsetY > 0 && onCursorPosition(offsetY);\n          break;\n        default:\n          onMessage?.(message);\n          break;\n      }\n    } catch (e) {\n      //alert('NON JSON MESSAGE');\n    }\n  }\n\n  setWebHeight(height) {\n    const {onHeightChange, useContainer, initialHeight} = this.props;\n    if (height !== this.state.height) {\n      const maxHeight = Math.max(height, initialHeight);\n      if (!this.unmount && useContainer && maxHeight >= initialHeight) {\n        this.setState({height: maxHeight});\n      }\n      onHeightChange && onHeightChange(height);\n    }\n  }\n\n  /**\n   * @param {String} type\n   * @param {String} action\n   * @param {any} data\n   * @param [options]\n   * @private\n   */\n  sendAction(type, action, data, options) {\n    let jsonString = JSON.stringify({type, name: action, data, options});\n    if (!this.unmount && this.webviewBridge) {\n      this.webviewBridge.postMessage(jsonString);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    const {editorStyle, disabled, placeholder} = this.props;\n    if (prevProps.editorStyle !== editorStyle) {\n      editorStyle && this.setContentStyle(editorStyle);\n    }\n    if (disabled !== prevProps.disabled) {\n      this.setDisable(disabled);\n    }\n    if (placeholder !== prevProps.placeholder) {\n      this.setPlaceholder(placeholder);\n    }\n  }\n\n  setRef(ref) {\n    this.webviewBridge = ref;\n  }\n\n  renderWebView() {\n    let that = this;\n    const {html, editorStyle, useContainer, style, onLink, ...rest} = that.props;\n    const {html: viewHTML} = that.state;\n    return (\n      <>\n        <WebView\n          useWebKit={true}\n          scrollEnabled={false}\n          hideKeyboardAccessoryView={true}\n          keyboardDisplayRequiresUserAction={false}\n          nestedScrollEnabled={!useContainer}\n          style={[styles.webview, style]}\n          {...rest}\n          ref={that.setRef}\n          onMessage={that.onMessage}\n          originWhitelist={['*']}\n          dataDetectorTypes={'none'}\n          domStorageEnabled={false}\n          bounces={false}\n          javaScriptEnabled={true}\n          source={viewHTML}\n          onLoad={that.init}\n          onShouldStartLoadWithRequest={event => {\n            if (event.url !== 'about:blank') {\n              this.webviewBridge?.stopLoading();\n              Linking?.openURL(event.url);\n              return false;\n            }\n            return true;\n          }}\n        />\n        {Platform.OS === 'android' && <TextInput ref={ref => (that._input = ref)} style={styles._input} />}\n      </>\n    );\n  }\n\n  onViewLayout({nativeEvent: {layout}}) {\n    // const {x, y, width, height} = layout;\n    this.layout = layout;\n  }\n\n  render() {\n    let {height} = this.state;\n\n    // useContainer is an optional prop with default value of true\n    // If set to true, it will use a View wrapper with styles and height.\n    // If set to false, it will not use a View wrapper\n    const {useContainer, style} = this.props;\n    return useContainer ? (\n      <View style={[style, {height}]} onLayout={this.onViewLayout}>\n        {this.renderWebView()}\n      </View>\n    ) : (\n      this.renderWebView()\n    );\n  }\n\n  //-------------------------------------------------------------------------------\n  //--------------- Public API\n\n  registerToolbar(listener) {\n    this.selectionChangeListeners = [...this.selectionChangeListeners, listener];\n  }\n\n  /**\n   * Subsequent versions will be deleted, please use onFocus\n   * @deprecated remove\n   * @param listener\n   */\n  setContentFocusHandler(listener) {\n    this.focusListeners.push(listener);\n  }\n\n  setContentHTML(html) {\n    this.sendAction(actions.content, 'setHtml', html);\n  }\n\n  setPlaceholder(placeholder) {\n    this.sendAction(actions.content, 'setPlaceholder', placeholder);\n  }\n\n  setContentStyle(styles) {\n    this.sendAction(actions.content, 'setContentStyle', styles);\n  }\n\n  setDisable(dis) {\n    this.sendAction(actions.content, 'setDisable', !!dis);\n  }\n\n  blurContentEditor() {\n    this.sendAction(actions.content, 'blur');\n  }\n\n  focusContentEditor() {\n    this.showAndroidKeyboard();\n    this.sendAction(actions.content, 'focus');\n  }\n\n  /**\n   * open android keyboard\n   * @platform android\n   */\n  showAndroidKeyboard() {\n    let that = this;\n    if (Platform.OS === 'android') {\n      !that._keyOpen && that._input.focus();\n      that.webviewBridge?.requestFocus?.();\n    }\n  }\n\n  /**\n   * @param attributes\n   * @param [style]\n   */\n  insertImage(attributes, style) {\n    this.sendAction(actions.insertImage, 'result', attributes, style);\n  }\n\n  /**\n   * @param attributes\n   * @param [style]\n   */\n  insertVideo(attributes, style) {\n    this.sendAction(actions.insertVideo, 'result', attributes, style);\n  }\n\n  insertText(text) {\n    this.sendAction(actions.insertText, 'result', text);\n  }\n\n  insertHTML(html) {\n    this.sendAction(actions.insertHTML, 'result', html);\n  }\n\n  insertLink(title, url) {\n    if (url) {\n      this.showAndroidKeyboard();\n      this.sendAction(actions.insertLink, 'result', {title, url});\n    }\n  }\n\n  injectJavascript(script) {\n    return this.webviewBridge.injectJavaScript(script);\n  }\n\n  preCode(type) {\n    this.sendAction(actions.code, 'result', type);\n  }\n\n  setFontSize(size) {\n    this.sendAction(actions.fontSize, 'result', size);\n  }\n\n  setForeColor(color) {\n    this.sendAction(actions.foreColor, 'result', color);\n  }\n\n  setHiliteColor(color) {\n    this.sendAction(actions.hiliteColor, 'result', color);\n  }\n\n  setFontName(name) {\n    this.sendAction(actions.fontName, 'result', name);\n  }\n\n  commandDOM(command) {\n    if (command) {\n      this.sendAction(actions.content, 'commandDOM', command);\n    }\n  }\n\n  command(command) {\n    if (command) {\n      this.sendAction(actions.content, 'command', command);\n    }\n  }\n\n  dismissKeyboard() {\n    this._focus ? this.blurContentEditor() : Keyboard.dismiss();\n  }\n\n  get isKeyboardOpen() {\n    return this._keyOpen;\n  }\n\n  init() {\n    let that = this;\n    const {initialFocus, initialContentHTML, placeholder, editorInitializedCallback, disabled} = that.props;\n    initialContentHTML && that.setContentHTML(initialContentHTML);\n    placeholder && that.setPlaceholder(placeholder);\n    that.setDisable(disabled);\n    editorInitializedCallback();\n\n    // initial request focus\n    initialFocus && !disabled && that.focusContentEditor();\n    // no visible ?\n    that.sendAction(actions.init);\n  }\n\n  /**\n   * @deprecated please use onChange\n   * @returns {Promise}\n   */\n  async getContentHtml() {\n    return new Promise((resolve, reject) => {\n      this.contentResolve = resolve;\n      this.contentReject = reject;\n      this.sendAction(actions.content, 'postHtml');\n\n      this.pendingContentHtml = setTimeout(() => {\n        if (this.contentReject) {\n          this.contentReject('timeout');\n        }\n      }, 5000);\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  _input: {\n    position: 'absolute',\n    width: 1,\n    height: 1,\n    zIndex: -999,\n    bottom: -999,\n    left: -999,\n  },\n\n  webview: {\n    backgroundColor: 'transparent',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}