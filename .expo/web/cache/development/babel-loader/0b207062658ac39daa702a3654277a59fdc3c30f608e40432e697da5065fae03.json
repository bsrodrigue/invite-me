{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport deepMap from './deep-map';\nconst validScaleSheetRegex = /^(\\-?\\d+(?:\\.\\d{1,3})?)@(mv?s(\\d+(?:\\.\\d{1,2})?)?|s|vs)r?$/;\nconst scaleByAnnotation = (scale, verticalScale, moderateScale, moderateVerticalScale) => value => {\n  if (!validScaleSheetRegex.test(value)) {\n    return value;\n  }\n  const regexExecResult = validScaleSheetRegex.exec(value);\n  const size = parseFloat(regexExecResult[1]);\n  let scaleFunc = regexExecResult[2];\n  const scaleFactor = regexExecResult[3];\n  if (scaleFactor) scaleFunc = scaleFunc.slice(0, -scaleFactor.length);\n  const shouldRound = value.endsWith('r');\n  let result;\n  switch (scaleFunc) {\n    case 's':\n      result = scale(size);\n      break;\n    case 'vs':\n      result = verticalScale(size);\n      break;\n    case 'ms':\n      result = moderateScale(size, scaleFactor);\n      break;\n    case 'mvs':\n      result = moderateVerticalScale(size, scaleFactor);\n      break;\n  }\n  return shouldRound ? Math.round(result) : result;\n};\nconst scaledSheetCreator = (scale, verticalScale, moderateScale, moderateVerticalScale) => {\n  const scaleFunc = scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale);\n  return {\n    create: styleSheet => StyleSheet.create(deepMap(styleSheet, scaleFunc))\n  };\n};\nexport default scaledSheetCreator;","map":{"version":3,"names":["deepMap","validScaleSheetRegex","scaleByAnnotation","scale","verticalScale","moderateScale","moderateVerticalScale","value","test","regexExecResult","exec","size","parseFloat","scaleFunc","scaleFactor","slice","length","shouldRound","endsWith","result","Math","round","scaledSheetCreator","create","styleSheet","StyleSheet"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-size-matters/lib/ScaledSheet.js"],"sourcesContent":["import { StyleSheet } from 'react-native';\nimport deepMap from './deep-map';\n\n// Groups                     Size                   Func Factor\n//                             1                      2    3\nconst validScaleSheetRegex = /^(\\-?\\d+(?:\\.\\d{1,3})?)@(mv?s(\\d+(?:\\.\\d{1,2})?)?|s|vs)r?$/;\n\nconst scaleByAnnotation = (scale, verticalScale, moderateScale, moderateVerticalScale) => (value) => {\n    if (!validScaleSheetRegex.test(value)) {\n        return value;\n    }\n\n    const regexExecResult = validScaleSheetRegex.exec(value);\n\n    const size = parseFloat(regexExecResult[1]);\n    let scaleFunc = regexExecResult[2];\n    const scaleFactor = regexExecResult[3]; // string or undefined\n\n    if (scaleFactor)\n        scaleFunc = scaleFunc.slice(0, - scaleFactor.length); // Remove the factor from it\n\n    const shouldRound = value.endsWith('r');\n\n    let result;\n\n    switch (scaleFunc) {\n        case 's':\n            result = scale(size);\n            break;\n        case 'vs':\n            result = verticalScale(size);\n            break;\n        case 'ms':\n            result = moderateScale(size, scaleFactor);\n            break;\n        case 'mvs':\n            result = moderateVerticalScale(size, scaleFactor);\n            break;\n    }\n\n    return shouldRound ? Math.round(result) : result;\n};\n\nconst scaledSheetCreator = (scale, verticalScale, moderateScale, moderateVerticalScale) => {\n    const scaleFunc = scaleByAnnotation(scale, verticalScale, moderateScale, moderateVerticalScale);\n    return {\n        create: styleSheet => StyleSheet.create(deepMap(styleSheet, scaleFunc))\n    };\n};\n\nexport default scaledSheetCreator;"],"mappings":";AACA,OAAOA,OAAO,MAAM,YAAY;AAIhC,MAAMC,oBAAoB,GAAG,4DAA4D;AAEzF,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,aAAa,EAAEC,aAAa,EAAEC,qBAAqB,KAAMC,KAAK,IAAK;EACjG,IAAI,CAACN,oBAAoB,CAACO,IAAI,CAACD,KAAK,CAAC,EAAE;IACnC,OAAOA,KAAK;EAChB;EAEA,MAAME,eAAe,GAAGR,oBAAoB,CAACS,IAAI,CAACH,KAAK,CAAC;EAExD,MAAMI,IAAI,GAAGC,UAAU,CAACH,eAAe,CAAC,CAAC,CAAC,CAAC;EAC3C,IAAII,SAAS,GAAGJ,eAAe,CAAC,CAAC,CAAC;EAClC,MAAMK,WAAW,GAAGL,eAAe,CAAC,CAAC,CAAC;EAEtC,IAAIK,WAAW,EACXD,SAAS,GAAGA,SAAS,CAACE,KAAK,CAAC,CAAC,EAAE,CAAED,WAAW,CAACE,MAAM,CAAC;EAExD,MAAMC,WAAW,GAAGV,KAAK,CAACW,QAAQ,CAAC,GAAG,CAAC;EAEvC,IAAIC,MAAM;EAEV,QAAQN,SAAS;IACb,KAAK,GAAG;MACJM,MAAM,GAAGhB,KAAK,CAACQ,IAAI,CAAC;MACpB;IACJ,KAAK,IAAI;MACLQ,MAAM,GAAGf,aAAa,CAACO,IAAI,CAAC;MAC5B;IACJ,KAAK,IAAI;MACLQ,MAAM,GAAGd,aAAa,CAACM,IAAI,EAAEG,WAAW,CAAC;MACzC;IACJ,KAAK,KAAK;MACNK,MAAM,GAAGb,qBAAqB,CAACK,IAAI,EAAEG,WAAW,CAAC;MACjD;EACR;EAEA,OAAOG,WAAW,GAAGG,IAAI,CAACC,KAAK,CAACF,MAAM,CAAC,GAAGA,MAAM;AACpD,CAAC;AAED,MAAMG,kBAAkB,GAAGA,CAACnB,KAAK,EAAEC,aAAa,EAAEC,aAAa,EAAEC,qBAAqB,KAAK;EACvF,MAAMO,SAAS,GAAGX,iBAAiB,CAACC,KAAK,EAAEC,aAAa,EAAEC,aAAa,EAAEC,qBAAqB,CAAC;EAC/F,OAAO;IACHiB,MAAM,EAAEC,UAAU,IAAIC,UAAU,CAACF,MAAM,CAACvB,OAAO,CAACwB,UAAU,EAAEX,SAAS,CAAC;EAC1E,CAAC;AACL,CAAC;AAED,eAAeS,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}