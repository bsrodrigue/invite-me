{"ast":null,"code":"import EventPolyfill from './EventPolyfill';\nclass CustomEvent extends EventPolyfill {\n  constructor(typeArg, options) {\n    const {\n      bubbles,\n      cancelable,\n      composed\n    } = options;\n    super(typeArg, {\n      bubbles,\n      cancelable,\n      composed\n    });\n    this.detail = options.detail;\n  }\n}\nexport default CustomEvent;","map":{"version":3,"names":["EventPolyfill","CustomEvent","constructor","typeArg","options","bubbles","cancelable","composed","detail"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Events/CustomEvent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// Make sure global Event is defined\nimport EventPolyfill from './EventPolyfill';\n\ntype CustomEvent$Options = $ReadOnly<{|\n  bubbles?: boolean,\n  cancelable?: boolean,\n  composed?: boolean,\n  detail?: {...},\n|}>;\n\nclass CustomEvent extends EventPolyfill {\n  detail: ?{...};\n\n  constructor(typeArg: string, options: CustomEvent$Options) {\n    const {bubbles, cancelable, composed} = options;\n    super(typeArg, {bubbles, cancelable, composed});\n\n    this.detail = options.detail; // this would correspond to `NativeEvent` in SyntheticEvent\n  }\n}\n\nexport default CustomEvent;\n"],"mappings":"AAWA,OAAOA,aAAa,MAAM,iBAAiB;AAS3C,MAAMC,WAAW,SAASD,aAAa,CAAC;EAGtCE,WAAWA,CAACC,OAAe,EAAEC,OAA4B,EAAE;IACzD,MAAM;MAACC,OAAO;MAAEC,UAAU;MAAEC;IAAQ,CAAC,GAAGH,OAAO;IAC/C,KAAK,CAACD,OAAO,EAAE;MAACE,OAAO;MAAEC,UAAU;MAAEC;IAAQ,CAAC,CAAC;IAE/C,IAAI,CAACC,MAAM,GAAGJ,OAAO,CAACI,MAAM;EAC9B;AACF;AAEA,eAAeP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}