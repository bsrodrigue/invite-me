{"ast":null,"code":"'use strict';\nclass WebSocketEvent {\n  constructor(type, eventInitDict) {\n    this.type = type.toString();\n    Object.assign(this, eventInitDict);\n  }\n}\nmodule.exports = WebSocketEvent;","map":{"version":3,"names":["WebSocketEvent","constructor","type","eventInitDict","toString","Object","assign","module","exports"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/WebSocket/WebSocketEvent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n'use strict';\n\n/**\n * Event object passed to the `onopen`, `onclose`, `onmessage`, `onerror`\n * callbacks of `WebSocket`.\n *\n * The `type` property is \"open\", \"close\", \"message\", \"error\" respectively.\n *\n * In case of \"message\", the `data` property contains the incoming data.\n */\nclass WebSocketEvent {\n  constructor(type, eventInitDict) {\n    this.type = type.toString();\n    Object.assign(this, eventInitDict);\n  }\n}\n\nmodule.exports = WebSocketEvent;\n"],"mappings":"AASA,YAAY;AAUZ,MAAMA,cAAc,CAAC;EACnBC,WAAWA,CAACC,IAAI,EAAEC,aAAa,EAAE;IAC/B,IAAI,CAACD,IAAI,GAAGA,IAAI,CAACE,QAAQ,CAAC,CAAC;IAC3BC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAEH,aAAa,CAAC;EACpC;AACF;AAEAI,MAAM,CAACC,OAAO,GAAGR,cAAc","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}