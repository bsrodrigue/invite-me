{"ast":null,"code":"import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\nimport invariant from 'fbjs/lib/invariant';\nexport default class ChildListCollection {\n  constructor() {\n    this._cellKeyToChildren = new Map();\n    this._childrenToCellKey = new Map();\n  }\n  add(list, cellKey) {\n    var _this$_cellKeyToChild;\n    invariant(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n    var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild !== void 0 ? _this$_cellKeyToChild : new Set();\n    cellLists.add(list);\n    this._cellKeyToChildren.set(cellKey, cellLists);\n    this._childrenToCellKey.set(list, cellKey);\n  }\n  remove(list) {\n    var cellKey = this._childrenToCellKey.get(list);\n    invariant(cellKey != null, 'Trying to remove non-present child list');\n    this._childrenToCellKey.delete(list);\n    var cellLists = this._cellKeyToChildren.get(cellKey);\n    invariant(cellLists, '_cellKeyToChildren should contain cellKey');\n    cellLists.delete(list);\n    if (cellLists.size === 0) {\n      this._cellKeyToChildren.delete(cellKey);\n    }\n  }\n  forEach(fn) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this._cellKeyToChildren.values()), _step; !(_step = _iterator()).done;) {\n      var listSet = _step.value;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(listSet), _step2; !(_step2 = _iterator2()).done;) {\n        var list = _step2.value;\n        fn(list);\n      }\n    }\n  }\n  forEachInCell(cellKey, fn) {\n    var _this$_cellKeyToChild2;\n    var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild2 !== void 0 ? _this$_cellKeyToChild2 : [];\n    for (var _iterator3 = _createForOfIteratorHelperLoose(listSet), _step3; !(_step3 = _iterator3()).done;) {\n      var list = _step3.value;\n      fn(list);\n    }\n  }\n  anyInCell(cellKey, fn) {\n    var _this$_cellKeyToChild3;\n    var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild3 !== void 0 ? _this$_cellKeyToChild3 : [];\n    for (var _iterator4 = _createForOfIteratorHelperLoose(listSet), _step4; !(_step4 = _iterator4()).done;) {\n      var list = _step4.value;\n      if (fn(list)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  size() {\n    return this._childrenToCellKey.size;\n  }\n}","map":{"version":3,"names":["_createForOfIteratorHelperLoose","invariant","ChildListCollection","constructor","_cellKeyToChildren","Map","_childrenToCellKey","add","list","cellKey","_this$_cellKeyToChild","has","cellLists","get","Set","set","remove","delete","size","forEach","fn","_iterator","values","_step","done","listSet","value","_iterator2","_step2","forEachInCell","_this$_cellKeyToChild2","_iterator3","_step3","anyInCell","_this$_cellKeyToChild3","_iterator4","_step4"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-web/dist/vendor/react-native/VirtualizedList/ChildListCollection.js"],"sourcesContent":["import _createForOfIteratorHelperLoose from \"@babel/runtime/helpers/createForOfIteratorHelperLoose\";\n/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n\nimport invariant from 'fbjs/lib/invariant';\nexport default class ChildListCollection {\n  constructor() {\n    this._cellKeyToChildren = new Map();\n    this._childrenToCellKey = new Map();\n  }\n  add(list, cellKey) {\n    var _this$_cellKeyToChild;\n    invariant(!this._childrenToCellKey.has(list), 'Trying to add already present child list');\n    var cellLists = (_this$_cellKeyToChild = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild !== void 0 ? _this$_cellKeyToChild : new Set();\n    cellLists.add(list);\n    this._cellKeyToChildren.set(cellKey, cellLists);\n    this._childrenToCellKey.set(list, cellKey);\n  }\n  remove(list) {\n    var cellKey = this._childrenToCellKey.get(list);\n    invariant(cellKey != null, 'Trying to remove non-present child list');\n    this._childrenToCellKey.delete(list);\n    var cellLists = this._cellKeyToChildren.get(cellKey);\n    invariant(cellLists, '_cellKeyToChildren should contain cellKey');\n    cellLists.delete(list);\n    if (cellLists.size === 0) {\n      this._cellKeyToChildren.delete(cellKey);\n    }\n  }\n  forEach(fn) {\n    for (var _iterator = _createForOfIteratorHelperLoose(this._cellKeyToChildren.values()), _step; !(_step = _iterator()).done;) {\n      var listSet = _step.value;\n      for (var _iterator2 = _createForOfIteratorHelperLoose(listSet), _step2; !(_step2 = _iterator2()).done;) {\n        var list = _step2.value;\n        fn(list);\n      }\n    }\n  }\n  forEachInCell(cellKey, fn) {\n    var _this$_cellKeyToChild2;\n    var listSet = (_this$_cellKeyToChild2 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild2 !== void 0 ? _this$_cellKeyToChild2 : [];\n    for (var _iterator3 = _createForOfIteratorHelperLoose(listSet), _step3; !(_step3 = _iterator3()).done;) {\n      var list = _step3.value;\n      fn(list);\n    }\n  }\n  anyInCell(cellKey, fn) {\n    var _this$_cellKeyToChild3;\n    var listSet = (_this$_cellKeyToChild3 = this._cellKeyToChildren.get(cellKey)) !== null && _this$_cellKeyToChild3 !== void 0 ? _this$_cellKeyToChild3 : [];\n    for (var _iterator4 = _createForOfIteratorHelperLoose(listSet), _step4; !(_step4 = _iterator4()).done;) {\n      var list = _step4.value;\n      if (fn(list)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  size() {\n    return this._childrenToCellKey.size;\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}