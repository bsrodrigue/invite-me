{"ast":null,"code":"'use strict';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nexport default class AnimatedTransform extends AnimatedWithChildren {\n  constructor(transforms) {\n    super();\n    this._transforms = transforms;\n  }\n  __makeNative(platformConfig) {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative(platformConfig);\n        }\n      }\n    });\n    super.__makeNative(platformConfig);\n  }\n  __getValue() {\n    return this._get(animatedNode => animatedNode.__getValue());\n  }\n  __getAnimatedValue() {\n    return this._get(animatedNode => animatedNode.__getAnimatedValue());\n  }\n  __attach() {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n  __detach() {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n  __getNativeConfig() {\n    const transConfigs = [];\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag()\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value)\n          });\n        }\n      }\n    });\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs\n    };\n  }\n  _get(getter) {\n    return this._transforms.map(transform => {\n      const result = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = getter(value);\n        } else if (Array.isArray(value)) {\n          result[key] = value.map(element => {\n            if (element instanceof AnimatedNode) {\n              return getter(element);\n            } else {\n              return element;\n            }\n          });\n        } else if (typeof value === 'object') {\n          result[key] = {};\n          for (const [nestedKey, nestedValue] of Object.entries(value)) {\n            if (nestedValue instanceof AnimatedNode) {\n              result[key][nestedKey] = getter(nestedValue);\n            } else {\n              result[key][nestedKey] = nestedValue;\n            }\n          }\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n}","map":{"version":3,"names":["NativeAnimatedHelper","AnimatedNode","AnimatedWithChildren","AnimatedTransform","constructor","transforms","_transforms","__makeNative","platformConfig","forEach","transform","key","value","__getValue","_get","animatedNode","__getAnimatedValue","__attach","__addChild","__detach","__removeChild","__getNativeConfig","transConfigs","push","type","property","nodeTag","__getNativeTag","transformDataType","validateTransform","getter","map","result","Array","isArray","element","nestedKey","nestedValue","Object","entries"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Animated/nodes/AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedTransform extends AnimatedWithChildren {\n  _transforms: $ReadOnlyArray<Object>;\n\n  constructor(transforms: $ReadOnlyArray<Object>) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative(platformConfig);\n        }\n      }\n    });\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue(): $ReadOnlyArray<Object> {\n    return this._get(animatedNode => animatedNode.__getValue());\n  }\n\n  __getAnimatedValue(): $ReadOnlyArray<Object> {\n    return this._get(animatedNode => animatedNode.__getAnimatedValue());\n  }\n\n  __attach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    const transConfigs: Array<any> = [];\n\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value),\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs,\n    };\n  }\n\n  _get(getter: AnimatedNode => any): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result: {[string]: any} = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = getter(value);\n        } else if (Array.isArray(value)) {\n          result[key] = value.map(element => {\n            if (element instanceof AnimatedNode) {\n              return getter(element);\n            } else {\n              return element;\n            }\n          });\n        } else if (typeof value === 'object') {\n          result[key] = {};\n          for (const [nestedKey, nestedValue] of Object.entries(value)) {\n            if (nestedValue instanceof AnimatedNode) {\n              result[key][nestedKey] = getter(nestedValue);\n            } else {\n              result[key][nestedKey] = nestedValue;\n            }\n          }\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}