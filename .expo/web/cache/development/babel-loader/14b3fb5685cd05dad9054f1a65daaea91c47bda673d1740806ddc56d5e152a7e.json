{"ast":null,"code":"import jwtDecode from \"jwt-decode\";\nexport function getJwtExpirationDate(token) {\n  try {\n    const decodedToken = jwtDecode(token);\n    if (decodedToken?.exp) {\n      const expirationDate = new Date(decodedToken.exp * 1000);\n      return expirationDate;\n    } else {\n      console.log('JWT does not contain an expiration date');\n    }\n  } catch (error) {\n    console.error('Error decoding JWT:', error);\n  }\n}\nexport function getJwtUser(token) {\n  try {\n    const decodedToken = jwtDecode(token);\n    if (decodedToken?.user) {\n      return decodedToken.user;\n    } else {\n      console.log('JWT does not contain a user');\n    }\n  } catch (error) {\n    console.error('Error decoding JWT:', error);\n  }\n}","map":{"version":3,"names":["jwtDecode","getJwtExpirationDate","token","decodedToken","exp","expirationDate","Date","console","log","error","getJwtUser","user"],"sources":["/home/rodo/workspace/passion/apps/muh-money/src/lib/jwt/index.ts"],"sourcesContent":["import jwtDecode from \"jwt-decode\";\nimport { UserProfile } from \"../../types/auth\";\n\nexport function getJwtExpirationDate(token: string): Date {\n    try {\n        const decodedToken = jwtDecode(token) as any;\n        if (decodedToken?.exp) {\n            const expirationDate = new Date(decodedToken.exp * 1000); // Convert to milliseconds\n            return expirationDate;\n        } else {\n            console.log('JWT does not contain an expiration date');\n        }\n    } catch (error) {\n        console.error('Error decoding JWT:', error);\n    }\n}\n\nexport function getJwtUser(token: string): UserProfile {\n    try {\n        const decodedToken = jwtDecode(token) as any;\n        if (decodedToken?.user) {\n            return decodedToken.user;\n        } else {\n            console.log('JWT does not contain a user');\n        }\n    } catch (error) {\n        console.error('Error decoding JWT:', error);\n    }\n}"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAGlC,OAAO,SAASC,oBAAoBA,CAACC,KAAa,EAAQ;EACtD,IAAI;IACA,MAAMC,YAAY,GAAGH,SAAS,CAACE,KAAK,CAAQ;IAC5C,IAAIC,YAAY,EAAEC,GAAG,EAAE;MACnB,MAAMC,cAAc,GAAG,IAAIC,IAAI,CAACH,YAAY,CAACC,GAAG,GAAG,IAAI,CAAC;MACxD,OAAOC,cAAc;IACzB,CAAC,MAAM;MACHE,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IAC1D;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC/C;AACJ;AAEA,OAAO,SAASC,UAAUA,CAACR,KAAa,EAAe;EACnD,IAAI;IACA,MAAMC,YAAY,GAAGH,SAAS,CAACE,KAAK,CAAQ;IAC5C,IAAIC,YAAY,EAAEQ,IAAI,EAAE;MACpB,OAAOR,YAAY,CAACQ,IAAI;IAC5B,CAAC,MAAM;MACHJ,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC/C;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}