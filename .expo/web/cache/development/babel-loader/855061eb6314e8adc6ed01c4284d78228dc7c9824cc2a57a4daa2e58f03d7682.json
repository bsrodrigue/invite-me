{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/LogBox/UI/AnsiHighlight.js\";\nimport View from '../../Components/View/View';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport { ansiToJson } from 'anser';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  'ansi-black': 'rgb(27, 27, 27)',\n  'ansi-red': 'rgb(187, 86, 83)',\n  'ansi-green': 'rgb(144, 157, 98)',\n  'ansi-yellow': 'rgb(234, 193, 121)',\n  'ansi-blue': 'rgb(125, 169, 199)',\n  'ansi-magenta': 'rgb(176, 101, 151)',\n  'ansi-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-black': 'rgb(98, 98, 98)',\n  'ansi-bright-red': 'rgb(187, 86, 83)',\n  'ansi-bright-green': 'rgb(144, 157, 98)',\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-white': 'rgb(247, 247, 247)'\n};\nexport default function Ansi({\n  text,\n  style\n}) {\n  let commonWhitespaceLength = Infinity;\n  const parsedLines = text.split(/\\n/).map(line => ansiToJson(line, {\n    json: true,\n    remove_empty: true,\n    use_classes: true\n  }));\n  parsedLines.map(lines => {\n    const match = lines[2] && lines[2]?.content?.match(/^ +/);\n    const whitespaceLength = match && match[0]?.length || 0;\n    if (whitespaceLength < commonWhitespaceLength) {\n      commonWhitespaceLength = whitespaceLength;\n    }\n  });\n  const getText = (content, key) => {\n    if (key === 1) {\n      return content.replace(/\\| $/, ' ');\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\n      return content.slice(commonWhitespaceLength);\n    } else {\n      return content;\n    }\n  };\n  return _jsxDEV(View, {\n    children: parsedLines.map((items, i) => _jsxDEV(View, {\n      style: styles.line,\n      children: items.map((bundle, key) => {\n        const textStyle = bundle.fg && COLORS[bundle.fg] ? {\n          backgroundColor: bundle.bg && COLORS[bundle.bg],\n          color: bundle.fg && COLORS[bundle.fg]\n        } : {\n          backgroundColor: bundle.bg && COLORS[bundle.bg]\n        };\n        return _jsxDEV(Text, {\n          style: [style, textStyle],\n          children: getText(bundle.content, key)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this);\n      })\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  line: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["View","StyleSheet","Text","ansiToJson","React","jsxDEV","_jsxDEV","COLORS","Ansi","text","style","commonWhitespaceLength","Infinity","parsedLines","split","map","line","json","remove_empty","use_classes","lines","match","content","whitespaceLength","length","getText","key","replace","slice","children","items","i","styles","bundle","textStyle","fg","backgroundColor","bg","color","fileName","_jsxFileName","lineNumber","columnNumber","create","flexDirection"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/LogBox/UI/AnsiHighlight.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {TextStyleProp} from '../../StyleSheet/StyleSheet';\n\nimport View from '../../Components/View/View';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Text from '../../Text/Text';\nimport {ansiToJson} from 'anser';\nimport * as React from 'react';\n\n// Afterglow theme from https://iterm2colorschemes.com/\nconst COLORS = {\n  'ansi-black': 'rgb(27, 27, 27)',\n  'ansi-red': 'rgb(187, 86, 83)',\n  'ansi-green': 'rgb(144, 157, 98)',\n  'ansi-yellow': 'rgb(234, 193, 121)',\n  'ansi-blue': 'rgb(125, 169, 199)',\n  'ansi-magenta': 'rgb(176, 101, 151)',\n  'ansi-cyan': 'rgb(140, 220, 216)',\n  // Instead of white, use the default color provided to the component\n  // 'ansi-white': 'rgb(216, 216, 216)',\n  'ansi-bright-black': 'rgb(98, 98, 98)',\n  'ansi-bright-red': 'rgb(187, 86, 83)',\n  'ansi-bright-green': 'rgb(144, 157, 98)',\n  'ansi-bright-yellow': 'rgb(234, 193, 121)',\n  'ansi-bright-blue': 'rgb(125, 169, 199)',\n  'ansi-bright-magenta': 'rgb(176, 101, 151)',\n  'ansi-bright-cyan': 'rgb(140, 220, 216)',\n  'ansi-bright-white': 'rgb(247, 247, 247)',\n};\n\nexport default function Ansi({\n  text,\n  style,\n}: {\n  text: string,\n  style: TextStyleProp,\n  ...\n}): React.Node {\n  let commonWhitespaceLength = Infinity;\n  const parsedLines = text.split(/\\n/).map(line =>\n    ansiToJson(line, {\n      json: true,\n      remove_empty: true,\n      use_classes: true,\n    }),\n  );\n\n  parsedLines.map(lines => {\n    // The third item on each line includes the whitespace of the source code.\n    // We are looking for the least amount of common whitespace to trim all lines.\n    // Example: Array [\" \", \" 96 |\", \"     text\", ...]\n    const match = lines[2] && lines[2]?.content?.match(/^ +/);\n    const whitespaceLength = (match && match[0]?.length) || 0;\n    if (whitespaceLength < commonWhitespaceLength) {\n      commonWhitespaceLength = whitespaceLength;\n    }\n  });\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  const getText = (content, key) => {\n    if (key === 1) {\n      // Remove the vertical bar after line numbers\n      return content.replace(/\\| $/, ' ');\n    } else if (key === 2 && commonWhitespaceLength < Infinity) {\n      // Remove common whitespace at the beginning of the line\n      return content.slice(commonWhitespaceLength);\n    } else {\n      return content;\n    }\n  };\n\n  return (\n    <View>\n      {parsedLines.map((items, i) => (\n        <View style={styles.line} key={i}>\n          {items.map((bundle, key) => {\n            const textStyle =\n              bundle.fg && COLORS[bundle.fg]\n                ? {\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\n                    color: bundle.fg && COLORS[bundle.fg],\n                  }\n                : {\n                    backgroundColor: bundle.bg && COLORS[bundle.bg],\n                  };\n            return (\n              <Text style={[style, textStyle]} key={key}>\n                {getText(bundle.content, key)}\n              </Text>\n            );\n          })}\n        </View>\n      ))}\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  line: {\n    flexDirection: 'row',\n  },\n});\n"],"mappings":";AAYA,OAAOA,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,IAAI,MAAM,iBAAiB;AAClC,SAAQC,UAAU,QAAO,OAAO;AAChC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/B,MAAMC,MAAM,GAAG;EACb,YAAY,EAAE,iBAAiB;EAC/B,UAAU,EAAE,kBAAkB;EAC9B,YAAY,EAAE,mBAAmB;EACjC,aAAa,EAAE,oBAAoB;EACnC,WAAW,EAAE,oBAAoB;EACjC,cAAc,EAAE,oBAAoB;EACpC,WAAW,EAAE,oBAAoB;EAGjC,mBAAmB,EAAE,iBAAiB;EACtC,iBAAiB,EAAE,kBAAkB;EACrC,mBAAmB,EAAE,mBAAmB;EACxC,oBAAoB,EAAE,oBAAoB;EAC1C,kBAAkB,EAAE,oBAAoB;EACxC,qBAAqB,EAAE,oBAAoB;EAC3C,kBAAkB,EAAE,oBAAoB;EACxC,mBAAmB,EAAE;AACvB,CAAC;AAED,eAAe,SAASC,IAAIA,CAAC;EAC3BC,IAAI;EACJC;AAKF,CAAC,EAAc;EACb,IAAIC,sBAAsB,GAAGC,QAAQ;EACrC,MAAMC,WAAW,GAAGJ,IAAI,CAACK,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,IAAI,IAC3Cb,UAAU,CAACa,IAAI,EAAE;IACfC,IAAI,EAAE,IAAI;IACVC,YAAY,EAAE,IAAI;IAClBC,WAAW,EAAE;EACf,CAAC,CACH,CAAC;EAEDN,WAAW,CAACE,GAAG,CAACK,KAAK,IAAI;IAIvB,MAAMC,KAAK,GAAGD,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAEE,OAAO,EAAED,KAAK,CAAC,KAAK,CAAC;IACzD,MAAME,gBAAgB,GAAIF,KAAK,IAAIA,KAAK,CAAC,CAAC,CAAC,EAAEG,MAAM,IAAK,CAAC;IACzD,IAAID,gBAAgB,GAAGZ,sBAAsB,EAAE;MAC7CA,sBAAsB,GAAGY,gBAAgB;IAC3C;EACF,CAAC,CAAC;EAIF,MAAME,OAAO,GAAGA,CAACH,OAAO,EAAEI,GAAG,KAAK;IAChC,IAAIA,GAAG,KAAK,CAAC,EAAE;MAEb,OAAOJ,OAAO,CAACK,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IACrC,CAAC,MAAM,IAAID,GAAG,KAAK,CAAC,IAAIf,sBAAsB,GAAGC,QAAQ,EAAE;MAEzD,OAAOU,OAAO,CAACM,KAAK,CAACjB,sBAAsB,CAAC;IAC9C,CAAC,MAAM;MACL,OAAOW,OAAO;IAChB;EACF,CAAC;EAED,OACEhB,OAAA,CAACN,IAAI;IAAA6B,QAAA,EACFhB,WAAW,CAACE,GAAG,CAAC,CAACe,KAAK,EAAEC,CAAC,KACxBzB,OAAA,CAACN,IAAI;MAACU,KAAK,EAAEsB,MAAM,CAAChB,IAAK;MAAAa,QAAA,EACtBC,KAAK,CAACf,GAAG,CAAC,CAACkB,MAAM,EAAEP,GAAG,KAAK;QAC1B,MAAMQ,SAAS,GACbD,MAAM,CAACE,EAAE,IAAI5B,MAAM,CAAC0B,MAAM,CAACE,EAAE,CAAC,GAC1B;UACEC,eAAe,EAAEH,MAAM,CAACI,EAAE,IAAI9B,MAAM,CAAC0B,MAAM,CAACI,EAAE,CAAC;UAC/CC,KAAK,EAAEL,MAAM,CAACE,EAAE,IAAI5B,MAAM,CAAC0B,MAAM,CAACE,EAAE;QACtC,CAAC,GACD;UACEC,eAAe,EAAEH,MAAM,CAACI,EAAE,IAAI9B,MAAM,CAAC0B,MAAM,CAACI,EAAE;QAChD,CAAC;QACP,OACE/B,OAAA,CAACJ,IAAI;UAACQ,KAAK,EAAE,CAACA,KAAK,EAAEwB,SAAS,CAAE;UAAAL,QAAA,EAC7BJ,OAAO,CAACQ,MAAM,CAACX,OAAO,EAAEI,GAAG;QAAC,GADOA,GAAG;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEnC,CAAC;MAEX,CAAC;IAAC,GAhB2BX,CAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiB1B,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX;AAEA,MAAMV,MAAM,GAAG/B,UAAU,CAAC0C,MAAM,CAAC;EAC/B3B,IAAI,EAAE;IACJ4B,aAAa,EAAE;EACjB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}