{"ast":null,"code":"import symbolicateStackTrace from '../../Core/Devtools/symbolicateStackTrace';\nconst cache = new Map();\nconst sanitize = ({\n  stack: maybeStack,\n  codeFrame\n}) => {\n  if (!Array.isArray(maybeStack)) {\n    throw new Error('Expected stack to be an array.');\n  }\n  const stack = [];\n  for (const maybeFrame of maybeStack) {\n    let collapse = false;\n    if ('collapse' in maybeFrame) {\n      if (typeof maybeFrame.collapse !== 'boolean') {\n        throw new Error('Expected stack frame `collapse` to be a boolean.');\n      }\n      collapse = maybeFrame.collapse;\n    }\n    stack.push({\n      column: maybeFrame.column,\n      file: maybeFrame.file,\n      lineNumber: maybeFrame.lineNumber,\n      methodName: maybeFrame.methodName,\n      collapse\n    });\n  }\n  return {\n    stack,\n    codeFrame\n  };\n};\nexport function deleteStack(stack) {\n  cache.delete(stack);\n}\nexport function symbolicate(stack, extraData) {\n  let promise = cache.get(stack);\n  if (promise == null) {\n    promise = symbolicateStackTrace(stack, extraData).then(sanitize);\n    cache.set(stack, promise);\n  }\n  return promise;\n}","map":{"version":3,"names":["symbolicateStackTrace","cache","Map","sanitize","stack","maybeStack","codeFrame","Array","isArray","Error","maybeFrame","collapse","push","column","file","lineNumber","methodName","deleteStack","delete","symbolicate","extraData","promise","get","then","set"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/LogBox/Data/LogBoxSymbolication.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {SymbolicatedStackTrace} from '../../Core/Devtools/symbolicateStackTrace';\nimport type {StackFrame} from '../../Core/NativeExceptionsManager';\n\nimport symbolicateStackTrace from '../../Core/Devtools/symbolicateStackTrace';\n\nexport type Stack = Array<StackFrame>;\n\nconst cache: Map<Stack, Promise<SymbolicatedStackTrace>> = new Map();\n\n/**\n * Sanitize because sometimes, `symbolicateStackTrace` gives us invalid values.\n */\nconst sanitize = ({\n  stack: maybeStack,\n  codeFrame,\n}: SymbolicatedStackTrace): SymbolicatedStackTrace => {\n  if (!Array.isArray(maybeStack)) {\n    throw new Error('Expected stack to be an array.');\n  }\n  const stack: Array<StackFrame> = [];\n  for (const maybeFrame of maybeStack) {\n    let collapse = false;\n    if ('collapse' in maybeFrame) {\n      if (typeof maybeFrame.collapse !== 'boolean') {\n        throw new Error('Expected stack frame `collapse` to be a boolean.');\n      }\n      collapse = maybeFrame.collapse;\n    }\n    stack.push({\n      column: maybeFrame.column,\n      file: maybeFrame.file,\n      lineNumber: maybeFrame.lineNumber,\n      methodName: maybeFrame.methodName,\n      collapse,\n    });\n  }\n  return {stack, codeFrame};\n};\n\nexport function deleteStack(stack: Stack): void {\n  cache.delete(stack);\n}\n\nexport function symbolicate(\n  stack: Stack,\n  extraData?: mixed,\n): Promise<SymbolicatedStackTrace> {\n  let promise = cache.get(stack);\n  if (promise == null) {\n    promise = symbolicateStackTrace(stack, extraData).then(sanitize);\n    cache.set(stack, promise);\n  }\n\n  return promise;\n}\n"],"mappings":"AAaA,OAAOA,qBAAqB,MAAM,2CAA2C;AAI7E,MAAMC,KAAkD,GAAG,IAAIC,GAAG,CAAC,CAAC;AAKpE,MAAMC,QAAQ,GAAGA,CAAC;EAChBC,KAAK,EAAEC,UAAU;EACjBC;AACsB,CAAC,KAA6B;EACpD,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,UAAU,CAAC,EAAE;IAC9B,MAAM,IAAII,KAAK,CAAC,gCAAgC,CAAC;EACnD;EACA,MAAML,KAAwB,GAAG,EAAE;EACnC,KAAK,MAAMM,UAAU,IAAIL,UAAU,EAAE;IACnC,IAAIM,QAAQ,GAAG,KAAK;IACpB,IAAI,UAAU,IAAID,UAAU,EAAE;MAC5B,IAAI,OAAOA,UAAU,CAACC,QAAQ,KAAK,SAAS,EAAE;QAC5C,MAAM,IAAIF,KAAK,CAAC,kDAAkD,CAAC;MACrE;MACAE,QAAQ,GAAGD,UAAU,CAACC,QAAQ;IAChC;IACAP,KAAK,CAACQ,IAAI,CAAC;MACTC,MAAM,EAAEH,UAAU,CAACG,MAAM;MACzBC,IAAI,EAAEJ,UAAU,CAACI,IAAI;MACrBC,UAAU,EAAEL,UAAU,CAACK,UAAU;MACjCC,UAAU,EAAEN,UAAU,CAACM,UAAU;MACjCL;IACF,CAAC,CAAC;EACJ;EACA,OAAO;IAACP,KAAK;IAAEE;EAAS,CAAC;AAC3B,CAAC;AAED,OAAO,SAASW,WAAWA,CAACb,KAAY,EAAQ;EAC9CH,KAAK,CAACiB,MAAM,CAACd,KAAK,CAAC;AACrB;AAEA,OAAO,SAASe,WAAWA,CACzBf,KAAY,EACZgB,SAAiB,EACgB;EACjC,IAAIC,OAAO,GAAGpB,KAAK,CAACqB,GAAG,CAAClB,KAAK,CAAC;EAC9B,IAAIiB,OAAO,IAAI,IAAI,EAAE;IACnBA,OAAO,GAAGrB,qBAAqB,CAACI,KAAK,EAAEgB,SAAS,CAAC,CAACG,IAAI,CAACpB,QAAQ,CAAC;IAChEF,KAAK,CAACuB,GAAG,CAACpB,KAAK,EAAEiB,OAAO,CAAC;EAC3B;EAEA,OAAOA,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}