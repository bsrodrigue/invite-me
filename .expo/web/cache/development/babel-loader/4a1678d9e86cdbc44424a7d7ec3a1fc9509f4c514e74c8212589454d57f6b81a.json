{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport { childrenWithOverriddenStyle } from './utils';\nimport PagerViewView, { Commands as PagerViewCommands } from './PagerViewNativeComponent';\nif (Platform.OS === 'ios') {\n  require('react-native/Libraries/Renderer/shims/ReactNative');\n}\nexport class PagerView extends React.Component {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"isScrolling\", false);\n    _defineProperty(this, \"pagerView\", null);\n    _defineProperty(this, \"_onPageScroll\", e => {\n      if (this.props.onPageScroll) {\n        this.props.onPageScroll(e);\n      }\n      if (Platform.OS === 'android') {\n        if (this.props.keyboardDismissMode === 'on-drag') {\n          Keyboard.dismiss();\n        }\n      }\n    });\n    _defineProperty(this, \"_onPageScrollStateChanged\", e => {\n      if (this.props.onPageScrollStateChanged) {\n        this.props.onPageScrollStateChanged(e);\n      }\n      this.isScrolling = e.nativeEvent.pageScrollState === 'dragging';\n    });\n    _defineProperty(this, \"_onPageSelected\", e => {\n      if (this.props.onPageSelected) {\n        this.props.onPageSelected(e);\n      }\n    });\n    _defineProperty(this, \"setPage\", selectedPage => {\n      if (this.pagerView) {\n        PagerViewCommands.setPage(this.pagerView, selectedPage);\n      }\n    });\n    _defineProperty(this, \"setPageWithoutAnimation\", selectedPage => {\n      if (this.pagerView) {\n        PagerViewCommands.setPageWithoutAnimation(this.pagerView, selectedPage);\n      }\n    });\n    _defineProperty(this, \"setScrollEnabled\", scrollEnabled => {\n      if (this.pagerView) {\n        PagerViewCommands.setScrollEnabledImperatively(this.pagerView, scrollEnabled);\n      }\n    });\n    _defineProperty(this, \"_onMoveShouldSetResponderCapture\", () => {\n      return this.isScrolling;\n    });\n  }\n  get deducedLayoutDirection() {\n    if (!this.props.layoutDirection || this.props.layoutDirection === 'locale') {\n      return I18nManager.isRTL ? 'rtl' : 'ltr';\n    } else {\n      return this.props.layoutDirection;\n    }\n  }\n  render() {\n    return React.createElement(PagerViewView, _extends({}, this.props, {\n      ref: ref => {\n        this.pagerView = ref;\n      },\n      style: this.props.style,\n      layoutDirection: this.deducedLayoutDirection,\n      onPageScroll: this._onPageScroll,\n      onPageScrollStateChanged: this._onPageScrollStateChanged,\n      onPageSelected: this._onPageSelected,\n      onMoveShouldSetResponderCapture: this._onMoveShouldSetResponderCapture,\n      children: childrenWithOverriddenStyle(this.props.children)\n    }));\n  }\n}","map":{"version":3,"names":["React","Platform","Keyboard","I18nManager","childrenWithOverriddenStyle","PagerViewView","Commands","PagerViewCommands","OS","require","PagerView","Component","constructor","arguments","_defineProperty","e","props","onPageScroll","keyboardDismissMode","dismiss","onPageScrollStateChanged","isScrolling","nativeEvent","pageScrollState","onPageSelected","selectedPage","pagerView","setPage","setPageWithoutAnimation","scrollEnabled","setScrollEnabledImperatively","deducedLayoutDirection","layoutDirection","isRTL","render","createElement","_extends","ref","style","_onPageScroll","_onPageScrollStateChanged","_onPageSelected","onMoveShouldSetResponderCapture","_onMoveShouldSetResponderCapture","children"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-pager-view/lib/module/PagerView.tsx"],"sourcesContent":["import React from 'react';\nimport { Platform, Keyboard } from 'react-native';\nimport { I18nManager } from 'react-native';\nimport type {\n  OnPageScrollEventData,\n  OnPageScrollStateChangedEventData,\n  OnPageSelectedEventData,\n} from './PagerViewNativeComponent';\nimport type * as ReactNative from 'react-native';\n\nimport type { NativeProps as PagerViewProps } from './PagerViewNativeComponent';\nimport { childrenWithOverriddenStyle } from './utils';\nimport PagerViewView, {\n  Commands as PagerViewCommands,\n} from './PagerViewNativeComponent';\n\n// The Fabric component for PagerView uses a work around present also in ScrollView:\n// https://github.com/callstack/react-native-pager-view/blob/master/ios/Fabric/RNCPagerViewComponentView.mm#L362-L368\n// That workaround works only if we add these lines in to make sure that the RCTEventEmitter is registered properly\n// in the JS callable modules.\n// NOTE: This is a workaround as we would like to get rid of these lines below. But for the time being, as the cut date for\n// 0.74 approaches, we need to keep these lines.\n// As soon as we figure out how to move forward, we will provide guidance and/or submit a PR to fix this.\nif (Platform.OS === 'ios') {\n  require('react-native/Libraries/Renderer/shims/ReactNative'); // Force side effects to prevent T55744311\n}\n\n/**\n * Container that allows to flip left and right between child views. Each\n * child view of the `PagerView` will be treated as a separate page\n * and will be stretched to fill the `PagerView`.\n *\n * It is important all children are `<View>`s and not composite components.\n * You can set style properties like `padding` or `backgroundColor` for each\n * child. It is also important that each child have a `key` prop.\n *\n * Example:\n *\n * ```\n * render: function() {\n *   return (\n *     <PagerView\n *       style={styles.PagerView}\n *       initialPage={0}>\n *       <View style={styles.pageStyle} key=\"1\">\n *         <Text>First page</Text>\n *       </View>\n *       <View style={styles.pageStyle} key=\"2\">\n *         <Text>Second page</Text>\n *       </View>\n *     </PagerView>\n *   );\n * }\n *\n * ...\n *\n * var styles = {\n *   ...\n *   PagerView: {\n *     flex: 1\n *   },\n *   pageStyle: {\n *     alignItems: 'center',\n *     padding: 20,\n *   }\n * }\n * ```\n */\n\nexport class PagerView extends React.Component<PagerViewProps> {\n  private isScrolling = false;\n  pagerView: React.ElementRef<typeof PagerViewView> | null = null;\n\n  private _onPageScroll = (\n    e: ReactNative.NativeSyntheticEvent<OnPageScrollEventData>\n  ) => {\n    if (this.props.onPageScroll) {\n      this.props.onPageScroll(e);\n    }\n\n    // Not implemented on iOS yet\n    if (Platform.OS === 'android') {\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n    }\n  };\n\n  private _onPageScrollStateChanged = (\n    e: ReactNative.NativeSyntheticEvent<OnPageScrollStateChangedEventData>\n  ) => {\n    if (this.props.onPageScrollStateChanged) {\n      this.props.onPageScrollStateChanged(e);\n    }\n    this.isScrolling = e.nativeEvent.pageScrollState === 'dragging';\n  };\n\n  private _onPageSelected = (\n    e: ReactNative.NativeSyntheticEvent<OnPageSelectedEventData>\n  ) => {\n    if (this.props.onPageSelected) {\n      this.props.onPageSelected(e);\n    }\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the PagerView.\n   * The transition between pages will be animated.\n   */\n  public setPage = (selectedPage: number) => {\n    if (this.pagerView) {\n      PagerViewCommands.setPage(this.pagerView, selectedPage);\n    }\n  };\n\n  /**\n   * A helper function to scroll to a specific page in the PagerView.\n   * The transition between pages will *not* be animated.\n   */\n  public setPageWithoutAnimation = (selectedPage: number) => {\n    if (this.pagerView) {\n      PagerViewCommands.setPageWithoutAnimation(this.pagerView, selectedPage);\n    }\n  };\n\n  /**\n   * A helper function to enable/disable scroll imperatively\n   * The recommended way is using the scrollEnabled prop, however, there might be a case where a\n   * imperative solution is more useful (e.g. for not blocking an animation)\n   */\n  public setScrollEnabled = (scrollEnabled: boolean) => {\n    if (this.pagerView) {\n      PagerViewCommands.setScrollEnabledImperatively(\n        this.pagerView,\n        scrollEnabled\n      );\n    }\n  };\n\n  private _onMoveShouldSetResponderCapture = () => {\n    return this.isScrolling;\n  };\n\n  private get deducedLayoutDirection() {\n    if (\n      !this.props.layoutDirection ||\n      //@ts-ignore fix it\n      this.props.layoutDirection === 'locale'\n    ) {\n      return I18nManager.isRTL ? 'rtl' : 'ltr';\n    } else {\n      return this.props.layoutDirection;\n    }\n  }\n\n  render() {\n    return (\n      <PagerViewView\n        {...this.props}\n        ref={(ref) => {\n          this.pagerView = ref;\n        }}\n        style={this.props.style}\n        layoutDirection={this.deducedLayoutDirection}\n        onPageScroll={this._onPageScroll}\n        onPageScrollStateChanged={this._onPageScrollStateChanged}\n        onPageSelected={this._onPageSelected}\n        onMoveShouldSetResponderCapture={this._onMoveShouldSetResponderCapture}\n        children={childrenWithOverriddenStyle(this.props.children)}\n      />\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}