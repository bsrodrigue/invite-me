{"ast":null,"code":"import React from 'react';\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { isIOS } from '../utils/platform';\nexport function useKeyboard() {\n  const [keyboardHeight, setKeyboardHeight] = React.useState(0);\n  const [isKeyboardVisible, setIsKeyboardVisible] = React.useState(false);\n  const onShow = React.useCallback(event => {\n    const {\n      height\n    } = event.endCoordinates;\n    setKeyboardHeight(height);\n    setIsKeyboardVisible(true);\n  }, []);\n  const onHide = React.useCallback(() => {\n    setKeyboardHeight(0);\n    setIsKeyboardVisible(false);\n  }, []);\n  React.useEffect(() => {\n    if (!isIOS()) {\n      return () => {};\n    }\n    const didShowListener = Keyboard.addListener('keyboardDidShow', onShow);\n    const didHideListener = Keyboard.addListener('keyboardDidHide', onHide);\n    return () => {\n      didShowListener.remove();\n      didHideListener.remove();\n    };\n  }, [onHide, onShow]);\n  return {\n    keyboardHeight,\n    isKeyboardVisible\n  };\n}","map":{"version":3,"names":["React","Keyboard","isIOS","useKeyboard","keyboardHeight","setKeyboardHeight","useState","isKeyboardVisible","setIsKeyboardVisible","onShow","useCallback","event","height","endCoordinates","onHide","useEffect","didShowListener","addListener","didHideListener","remove"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-toast-message/lib/src/hooks/useKeyboard.js"],"sourcesContent":["import React from 'react';\nimport { Keyboard } from 'react-native';\nimport { isIOS } from '../utils/platform';\nexport function useKeyboard() {\n    const [keyboardHeight, setKeyboardHeight] = React.useState(0);\n    const [isKeyboardVisible, setIsKeyboardVisible] = React.useState(false);\n    const onShow = React.useCallback((event) => {\n        const { height } = event.endCoordinates;\n        setKeyboardHeight(height);\n        setIsKeyboardVisible(true);\n    }, []);\n    const onHide = React.useCallback(() => {\n        setKeyboardHeight(0);\n        setIsKeyboardVisible(false);\n    }, []);\n    React.useEffect(() => {\n        if (!isIOS()) {\n            return () => { };\n        }\n        const didShowListener = Keyboard.addListener('keyboardDidShow', onShow);\n        const didHideListener = Keyboard.addListener('keyboardDidHide', onHide);\n        return () => {\n            didShowListener.remove();\n            didHideListener.remove();\n        };\n    }, [onHide, onShow]);\n    return {\n        keyboardHeight,\n        isKeyboardVisible\n    };\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAE1B,SAASC,KAAK,QAAQ,mBAAmB;AACzC,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,KAAK,CAACM,QAAQ,CAAC,KAAK,CAAC;EACvE,MAAMG,MAAM,GAAGT,KAAK,CAACU,WAAW,CAAEC,KAAK,IAAK;IACxC,MAAM;MAAEC;IAAO,CAAC,GAAGD,KAAK,CAACE,cAAc;IACvCR,iBAAiB,CAACO,MAAM,CAAC;IACzBJ,oBAAoB,CAAC,IAAI,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EACN,MAAMM,MAAM,GAAGd,KAAK,CAACU,WAAW,CAAC,MAAM;IACnCL,iBAAiB,CAAC,CAAC,CAAC;IACpBG,oBAAoB,CAAC,KAAK,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EACNR,KAAK,CAACe,SAAS,CAAC,MAAM;IAClB,IAAI,CAACb,KAAK,CAAC,CAAC,EAAE;MACV,OAAO,MAAM,CAAE,CAAC;IACpB;IACA,MAAMc,eAAe,GAAGf,QAAQ,CAACgB,WAAW,CAAC,iBAAiB,EAAER,MAAM,CAAC;IACvE,MAAMS,eAAe,GAAGjB,QAAQ,CAACgB,WAAW,CAAC,iBAAiB,EAAEH,MAAM,CAAC;IACvE,OAAO,MAAM;MACTE,eAAe,CAACG,MAAM,CAAC,CAAC;MACxBD,eAAe,CAACC,MAAM,CAAC,CAAC;IAC5B,CAAC;EACL,CAAC,EAAE,CAACL,MAAM,EAAEL,MAAM,CAAC,CAAC;EACpB,OAAO;IACHL,cAAc;IACdG;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}