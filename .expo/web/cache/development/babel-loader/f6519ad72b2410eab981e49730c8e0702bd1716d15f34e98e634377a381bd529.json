{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/InspectorPanel.js\";\nimport SafeAreaView from '../Components/SafeAreaView/SafeAreaView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst TouchableHighlight = require('../Components/Touchable/TouchableHighlight');\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Text = require('../Text/Text');\nconst ElementProperties = require('./ElementProperties');\nconst NetworkOverlay = require('./NetworkOverlay');\nconst PerformanceOverlay = require('./PerformanceOverlay');\nconst React = require('react');\nclass InspectorPanel extends React.Component {\n  renderWaiting() {\n    if (this.props.inspecting) {\n      return _jsxDEV(Text, {\n        style: styles.waitingText,\n        children: \"Tap something to inspect it\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n    return _jsxDEV(Text, {\n      style: styles.waitingText,\n      children: \"Nothing is inspected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  render() {\n    let contents;\n    if (this.props.inspected) {\n      contents = _jsxDEV(ScrollView, {\n        style: styles.properties,\n        children: _jsxDEV(ElementProperties, {\n          style: this.props.inspected.style,\n          frame: this.props.inspected.frame,\n          hierarchy: this.props.hierarchy,\n          selection: this.props.selection,\n          setSelection: this.props.setSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    } else if (this.props.perfing) {\n      contents = _jsxDEV(PerformanceOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 18\n      }, this);\n    } else if (this.props.networking) {\n      contents = _jsxDEV(NetworkOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 18\n      }, this);\n    } else {\n      contents = _jsxDEV(View, {\n        style: styles.waiting,\n        children: this.renderWaiting()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }, this);\n    }\n    return _jsxDEV(SafeAreaView, {\n      style: styles.container,\n      children: [!this.props.devtoolsIsOpen && contents, _jsxDEV(View, {\n        style: styles.buttonRow,\n        children: [_jsxDEV(InspectorPanelButton, {\n          title: 'Inspect',\n          pressed: this.props.inspecting,\n          onClick: this.props.setInspecting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), _jsxDEV(InspectorPanelButton, {\n          title: 'Perf',\n          pressed: this.props.perfing,\n          onClick: this.props.setPerfing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), _jsxDEV(InspectorPanelButton, {\n          title: 'Network',\n          pressed: this.props.networking,\n          onClick: this.props.setNetworking\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), _jsxDEV(InspectorPanelButton, {\n          title: 'Touchables',\n          pressed: this.props.touchTargeting,\n          onClick: this.props.setTouchTargeting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass InspectorPanelButton extends React.Component {\n  render() {\n    return _jsxDEV(TouchableHighlight, {\n      onPress: () => this.props.onClick(!this.props.pressed),\n      style: [styles.button, this.props.pressed && styles.buttonPressed],\n      children: _jsxDEV(Text, {\n        style: styles.buttonText,\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst styles = StyleSheet.create({\n  buttonRow: {\n    flexDirection: 'row'\n  },\n  button: {\n    backgroundColor: 'rgba(0, 0, 0, 0.3)',\n    margin: 2,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonPressed: {\n    backgroundColor: 'rgba(255, 255, 255, 0.3)'\n  },\n  buttonText: {\n    textAlign: 'center',\n    color: 'white',\n    margin: 5\n  },\n  container: {\n    backgroundColor: 'rgba(0, 0, 0, 0.7)'\n  },\n  properties: {\n    height: 200\n  },\n  waiting: {\n    height: 100\n  },\n  waitingText: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginVertical: 20,\n    color: 'white'\n  }\n});\nmodule.exports = InspectorPanel;","map":{"version":3,"names":["_jsxFileName","SafeAreaView","jsxDEV","_jsxDEV","ScrollView","require","TouchableHighlight","View","StyleSheet","Text","ElementProperties","NetworkOverlay","PerformanceOverlay","React","InspectorPanel","Component","renderWaiting","props","inspecting","style","styles","waitingText","children","fileName","lineNumber","columnNumber","render","contents","inspected","properties","frame","hierarchy","selection","setSelection","perfing","networking","waiting","container","devtoolsIsOpen","buttonRow","InspectorPanelButton","title","pressed","onClick","setInspecting","setPerfing","setNetworking","touchTargeting","setTouchTargeting","onPress","button","buttonPressed","buttonText","create","flexDirection","backgroundColor","margin","height","justifyContent","alignItems","textAlign","color","fontSize","marginVertical","module","exports"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/InspectorPanel.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {ElementsHierarchy, InspectedElement} from './Inspector';\n\nimport SafeAreaView from '../Components/SafeAreaView/SafeAreaView';\n\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst TouchableHighlight = require('../Components/Touchable/TouchableHighlight');\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Text = require('../Text/Text');\nconst ElementProperties = require('./ElementProperties');\nconst NetworkOverlay = require('./NetworkOverlay');\nconst PerformanceOverlay = require('./PerformanceOverlay');\nconst React = require('react');\n\ntype Props = $ReadOnly<{|\n  devtoolsIsOpen: boolean,\n  inspecting: boolean,\n  setInspecting: (val: boolean) => void,\n  perfing: boolean,\n  setPerfing: (val: boolean) => void,\n  touchTargeting: boolean,\n  setTouchTargeting: (val: boolean) => void,\n  networking: boolean,\n  setNetworking: (val: boolean) => void,\n  hierarchy?: ?ElementsHierarchy,\n  selection?: ?number,\n  setSelection: number => mixed,\n  inspected?: ?InspectedElement,\n|}>;\n\nclass InspectorPanel extends React.Component<Props> {\n  renderWaiting(): React.Node {\n    if (this.props.inspecting) {\n      return (\n        <Text style={styles.waitingText}>Tap something to inspect it</Text>\n      );\n    }\n    return <Text style={styles.waitingText}>Nothing is inspected</Text>;\n  }\n\n  render(): React.Node {\n    let contents;\n    if (this.props.inspected) {\n      contents = (\n        <ScrollView style={styles.properties}>\n          <ElementProperties\n            style={this.props.inspected.style}\n            frame={this.props.inspected.frame}\n            hierarchy={this.props.hierarchy}\n            selection={this.props.selection}\n            setSelection={this.props.setSelection}\n          />\n        </ScrollView>\n      );\n    } else if (this.props.perfing) {\n      contents = <PerformanceOverlay />;\n    } else if (this.props.networking) {\n      contents = <NetworkOverlay />;\n    } else {\n      contents = <View style={styles.waiting}>{this.renderWaiting()}</View>;\n    }\n    return (\n      <SafeAreaView style={styles.container}>\n        {!this.props.devtoolsIsOpen && contents}\n        <View style={styles.buttonRow}>\n          <InspectorPanelButton\n            title={'Inspect'}\n            pressed={this.props.inspecting}\n            onClick={this.props.setInspecting}\n          />\n          <InspectorPanelButton\n            title={'Perf'}\n            pressed={this.props.perfing}\n            onClick={this.props.setPerfing}\n          />\n          <InspectorPanelButton\n            title={'Network'}\n            pressed={this.props.networking}\n            onClick={this.props.setNetworking}\n          />\n          <InspectorPanelButton\n            title={'Touchables'}\n            pressed={this.props.touchTargeting}\n            onClick={this.props.setTouchTargeting}\n          />\n        </View>\n      </SafeAreaView>\n    );\n  }\n}\n\ntype InspectorPanelButtonProps = $ReadOnly<{|\n  onClick: (val: boolean) => void,\n  pressed: boolean,\n  title: string,\n|}>;\n\nclass InspectorPanelButton extends React.Component<InspectorPanelButtonProps> {\n  render(): React.Node {\n    return (\n      <TouchableHighlight\n        onPress={() => this.props.onClick(!this.props.pressed)}\n        style={[styles.button, this.props.pressed && styles.buttonPressed]}>\n        <Text style={styles.buttonText}>{this.props.title}</Text>\n      </TouchableHighlight>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  buttonRow: {\n    flexDirection: 'row',\n  },\n  button: {\n    backgroundColor: 'rgba(0, 0, 0, 0.3)',\n    margin: 2,\n    height: 30,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  buttonPressed: {\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  },\n  buttonText: {\n    textAlign: 'center',\n    color: 'white',\n    margin: 5,\n  },\n  container: {\n    backgroundColor: 'rgba(0, 0, 0, 0.7)',\n  },\n  properties: {\n    height: 200,\n  },\n  waiting: {\n    height: 100,\n  },\n  waitingText: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginVertical: 20,\n    color: 'white',\n  },\n});\n\nmodule.exports = InspectorPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}