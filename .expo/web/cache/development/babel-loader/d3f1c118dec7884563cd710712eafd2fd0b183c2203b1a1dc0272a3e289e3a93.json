{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/src/components/CreateBudgetForm/CreateBudgetForm.tsx\";\nimport { useTheme } from '@rneui/themed';\nimport { useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ExpandingView } from '../ExpandingView';\nimport { Row } from '../Row';\nimport { ToggleButton } from '../ToggleButton';\nimport { FilterBadge } from '../FilterBadge';\nimport { TextInput } from '../Input';\nimport { Button } from '../Button';\nimport { DateTimePicker } from '../DateTimePicker';\nimport { useAccountStore } from '../../stores';\nimport Crypto from '../../lib/crypto';\nimport { Text } from '../Text';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateBudgetForm({\n  onCreate\n}) {\n  const {\n    theme: {\n      colors: {\n        primary,\n        error\n      }\n    }\n  } = useTheme();\n  const {\n    items\n  } = useAccountStore();\n  const [optionsEnabled, setOptionsEnabled] = useState(false);\n  const [accountTitle, setAccountTitle] = useState(items[0]?.title ?? \"\");\n  const [limitDate, setLimitDate] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [limit, setLimit] = useState(\"\");\n  const hasAccounts = items.length !== 0;\n  const isValid = title && limit;\n  const onSubmit = () => {\n    const uuid = Crypto.generateRandomUUID();\n    const account = items.find(item => item.title === accountTitle);\n    const data = {\n      uuid,\n      title,\n      linkedAccount: account.uuid,\n      limitDate: limitDate?.toISOString() ?? \"\",\n      balance: parseInt(limit)\n    };\n    onCreate(data);\n  };\n  return _jsxDEV(ExpandingView, {\n    style: {\n      paddingHorizontal: 10\n    },\n    children: [_jsxDEV(Row, {\n      style: {\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [_jsxDEV(Text, {\n        weight: \"700\",\n        style: {\n          fontSize: 18\n        },\n        children: \"Create Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), _jsxDEV(ToggleButton, {\n        onChange: active => setOptionsEnabled(active)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      label: `Budget name`,\n      onChangeText: setTitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      label: `Budget Limit`,\n      keyboardType: \"numeric\",\n      onChangeText: setLimit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), optionsEnabled && _jsxDEV(View, {\n      children: [_jsxDEV(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 14,\n          marginBottom: -10\n        },\n        children: \"Date Limit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), _jsxDEV(DateTimePicker, {\n        date: limitDate,\n        mode: \"date\",\n        onChange: value => setLimitDate(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this), hasAccounts && _jsxDEV(_Fragment, {\n      children: [_jsxDEV(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 14\n        },\n        children: \"Linked Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), _jsxDEV(FlatList, {\n        contentContainerStyle: {\n          gap: 10,\n          paddingVertical: 10\n        },\n        showsHorizontalScrollIndicator: false,\n        horizontal: true,\n        data: items,\n        renderItem: ({\n          item,\n          index\n        }) => _jsxDEV(FilterBadge, {\n          onPress: value => {\n            setAccountTitle(value);\n          },\n          activeColor: primary,\n          label: item.title,\n          active: accountTitle === item.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), !hasAccounts && _jsxDEV(View, {\n      style: {\n        marginVertical: 10\n      },\n      children: _jsxDEV(Text, {\n        style: {\n          fontWeight: \"bold\",\n          fontSize: 12,\n          color: error,\n          marginTop: 5\n        },\n        children: \"You need to create at least one account to proceed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this), _jsxDEV(Button, {\n      disabled: !isValid || !hasAccounts,\n      title: \"Submit\",\n      onPress: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["useTheme","useState","FlatList","View","ExpandingView","Row","ToggleButton","FilterBadge","TextInput","Button","DateTimePicker","useAccountStore","Crypto","Text","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateBudgetForm","onCreate","theme","colors","primary","error","items","optionsEnabled","setOptionsEnabled","accountTitle","setAccountTitle","title","limitDate","setLimitDate","setTitle","limit","setLimit","hasAccounts","length","isValid","onSubmit","uuid","generateRandomUUID","account","find","item","data","linkedAccount","toISOString","balance","parseInt","style","paddingHorizontal","children","justifyContent","alignItems","weight","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","onChange","active","label","onChangeText","keyboardType","fontWeight","marginBottom","date","mode","value","contentContainerStyle","gap","paddingVertical","showsHorizontalScrollIndicator","horizontal","renderItem","index","onPress","activeColor","marginVertical","color","marginTop","disabled"],"sources":["/home/rodo/workspace/passion/apps/muh-money/src/components/CreateBudgetForm/CreateBudgetForm.tsx"],"sourcesContent":["import { useTheme } from '@rneui/themed';\nimport { useState } from 'react';\nimport { FlatList, View } from 'react-native';\nimport { ExpandingView } from '../ExpandingView';\nimport { Row } from '../Row';\nimport { ToggleButton } from '../ToggleButton';\nimport { FilterBadge } from '../FilterBadge';\nimport { TextInput } from '../Input';\nimport { Button } from '../Button';\nimport { DateTimePicker } from '../DateTimePicker';\nimport { Budget } from '../../types/models';\nimport { useAccountStore } from '../../stores';\nimport Crypto from '../../lib/crypto';\nimport { Text } from '../Text';\n\ninterface CreateBudgetFormProps {\n  onCreate: (budget: Budget) => void;\n}\n\nexport default function CreateBudgetForm({ onCreate }: CreateBudgetFormProps) {\n  const { theme: { colors: { primary, error } } } = useTheme();\n  const { items } = useAccountStore();\n  const [optionsEnabled, setOptionsEnabled] = useState(false);\n  const [accountTitle, setAccountTitle] = useState(items[0]?.title ?? \"\");\n  const [limitDate, setLimitDate] = useState<Date>();\n  const [title, setTitle] = useState(\"\");\n  const [limit, setLimit] = useState(\"\");\n\n  const hasAccounts = items.length !== 0;\n\n  const isValid = (title && limit);\n\n  const onSubmit = () => {\n    const uuid = Crypto.generateRandomUUID();\n    const account = items.find((item) => item.title === accountTitle);\n    const data: Budget = {\n      uuid,\n      title, linkedAccount: account.uuid,\n      limitDate: limitDate?.toISOString() ?? \"\",\n      balance: parseInt(limit),\n    }\n\n    onCreate(data);\n  };\n\n  return (\n    <ExpandingView style={{ paddingHorizontal: 10 }}>\n      <Row style={{ justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <Text weight='700' style={{ fontSize: 18 }}>Create Budget</Text>\n        <ToggleButton onChange={(active) => setOptionsEnabled(active)} />\n      </Row>\n      <TextInput label={`Budget name`} onChangeText={setTitle} />\n      <TextInput label={`Budget Limit`} keyboardType='numeric' onChangeText={setLimit} />\n      {\n        optionsEnabled && (\n          <View>\n            <Text style={{ fontWeight: \"bold\", fontSize: 14, marginBottom: -10 }}>Date Limit</Text>\n            <DateTimePicker date={limitDate} mode=\"date\" onChange={(value) => setLimitDate(value)} />\n          </View>\n        )\n      }\n      {\n        (hasAccounts) && (\n          <>\n            <Text style={{ fontWeight: \"bold\", fontSize: 14 }}>Linked Account</Text>\n            <FlatList\n              contentContainerStyle={{\n                gap: 10,\n                paddingVertical: 10\n              }}\n              showsHorizontalScrollIndicator={false}\n              horizontal\n              data={items}\n              renderItem={({ item, index }) => (\n                <FilterBadge\n                  onPress={(value) => {\n                    setAccountTitle(value)\n                  }}\n                  activeColor={primary}\n                  label={item.title}\n                  active={accountTitle === item.title} key={index} />\n              )}\n            />\n          </>\n        )\n      }\n      {\n        (!hasAccounts) && (\n          <View style={{ marginVertical: 10 }}>\n            <Text style={{ fontWeight: \"bold\", fontSize: 12, color: error, marginTop: 5 }}>\n              You need to create at least one account to proceed\n            </Text>\n          </View>\n        )\n      }\n      <Button disabled={!isValid || !hasAccounts} title=\"Submit\" onPress={onSubmit} />\n    </ExpandingView>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}