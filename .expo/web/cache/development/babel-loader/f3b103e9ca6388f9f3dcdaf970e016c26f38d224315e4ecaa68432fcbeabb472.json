{"ast":null,"code":"import DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport { EventEmitter } from './EventEmitter';\nimport NativeModule from './NativeModule';\nimport NativeModulesProxy from './NativeModulesProxy';\nimport { requireNativeViewManager } from './NativeViewManagerAdapter';\nimport Platform from './Platform';\nimport SharedObject from './SharedObject';\nimport { CodedError } from './errors/CodedError';\nimport { UnavailabilityError } from './errors/UnavailabilityError';\nimport './sweet/setUpErrorManager.fx';\nimport './web/index';\nexport { default as uuid } from './uuid';\nexport { DeviceEventEmitter, EventEmitter, NativeModulesProxy, Platform, requireNativeViewManager, SharedObject, NativeModule, CodedError, UnavailabilityError };\nexport * from './requireNativeModule';\nexport * from './createWebModule';\nexport * from './TypedArrays.types';\nexport const SyntheticPlatformEmitter = DeviceEventEmitter;\nexport * from './PermissionsInterface';\nexport * from './PermissionsHook';\nexport * from './Refs';\nexport * from './hooks/useReleasingSharedObject';\nexport * from './reload';","map":{"version":3,"names":["EventEmitter","NativeModule","NativeModulesProxy","requireNativeViewManager","Platform","SharedObject","CodedError","UnavailabilityError","default","uuid","DeviceEventEmitter","SyntheticPlatformEmitter"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/expo-modules-core/src/index.ts"],"sourcesContent":["import { DeviceEventEmitter } from 'react-native';\n\nimport { EventEmitter, Subscription } from './EventEmitter';\nimport NativeModule from './NativeModule';\nimport NativeModulesProxy from './NativeModulesProxy';\nimport { ProxyNativeModule } from './NativeModulesProxy.types';\nimport { requireNativeViewManager } from './NativeViewManagerAdapter';\nimport Platform from './Platform';\nimport SharedObject from './SharedObject';\nimport { CodedError } from './errors/CodedError';\nimport { UnavailabilityError } from './errors/UnavailabilityError';\n\nimport './sweet/setUpErrorManager.fx';\nimport './web/index';\n\nexport type * from './ts-declarations/global';\n\nexport { default as uuid } from './uuid';\n\nexport {\n  DeviceEventEmitter,\n  EventEmitter,\n  NativeModulesProxy,\n  ProxyNativeModule,\n  Platform,\n  Subscription,\n  requireNativeViewManager,\n  // Globals\n  SharedObject,\n  NativeModule,\n  // Errors\n  CodedError,\n  UnavailabilityError,\n};\n\nexport * from './requireNativeModule';\nexport * from './createWebModule';\nexport * from './TypedArrays.types';\n\n/**\n * @deprecated renamed to `DeviceEventEmitter`\n */\nexport const SyntheticPlatformEmitter = DeviceEventEmitter;\n\nexport * from './PermissionsInterface';\nexport * from './PermissionsHook';\n\nexport * from './Refs';\n\nexport * from './hooks/useReleasingSharedObject';\nexport * from './reload';\n"],"mappings":";AAEA,SAASA,YAAY,QAAsB,gBAAgB;AAC3D,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,kBAAkB,MAAM,sBAAsB;AAErD,SAASC,wBAAwB,QAAQ,4BAA4B;AACrE,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,UAAU,QAAQ,qBAAqB;AAChD,SAASC,mBAAmB,QAAQ,8BAA8B;AAElE,OAAO,8BAA8B;AACrC,OAAO,aAAa;AAIpB,SAASC,OAAO,IAAIC,IAAI,QAAQ,QAAQ;AAExC,SACEC,kBAAkB,EAClBV,YAAY,EACZE,kBAAkB,EAElBE,QAAQ,EAERD,wBAAwB,EAExBE,YAAY,EACZJ,YAAY,EAEZK,UAAU,EACVC,mBAAmB;AAGrB,cAAc,uBAAuB;AACrC,cAAc,mBAAmB;AACjC,cAAc,qBAAqB;AAKnC,OAAO,MAAMI,wBAAwB,GAAGD,kBAAkB;AAE1D,cAAc,wBAAwB;AACtC,cAAc,mBAAmB;AAEjC,cAAc,QAAQ;AAEtB,cAAc,kCAAkC;AAChD,cAAc,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}