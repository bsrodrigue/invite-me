{"ast":null,"code":"'use strict';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\nconst RCTEventEmitter = {\n  register(eventEmitter) {\n    if (global.RN$Bridgeless) {\n      global.RN$registerCallableModule('RCTEventEmitter', () => eventEmitter);\n    } else {\n      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);\n    }\n  }\n};\nmodule.exports = RCTEventEmitter;","map":{"version":3,"names":["BatchedBridge","require","RCTEventEmitter","register","eventEmitter","global","RN$Bridgeless","RN$registerCallableModule","registerCallableModule","module","exports"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/EventEmitter/RCTEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\n\nconst RCTEventEmitter = {\n  register(eventEmitter: any) {\n    if (global.RN$Bridgeless) {\n      global.RN$registerCallableModule('RCTEventEmitter', () => eventEmitter);\n    } else {\n      BatchedBridge.registerCallableModule('RCTEventEmitter', eventEmitter);\n    }\n  },\n};\n\nmodule.exports = RCTEventEmitter;\n"],"mappings":"AAUA,YAAY;;AAEZ,MAAMA,aAAa,GAAGC,OAAO,CAAC,gCAAgC,CAAC;AAE/D,MAAMC,eAAe,GAAG;EACtBC,QAAQA,CAACC,YAAiB,EAAE;IAC1B,IAAIC,MAAM,CAACC,aAAa,EAAE;MACxBD,MAAM,CAACE,yBAAyB,CAAC,iBAAiB,EAAE,MAAMH,YAAY,CAAC;IACzE,CAAC,MAAM;MACLJ,aAAa,CAACQ,sBAAsB,CAAC,iBAAiB,EAAEJ,YAAY,CAAC;IACvE;EACF;AACF,CAAC;AAEDK,MAAM,CAACC,OAAO,GAAGR,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}