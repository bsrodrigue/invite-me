{"ast":null,"code":"'use strict';\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/Inspector.js\";\nconst View = require('../Components/View/View');\nconst PressabilityDebug = require('../Pressability/PressabilityDebug');\nconst {\n  findNodeHandle\n} = require('../ReactNative/RendererProxy');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Dimensions = require('../Utilities/Dimensions').default;\nconst Platform = require('../Utilities/Platform');\nconst getInspectorDataForViewAtPoint = require('./getInspectorDataForViewAtPoint');\nconst InspectorOverlay = require('./InspectorOverlay');\nconst InspectorPanel = require('./InspectorPanel');\nconst React = require('react');\nconst {\n  useState\n} = React;\nfunction Inspector({\n  inspectedViewRef,\n  onRequestRerenderApp,\n  reactDevToolsAgent\n}) {\n  const [selectedTab, setSelectedTab] = useState('elements-inspector');\n  const [panelPosition, setPanelPosition] = useState('bottom');\n  const [inspectedElement, setInspectedElement] = useState(null);\n  const [selectionIndex, setSelectionIndex] = useState(null);\n  const [elementsHierarchy, setElementsHierarchy] = useState(null);\n  const setSelection = i => {\n    const hierarchyItem = elementsHierarchy?.[i];\n    if (hierarchyItem == null) {\n      return;\n    }\n    const {\n      measure,\n      props\n    } = hierarchyItem.getInspectorData(findNodeHandle);\n    measure((x, y, width, height, left, top) => {\n      setInspectedElement({\n        frame: {\n          left,\n          top,\n          width,\n          height\n        },\n        style: props.style\n      });\n      setSelectionIndex(i);\n    });\n  };\n  const onTouchPoint = (locationX, locationY) => {\n    const setTouchedViewData = viewData => {\n      const {\n        hierarchy,\n        props,\n        selectedIndex,\n        frame,\n        pointerY,\n        touchedViewTag,\n        closestInstance\n      } = viewData;\n      if (reactDevToolsAgent) {\n        reactDevToolsAgent.selectNode(findNodeHandle(touchedViewTag));\n        if (closestInstance != null) {\n          reactDevToolsAgent.selectNode(closestInstance);\n        }\n      }\n      setPanelPosition(pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom');\n      setSelectionIndex(selectedIndex);\n      setElementsHierarchy(hierarchy);\n      setInspectedElement({\n        frame,\n        style: props.style\n      });\n    };\n    getInspectorDataForViewAtPoint(inspectedViewRef.current, locationX, locationY, viewData => {\n      setTouchedViewData(viewData);\n      return false;\n    });\n  };\n  const setInspecting = enabled => {\n    setSelectedTab(enabled ? 'elements-inspector' : null);\n    setInspectedElement(null);\n  };\n  const setPerfing = enabled => {\n    setSelectedTab(enabled ? 'performance-profiling' : null);\n    setInspectedElement(null);\n  };\n  const setNetworking = enabled => {\n    setSelectedTab(enabled ? 'network-profiling' : null);\n    setInspectedElement(null);\n  };\n  const setTouchTargeting = val => {\n    PressabilityDebug.setEnabled(val);\n    onRequestRerenderApp();\n  };\n  const panelContainerStyle = panelPosition === 'bottom' ? {\n    bottom: 0\n  } : Platform.select({\n    ios: {\n      top: 0\n    },\n    default: {\n      top: 0\n    }\n  });\n  return _reactJsxDevRuntime.jsxDEV(View, {\n    style: styles.container,\n    pointerEvents: \"box-none\",\n    children: [selectedTab === 'elements-inspector' && _reactJsxDevRuntime.jsxDEV(InspectorOverlay, {\n      inspected: inspectedElement,\n      onTouchPoint: onTouchPoint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this), _reactJsxDevRuntime.jsxDEV(View, {\n      style: [styles.panelContainer, panelContainerStyle],\n      children: _reactJsxDevRuntime.jsxDEV(InspectorPanel, {\n        devtoolsIsOpen: !!reactDevToolsAgent,\n        inspecting: selectedTab === 'elements-inspector',\n        perfing: selectedTab === 'performance-profiling',\n        setPerfing: setPerfing,\n        setInspecting: setInspecting,\n        inspected: inspectedElement,\n        hierarchy: elementsHierarchy,\n        selection: selectionIndex,\n        setSelection: setSelection,\n        touchTargeting: PressabilityDebug.isEnabled(),\n        setTouchTargeting: setTouchTargeting,\n        networking: selectedTab === 'network-profiling',\n        setNetworking: setNetworking\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  panelContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0\n  }\n});\nmodule.exports = Inspector;","map":{"version":3,"names":["_reactJsxDevRuntime","require","_jsxFileName","View","PressabilityDebug","findNodeHandle","StyleSheet","Dimensions","default","Platform","getInspectorDataForViewAtPoint","InspectorOverlay","InspectorPanel","React","useState","Inspector","inspectedViewRef","onRequestRerenderApp","reactDevToolsAgent","selectedTab","setSelectedTab","panelPosition","setPanelPosition","inspectedElement","setInspectedElement","selectionIndex","setSelectionIndex","elementsHierarchy","setElementsHierarchy","setSelection","i","hierarchyItem","measure","props","getInspectorData","x","y","width","height","left","top","frame","style","onTouchPoint","locationX","locationY","setTouchedViewData","viewData","hierarchy","selectedIndex","pointerY","touchedViewTag","closestInstance","selectNode","get","current","setInspecting","enabled","setPerfing","setNetworking","setTouchTargeting","val","setEnabled","panelContainerStyle","bottom","select","ios","jsxDEV","styles","container","pointerEvents","children","inspected","fileName","lineNumber","columnNumber","panelContainer","devtoolsIsOpen","inspecting","perfing","selection","touchTargeting","isEnabled","networking","create","position","backgroundColor","right","module","exports"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/Inspector.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {InspectedViewRef} from '../ReactNative/AppContainer-dev';\nimport type {\n  InspectorData,\n  TouchedViewDataAtPoint,\n} from '../Renderer/shims/ReactNativeTypes';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {ReactDevToolsAgent} from '../Types/ReactDevToolsTypes';\n\nconst View = require('../Components/View/View');\nconst PressabilityDebug = require('../Pressability/PressabilityDebug');\nconst {findNodeHandle} = require('../ReactNative/RendererProxy');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Dimensions = require('../Utilities/Dimensions').default;\nconst Platform = require('../Utilities/Platform');\nconst getInspectorDataForViewAtPoint = require('./getInspectorDataForViewAtPoint');\nconst InspectorOverlay = require('./InspectorOverlay');\nconst InspectorPanel = require('./InspectorPanel');\nconst React = require('react');\n\nconst {useState} = React;\n\ntype PanelPosition = 'top' | 'bottom';\ntype SelectedTab =\n  | 'elements-inspector'\n  | 'network-profiling'\n  | 'performance-profiling';\n\nexport type InspectedElementFrame = TouchedViewDataAtPoint['frame'];\nexport type InspectedElement = $ReadOnly<{\n  frame: InspectedElementFrame,\n  style?: ViewStyleProp,\n}>;\nexport type ElementsHierarchy = InspectorData['hierarchy'];\n\ntype Props = {\n  inspectedViewRef: InspectedViewRef,\n  onRequestRerenderApp: () => void,\n  reactDevToolsAgent?: ReactDevToolsAgent,\n};\n\nfunction Inspector({\n  inspectedViewRef,\n  onRequestRerenderApp,\n  reactDevToolsAgent,\n}: Props): React.Node {\n  const [selectedTab, setSelectedTab] =\n    useState<?SelectedTab>('elements-inspector');\n\n  const [panelPosition, setPanelPosition] = useState<PanelPosition>('bottom');\n  const [inspectedElement, setInspectedElement] =\n    useState<?InspectedElement>(null);\n  const [selectionIndex, setSelectionIndex] = useState<?number>(null);\n  const [elementsHierarchy, setElementsHierarchy] =\n    useState<?ElementsHierarchy>(null);\n\n  const setSelection = (i: number) => {\n    const hierarchyItem = elementsHierarchy?.[i];\n    if (hierarchyItem == null) {\n      return;\n    }\n\n    // We pass in findNodeHandle as the method is injected\n    const {measure, props} = hierarchyItem.getInspectorData(findNodeHandle);\n\n    measure((x, y, width, height, left, top) => {\n      // $FlowFixMe[incompatible-call] `props` from InspectorData are defined as <string, string> dictionary, which is incompatible with ViewStyleProp\n      setInspectedElement({\n        frame: {left, top, width, height},\n        style: props.style,\n      });\n\n      setSelectionIndex(i);\n    });\n  };\n\n  const onTouchPoint = (locationX: number, locationY: number) => {\n    const setTouchedViewData = (viewData: TouchedViewDataAtPoint) => {\n      const {\n        hierarchy,\n        props,\n        selectedIndex,\n        frame,\n        pointerY,\n        touchedViewTag,\n        closestInstance,\n      } = viewData;\n\n      // Sync the touched view with React DevTools.\n      // Note: This is Paper only. To support Fabric,\n      // DevTools needs to be updated to not rely on view tags.\n      if (reactDevToolsAgent) {\n        reactDevToolsAgent.selectNode(findNodeHandle(touchedViewTag));\n        if (closestInstance != null) {\n          reactDevToolsAgent.selectNode(closestInstance);\n        }\n      }\n\n      setPanelPosition(\n        pointerY > Dimensions.get('window').height / 2 ? 'top' : 'bottom',\n      );\n      setSelectionIndex(selectedIndex);\n      setElementsHierarchy(hierarchy);\n      // $FlowFixMe[incompatible-call] `props` from InspectorData are defined as <string, string> dictionary, which is incompatible with ViewStyleProp\n      setInspectedElement({\n        frame,\n        style: props.style,\n      });\n    };\n\n    getInspectorDataForViewAtPoint(\n      inspectedViewRef.current,\n      locationX,\n      locationY,\n      viewData => {\n        setTouchedViewData(viewData);\n        return false;\n      },\n    );\n  };\n\n  const setInspecting = (enabled: boolean) => {\n    setSelectedTab(enabled ? 'elements-inspector' : null);\n    setInspectedElement(null);\n  };\n\n  const setPerfing = (enabled: boolean) => {\n    setSelectedTab(enabled ? 'performance-profiling' : null);\n    setInspectedElement(null);\n  };\n\n  const setNetworking = (enabled: boolean) => {\n    setSelectedTab(enabled ? 'network-profiling' : null);\n    setInspectedElement(null);\n  };\n\n  const setTouchTargeting = (val: boolean) => {\n    PressabilityDebug.setEnabled(val);\n    onRequestRerenderApp();\n  };\n\n  const panelContainerStyle =\n    panelPosition === 'bottom'\n      ? {bottom: 0}\n      : Platform.select({ios: {top: 0}, default: {top: 0}});\n\n  return (\n    <View style={styles.container} pointerEvents=\"box-none\">\n      {selectedTab === 'elements-inspector' && (\n        <InspectorOverlay\n          inspected={inspectedElement}\n          onTouchPoint={onTouchPoint}\n        />\n      )}\n\n      <View style={[styles.panelContainer, panelContainerStyle]}>\n        <InspectorPanel\n          devtoolsIsOpen={!!reactDevToolsAgent}\n          inspecting={selectedTab === 'elements-inspector'}\n          perfing={selectedTab === 'performance-profiling'}\n          setPerfing={setPerfing}\n          setInspecting={setInspecting}\n          inspected={inspectedElement}\n          hierarchy={elementsHierarchy}\n          selection={selectionIndex}\n          setSelection={setSelection}\n          touchTargeting={PressabilityDebug.isEnabled()}\n          setTouchTargeting={setTouchTargeting}\n          networking={selectedTab === 'network-profiling'}\n          setNetworking={setNetworking}\n        />\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  panelContainer: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n  },\n});\n\nmodule.exports = Inspector;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}