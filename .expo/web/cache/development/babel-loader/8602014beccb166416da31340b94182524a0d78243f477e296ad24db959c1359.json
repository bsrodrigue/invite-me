{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nexport const ScreenStackHeaderBackButtonImage = props => React.createElement(View, null, React.createElement(Image, _extends({\n  resizeMode: \"center\",\n  fadeDuration: 0\n}, props)));\nexport const ScreenStackHeaderRightView = props => React.createElement(View, props);\nexport const ScreenStackHeaderLeftView = props => React.createElement(View, props);\nexport const ScreenStackHeaderCenterView = props => React.createElement(View, props);\nexport const ScreenStackHeaderSearchBarView = props => React.createElement(View, props);\nexport const ScreenStackHeaderConfig = props => React.createElement(View, props);\nexport const ScreenStackHeaderSubview = View;","map":{"version":3,"names":["React","ScreenStackHeaderBackButtonImage","props","createElement","View","Image","_extends","resizeMode","fadeDuration","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenStackHeaderConfig","ScreenStackHeaderSubview"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-screens/src/components/ScreenStackHeaderConfig.web.tsx"],"sourcesContent":["import { Image, ImageProps, View, ViewProps } from 'react-native';\nimport React from 'react';\nimport {\n  HeaderSubviewTypes,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n} from 'react-native-screens';\n\nexport const ScreenStackHeaderBackButtonImage = (\n  props: ImageProps\n): JSX.Element => (\n  <View>\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </View>\n);\n\nexport const ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<Omit<SearchBarProps, 'ref'>>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderConfig = (\n  props: React.PropsWithChildren<ScreenStackHeaderConfigProps>\n): JSX.Element => <View {...props} />;\n\nexport const ScreenStackHeaderSubview: React.ComponentType<\n  React.PropsWithChildren<ViewProps & { type?: HeaderSubviewTypes }>\n> = View;\n"],"mappings":";;;;;;;;;;;;;;;;AACA,OAAOA,KAAK,MAAM,OAAO;AAOzB,OAAO,MAAMC,gCAAgC,GAC3CC,KAAiB,IAEjBF,KAAA,CAAAG,aAAA,CAACC,IAAI,QACHJ,KAAA,CAAAG,aAAA,CAACE,KAAK,EAAAC,QAAA;EAACC,UAAU,EAAC,QAAQ;EAACC,YAAY,EAAE;AAAE,GAAKN,KAAK,CAAG,CACpD,CACP;AAED,OAAO,MAAMO,0BAA0B,GACrCP,KAAyC,IACzBF,KAAA,CAAAG,aAAA,CAACC,IAAI,EAAKF,KAAQ,CAAC;AAErC,OAAO,MAAMQ,yBAAyB,GACpCR,KAAyC,IACzBF,KAAA,CAAAG,aAAA,CAACC,IAAI,EAAKF,KAAQ,CAAC;AAErC,OAAO,MAAMS,2BAA2B,GACtCT,KAAyC,IACzBF,KAAA,CAAAG,aAAA,CAACC,IAAI,EAAKF,KAAQ,CAAC;AAErC,OAAO,MAAMU,8BAA8B,GACzCV,KAA2D,IAC3CF,KAAA,CAAAG,aAAA,CAACC,IAAI,EAAKF,KAAQ,CAAC;AAErC,OAAO,MAAMW,uBAAuB,GAClCX,KAA4D,IAC5CF,KAAA,CAAAG,aAAA,CAACC,IAAI,EAAKF,KAAQ,CAAC;AAErC,OAAO,MAAMY,wBAEZ,GAAGV,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}