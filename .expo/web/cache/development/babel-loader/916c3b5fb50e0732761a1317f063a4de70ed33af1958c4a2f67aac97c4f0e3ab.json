{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/src/components/DateTimePicker/DateTimePicker.tsx\";\nimport { DateTimePickerAndroid } from \"@react-native-community/datetimepicker\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from \"../Input\";\nimport { mom } from \"../../lib/moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DateTimePicker({\n  label,\n  date,\n  mode,\n  errorMessage,\n  onChange,\n  containerStyle\n}) {\n  const onOpenDatePicker = () => {\n    DateTimePickerAndroid.open({\n      mode,\n      value: date ?? new Date(),\n      onChange: (_e, date) => {\n        onChange(date);\n      }\n    });\n  };\n  const format = mode === \"date\" ? \"DD/MM/YY\" : \"HH:mm\";\n  return _jsxDEV(View, {\n    style: [{\n      marginVertical: 10\n    }, containerStyle],\n    children: [_jsxDEV(Text, {\n      style: {\n        marginBottom: -2,\n        fontWeight: \"bold\"\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      onPress: onOpenDatePicker,\n      children: _jsxDEV(TextInput, {\n        disabled: true,\n        placeholder: `Press to select a ${mode}`,\n        style: {\n          fontSize: 12\n        },\n        errorMessage: errorMessage,\n        value: date ? mom(date).format(format) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["DateTimePickerAndroid","View","Text","TouchableOpacity","TextInput","mom","jsxDEV","_jsxDEV","DateTimePicker","label","date","mode","errorMessage","onChange","containerStyle","onOpenDatePicker","open","value","Date","_e","format","style","marginVertical","children","marginBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onPress","disabled","placeholder","fontSize"],"sources":["/home/rodo/workspace/passion/apps/muh-money/src/components/DateTimePicker/DateTimePicker.tsx"],"sourcesContent":["import { DateTimePickerAndroid } from \"@react-native-community/datetimepicker\";\nimport { View, Text, TouchableOpacity, ViewStyle } from \"react-native\";\nimport { TextInput } from \"../Input\";\nimport { mom } from \"../../lib/moment\";\n\ntype DateTimePickerProps = {\n  date: Date;\n  onChange: (value: Date) => void;\n  mode: \"date\" | \"time\";\n  errorMessage?: string;\n  containerStyle?: ViewStyle;\n  label?: string;\n}\n\nexport default function DateTimePicker({ label, date, mode, errorMessage, onChange, containerStyle }: DateTimePickerProps) {\n\n  const onOpenDatePicker = () => {\n    DateTimePickerAndroid.open({\n      mode,\n      value: date ?? new Date(),\n      onChange: (_e, date) => {\n        onChange(date);\n      },\n    });\n  }\n\n  const format = (mode === \"date\") ? \"DD/MM/YY\" : \"HH:mm\";\n\n  return (\n    <View style={[{ marginVertical: 10 }, containerStyle]}>\n      <Text style={{ marginBottom: -2, fontWeight: \"bold\" }}>{label}</Text>\n      <TouchableOpacity\n        onPress={onOpenDatePicker}>\n        <TextInput\n          disabled\n          placeholder={`Press to select a ${mode}`}\n          style={{\n            fontSize: 12\n          }}\n          errorMessage={errorMessage}\n          value={date ? mom(date).format(format) : null}\n        />\n      </TouchableOpacity>\n    </View>\n  )\n}\n"],"mappings":";AAAA,SAASA,qBAAqB,QAAQ,wCAAwC;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAE/E,SAASC,SAAS,QAAQ,UAAU;AACpC,SAASC,GAAG,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWvC,eAAe,SAASC,cAAcA,CAAC;EAAEC,KAAK;EAAEC,IAAI;EAAEC,IAAI;EAAEC,YAAY;EAAEC,QAAQ;EAAEC;AAAoC,CAAC,EAAE;EAEzH,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7Bf,qBAAqB,CAACgB,IAAI,CAAC;MACzBL,IAAI;MACJM,KAAK,EAAEP,IAAI,IAAI,IAAIQ,IAAI,CAAC,CAAC;MACzBL,QAAQ,EAAEA,CAACM,EAAE,EAAET,IAAI,KAAK;QACtBG,QAAQ,CAACH,IAAI,CAAC;MAChB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMU,MAAM,GAAIT,IAAI,KAAK,MAAM,GAAI,UAAU,GAAG,OAAO;EAEvD,OACEJ,OAAA,CAACN,IAAI;IAACoB,KAAK,EAAE,CAAC;MAAEC,cAAc,EAAE;IAAG,CAAC,EAAER,cAAc,CAAE;IAAAS,QAAA,GACpDhB,OAAA,CAACL,IAAI;MAACmB,KAAK,EAAE;QAAEG,YAAY,EAAE,CAAC,CAAC;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAEd;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EACrEtB,OAAA,CAACJ,gBAAgB;MACf2B,OAAO,EAAEf,gBAAiB;MAAAQ,QAAA,EAC1BhB,OAAA,CAACH,SAAS;QACR2B,QAAQ;QACRC,WAAW,EAAE,qBAAqBrB,IAAI,EAAG;QACzCU,KAAK,EAAE;UACLY,QAAQ,EAAE;QACZ,CAAE;QACFrB,YAAY,EAAEA,YAAa;QAC3BK,KAAK,EAAEP,IAAI,GAAGL,GAAG,CAACK,IAAI,CAAC,CAACU,MAAM,CAACA,MAAM,CAAC,GAAG;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACc,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}