{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { PermissionStatus, Platform } from 'expo-modules-core';\nimport { MediaTypeOptions } from './ImagePicker.types';\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*'\n};\nexport default {\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false\n  }) {\n    if (!Platform.isDOMAvailable) {\n      return {\n        canceled: true,\n        assets: null\n      };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64\n    });\n  },\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false\n  }) {\n    if (!Platform.isDOMAvailable) {\n      return {\n        canceled: true,\n        assets: null\n      };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64\n    });\n  },\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async getMediaLibraryPermissionsAsync(_writeOnly) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly) {\n    return permissionGrantedResponse();\n  }\n};\nfunction permissionGrantedResponse() {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true\n  };\n}\nfunction openFileBrowserAsync({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64\n}) {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', String(Math.random()));\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n  return new Promise(resolve => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        const files = allowsMultipleSelection ? input.files : [input.files[0]];\n        const assets = await Promise.all(Array.from(files).map(file => readFile(file, {\n          base64\n        })));\n        resolve({\n          canceled: false,\n          assets\n        });\n      } else {\n        resolve({\n          canceled: true,\n          assets: null\n        });\n      }\n      document.body.removeChild(input);\n    });\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\nfunction readFile(targetFile, options) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({\n      target\n    }) => {\n      const uri = target.result;\n      const returnRaw = () => resolve({\n        uri,\n        width: 0,\n        height: 0\n      });\n      if (typeof uri === 'string') {\n        const image = new Image();\n        image.src = uri;\n        image.onload = () => {\n          resolve(_objectSpread({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n            mimeType: targetFile.type,\n            fileName: targetFile.name\n          }, options.base64 && {\n            base64: uri.substr(uri.indexOf(',') + 1)\n          }));\n        };\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n    reader.readAsDataURL(targetFile);\n  });\n}","map":{"version":3,"names":["PermissionStatus","Platform","MediaTypeOptions","MediaTypeInput","All","Images","Videos","launchImageLibraryAsync","mediaTypes","allowsMultipleSelection","base64","isDOMAvailable","canceled","assets","openFileBrowserAsync","launchCameraAsync","capture","getCameraPermissionsAsync","permissionGrantedResponse","requestCameraPermissionsAsync","getMediaLibraryPermissionsAsync","_writeOnly","requestMediaLibraryPermissionsAsync","status","GRANTED","expires","granted","canAskAgain","mediaTypeFormat","input","document","createElement","style","display","setAttribute","String","Math","random","body","appendChild","Promise","resolve","addEventListener","files","all","Array","from","map","file","readFile","removeChild","event","MouseEvent","dispatchEvent","targetFile","options","reject","reader","FileReader","onerror","Error","onload","target","uri","result","returnRaw","width","height","image","Image","src","_objectSpread","naturalWidth","naturalHeight","mimeType","type","fileName","name","substr","indexOf","readAsDataURL"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/expo-image-picker/src/ExponentImagePicker.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus, Platform } from 'expo-modules-core';\n\nimport {\n  ImagePickerAsset,\n  ImagePickerResult,\n  MediaTypeOptions,\n  OpenFileBrowserOptions,\n} from './ImagePicker.types';\n\nconst MediaTypeInput = {\n  [MediaTypeOptions.All]: 'video/mp4,video/quicktime,video/x-m4v,video/*,image/*',\n  [MediaTypeOptions.Images]: 'image/*',\n  [MediaTypeOptions.Videos]: 'video/mp4,video/quicktime,video/x-m4v,video/*',\n};\n\nexport default {\n  async launchImageLibraryAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      base64,\n    });\n  },\n\n  async launchCameraAsync({\n    mediaTypes = MediaTypeOptions.Images,\n    allowsMultipleSelection = false,\n    base64 = false,\n  }): Promise<ImagePickerResult> {\n    // SSR guard\n    if (!Platform.isDOMAvailable) {\n      return { canceled: true, assets: null };\n    }\n    return await openFileBrowserAsync({\n      mediaTypes,\n      allowsMultipleSelection,\n      capture: true,\n      base64,\n    });\n  },\n\n  /*\n   * Delegate to expo-permissions to request camera permissions\n   */\n  async getCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n  async requestCameraPermissionsAsync() {\n    return permissionGrantedResponse();\n  },\n\n  /*\n   * Camera roll permissions don't need to be requested on web, so we always\n   * respond with granted.\n   */\n  async getMediaLibraryPermissionsAsync(_writeOnly: boolean) {\n    return permissionGrantedResponse();\n  },\n  async requestMediaLibraryPermissionsAsync(_writeOnly: boolean): Promise<PermissionResponse> {\n    return permissionGrantedResponse();\n  },\n};\n\nfunction permissionGrantedResponse(): PermissionResponse {\n  return {\n    status: PermissionStatus.GRANTED,\n    expires: 'never',\n    granted: true,\n    canAskAgain: true,\n  };\n}\n\nfunction openFileBrowserAsync({\n  mediaTypes,\n  capture = false,\n  allowsMultipleSelection = false,\n  base64,\n}: OpenFileBrowserOptions): Promise<ImagePickerResult> {\n  const mediaTypeFormat = MediaTypeInput[mediaTypes];\n\n  const input = document.createElement('input');\n  input.style.display = 'none';\n  input.setAttribute('type', 'file');\n  input.setAttribute('accept', mediaTypeFormat);\n  input.setAttribute('id', String(Math.random()));\n  if (allowsMultipleSelection) {\n    input.setAttribute('multiple', 'multiple');\n  }\n  if (capture) {\n    input.setAttribute('capture', 'camera');\n  }\n  document.body.appendChild(input);\n\n  return new Promise((resolve) => {\n    input.addEventListener('change', async () => {\n      if (input.files) {\n        const files = allowsMultipleSelection ? input.files : [input.files[0]];\n        const assets: ImagePickerAsset[] = await Promise.all(\n          Array.from(files).map((file) => readFile(file, { base64 }))\n        );\n\n        resolve({ canceled: false, assets });\n      } else {\n        resolve({ canceled: true, assets: null });\n      }\n      document.body.removeChild(input);\n    });\n\n    const event = new MouseEvent('click');\n    input.dispatchEvent(event);\n  });\n}\n\nfunction readFile(targetFile: File, options: { base64: boolean }): Promise<ImagePickerAsset> {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onerror = () => {\n      reject(new Error(`Failed to read the selected media because the operation failed.`));\n    };\n    reader.onload = ({ target }) => {\n      const uri = (target as any).result;\n      const returnRaw = () => resolve({ uri, width: 0, height: 0 });\n\n      if (typeof uri === 'string') {\n        const image = new Image();\n        image.src = uri;\n\n        image.onload = () => {\n          resolve({\n            uri,\n            width: image.naturalWidth ?? image.width,\n            height: image.naturalHeight ?? image.height,\n            mimeType: targetFile.type,\n            fileName: targetFile.name,\n            // The blob's result cannot be directly decoded as Base64 without\n            // first removing the Data-URL declaration preceding the\n            // Base64-encoded data. To retrieve only the Base64 encoded string,\n            // first remove data:*/*;base64, from the result.\n            // https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\n            ...(options.base64 && { base64: uri.substr(uri.indexOf(',') + 1) }),\n          });\n        };\n        image.onerror = () => returnRaw();\n      } else {\n        returnRaw();\n      }\n    };\n\n    reader.readAsDataURL(targetFile);\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}