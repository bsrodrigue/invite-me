{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/ReactNative/AppContainer-dev.js\";\nimport ReactNativeStyleAttributes from '../Components/View/ReactNativeStyleAttributes';\nimport View from '../Components/View/View';\nimport DebuggingOverlay from '../Debugging/DebuggingOverlay';\nimport useSubscribeToDebuggingOverlayRegistry from '../Debugging/useSubscribeToDebuggingOverlayRegistry';\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport LogBoxNotificationContainer from '../LogBox/LogBoxNotificationContainer';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport { RootTagContext, createRootTag } from './RootTag';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  useEffect,\n  useState,\n  useCallback\n} = React;\nconst reactDevToolsHook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\nif (reactDevToolsHook) {\n  reactDevToolsHook.resolveRNStyle = require('../StyleSheet/flattenStyle');\n  reactDevToolsHook.nativeStyleEditorValidAttributes = Object.keys(ReactNativeStyleAttributes);\n}\nconst InspectorDeferred = ({\n  inspectedViewRef,\n  onInspectedViewRerenderRequest,\n  reactDevToolsAgent\n}) => {\n  const Inspector = require('../Inspector/Inspector');\n  return _jsxDEV(Inspector, {\n    inspectedViewRef: inspectedViewRef,\n    onRequestRerenderApp: onInspectedViewRerenderRequest,\n    reactDevToolsAgent: reactDevToolsAgent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\nconst ReactDevToolsOverlayDeferred = ({\n  inspectedViewRef,\n  reactDevToolsAgent\n}) => {\n  const ReactDevToolsOverlay = require('../Inspector/ReactDevToolsOverlay').default;\n  return _jsxDEV(ReactDevToolsOverlay, {\n    inspectedViewRef: inspectedViewRef,\n    reactDevToolsAgent: reactDevToolsAgent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\nconst AppContainer = ({\n  children,\n  fabric,\n  initialProps,\n  internal_excludeInspector = false,\n  internal_excludeLogBox = false,\n  rootTag,\n  showArchitectureIndicator,\n  WrapperComponent\n}) => {\n  const appContainerRootViewRef = React.useRef(null);\n  const innerViewRef = React.useRef(null);\n  const debuggingOverlayRef = React.useRef(null);\n  useSubscribeToDebuggingOverlayRegistry(appContainerRootViewRef, debuggingOverlayRef);\n  const [key, setKey] = useState(0);\n  const [shouldRenderInspector, setShouldRenderInspector] = useState(false);\n  const [reactDevToolsAgent, setReactDevToolsAgent] = useState(reactDevToolsHook?.reactDevtoolsAgent);\n  useEffect(() => {\n    let inspectorSubscription = null;\n    if (!internal_excludeInspector) {\n      inspectorSubscription = RCTDeviceEventEmitter.addListener('toggleElementInspector', () => setShouldRenderInspector(value => !value));\n    }\n    let reactDevToolsAgentListener = null;\n    if (reactDevToolsHook != null && reactDevToolsAgent == null) {\n      reactDevToolsAgentListener = setReactDevToolsAgent;\n      reactDevToolsHook.on?.('react-devtools', reactDevToolsAgentListener);\n    }\n    return () => {\n      inspectorSubscription?.remove();\n      if (reactDevToolsHook?.off != null && reactDevToolsAgentListener != null) {\n        reactDevToolsHook.off('react-devtools', reactDevToolsAgentListener);\n      }\n    };\n  }, []);\n  let innerView = _jsxDEV(View, {\n    collapsable: reactDevToolsAgent == null && !shouldRenderInspector,\n    pointerEvents: \"box-none\",\n    style: styles.container,\n    ref: innerViewRef,\n    children: children\n  }, key, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n  if (WrapperComponent != null) {\n    innerView = _jsxDEV(WrapperComponent, {\n      initialProps: initialProps,\n      fabric: fabric === true,\n      showArchitectureIndicator: showArchitectureIndicator === true,\n      children: innerView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this);\n  }\n  const onInspectedViewRerenderRequest = useCallback(() => setKey(k => k + 1), []);\n  return _jsxDEV(RootTagContext.Provider, {\n    value: createRootTag(rootTag),\n    children: _jsxDEV(View, {\n      ref: appContainerRootViewRef,\n      style: styles.container,\n      pointerEvents: \"box-none\",\n      children: [innerView, _jsxDEV(DebuggingOverlay, {\n        ref: debuggingOverlayRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), reactDevToolsAgent != null && _jsxDEV(ReactDevToolsOverlayDeferred, {\n        inspectedViewRef: innerViewRef,\n        reactDevToolsAgent: reactDevToolsAgent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), shouldRenderInspector && _jsxDEV(InspectorDeferred, {\n        inspectedViewRef: innerViewRef,\n        onInspectedViewRerenderRequest: onInspectedViewRerenderRequest,\n        reactDevToolsAgent: reactDevToolsAgent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), !internal_excludeLogBox && _jsxDEV(LogBoxNotificationContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default AppContainer;","map":{"version":3,"names":["ReactNativeStyleAttributes","View","DebuggingOverlay","useSubscribeToDebuggingOverlayRegistry","RCTDeviceEventEmitter","LogBoxNotificationContainer","StyleSheet","RootTagContext","createRootTag","React","jsxDEV","_jsxDEV","useEffect","useState","useCallback","reactDevToolsHook","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","resolveRNStyle","require","nativeStyleEditorValidAttributes","Object","keys","InspectorDeferred","inspectedViewRef","onInspectedViewRerenderRequest","reactDevToolsAgent","Inspector","onRequestRerenderApp","fileName","_jsxFileName","lineNumber","columnNumber","ReactDevToolsOverlayDeferred","ReactDevToolsOverlay","default","AppContainer","children","fabric","initialProps","internal_excludeInspector","internal_excludeLogBox","rootTag","showArchitectureIndicator","WrapperComponent","appContainerRootViewRef","useRef","innerViewRef","debuggingOverlayRef","key","setKey","shouldRenderInspector","setShouldRenderInspector","setReactDevToolsAgent","reactDevtoolsAgent","inspectorSubscription","addListener","value","reactDevToolsAgentListener","on","remove","off","innerView","collapsable","pointerEvents","style","styles","container","ref","k","Provider","create","flex"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/ReactNative/AppContainer-dev.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @oncall react_native\n */\n\nimport type {\n  ReactDevToolsAgent,\n  ReactDevToolsGlobalHook,\n} from '../Types/ReactDevToolsTypes';\nimport type {Props} from './AppContainer';\n\nimport ReactNativeStyleAttributes from '../Components/View/ReactNativeStyleAttributes';\nimport View from '../Components/View/View';\nimport DebuggingOverlay from '../Debugging/DebuggingOverlay';\nimport useSubscribeToDebuggingOverlayRegistry from '../Debugging/useSubscribeToDebuggingOverlayRegistry';\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport LogBoxNotificationContainer from '../LogBox/LogBoxNotificationContainer';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport {RootTagContext, createRootTag} from './RootTag';\nimport * as React from 'react';\n\nconst {useEffect, useState, useCallback} = React;\n\nconst reactDevToolsHook: ReactDevToolsGlobalHook =\n  window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\n\n// Required for React DevTools to view / edit React Native styles in Flipper.\n// Flipper doesn't inject these values when initializing DevTools.\nif (reactDevToolsHook) {\n  reactDevToolsHook.resolveRNStyle = require('../StyleSheet/flattenStyle');\n  reactDevToolsHook.nativeStyleEditorValidAttributes = Object.keys(\n    ReactNativeStyleAttributes,\n  );\n}\n\ntype InspectorDeferredProps = {\n  inspectedViewRef: InspectedViewRef,\n  onInspectedViewRerenderRequest: () => void,\n  reactDevToolsAgent?: ReactDevToolsAgent,\n};\n\nconst InspectorDeferred = ({\n  inspectedViewRef,\n  onInspectedViewRerenderRequest,\n  reactDevToolsAgent,\n}: InspectorDeferredProps) => {\n  // D39382967 adds a require cycle: InitializeCore -> AppContainer -> Inspector -> InspectorPanel -> ScrollView -> InitializeCore\n  // We can't remove it yet, fallback to dynamic require for now. This is the only reason why this logic is in a separate function.\n  const Inspector = require('../Inspector/Inspector');\n\n  return (\n    <Inspector\n      inspectedViewRef={inspectedViewRef}\n      onRequestRerenderApp={onInspectedViewRerenderRequest}\n      reactDevToolsAgent={reactDevToolsAgent}\n    />\n  );\n};\n\ntype ReactDevToolsOverlayDeferredProps = {\n  inspectedViewRef: InspectedViewRef,\n  reactDevToolsAgent: ReactDevToolsAgent,\n};\n\nconst ReactDevToolsOverlayDeferred = ({\n  inspectedViewRef,\n  reactDevToolsAgent,\n}: ReactDevToolsOverlayDeferredProps) => {\n  const ReactDevToolsOverlay =\n    require('../Inspector/ReactDevToolsOverlay').default;\n\n  return (\n    <ReactDevToolsOverlay\n      inspectedViewRef={inspectedViewRef}\n      reactDevToolsAgent={reactDevToolsAgent}\n    />\n  );\n};\n\nconst AppContainer = ({\n  children,\n  fabric,\n  initialProps,\n  internal_excludeInspector = false,\n  internal_excludeLogBox = false,\n  rootTag,\n  showArchitectureIndicator,\n  WrapperComponent,\n}: Props): React.Node => {\n  const appContainerRootViewRef: AppContainerRootViewRef = React.useRef(null);\n  const innerViewRef: InspectedViewRef = React.useRef(null);\n  const debuggingOverlayRef: DebuggingOverlayRef = React.useRef(null);\n\n  useSubscribeToDebuggingOverlayRegistry(\n    appContainerRootViewRef,\n    debuggingOverlayRef,\n  );\n\n  const [key, setKey] = useState(0);\n  const [shouldRenderInspector, setShouldRenderInspector] = useState(false);\n  const [reactDevToolsAgent, setReactDevToolsAgent] =\n    useState<ReactDevToolsAgent | void>(reactDevToolsHook?.reactDevtoolsAgent);\n\n  useEffect(() => {\n    let inspectorSubscription = null;\n    if (!internal_excludeInspector) {\n      inspectorSubscription = RCTDeviceEventEmitter.addListener(\n        'toggleElementInspector',\n        () => setShouldRenderInspector(value => !value),\n      );\n    }\n\n    let reactDevToolsAgentListener = null;\n    // If this is first render, subscribe to the event from React DevTools hook\n    if (reactDevToolsHook != null && reactDevToolsAgent == null) {\n      reactDevToolsAgentListener = setReactDevToolsAgent;\n      reactDevToolsHook.on?.('react-devtools', reactDevToolsAgentListener);\n    }\n\n    return () => {\n      inspectorSubscription?.remove();\n\n      if (\n        reactDevToolsHook?.off != null &&\n        reactDevToolsAgentListener != null\n      ) {\n        reactDevToolsHook.off('react-devtools', reactDevToolsAgentListener);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  let innerView: React.Node = (\n    <View\n      collapsable={reactDevToolsAgent == null && !shouldRenderInspector}\n      pointerEvents=\"box-none\"\n      key={key}\n      style={styles.container}\n      ref={innerViewRef}>\n      {children}\n    </View>\n  );\n\n  if (WrapperComponent != null) {\n    innerView = (\n      <WrapperComponent\n        initialProps={initialProps}\n        fabric={fabric === true}\n        showArchitectureIndicator={showArchitectureIndicator === true}>\n        {innerView}\n      </WrapperComponent>\n    );\n  }\n\n  const onInspectedViewRerenderRequest = useCallback(\n    () => setKey(k => k + 1),\n    [],\n  );\n\n  return (\n    <RootTagContext.Provider value={createRootTag(rootTag)}>\n      <View\n        ref={appContainerRootViewRef}\n        style={styles.container}\n        pointerEvents=\"box-none\">\n        {innerView}\n\n        <DebuggingOverlay ref={debuggingOverlayRef} />\n\n        {reactDevToolsAgent != null && (\n          <ReactDevToolsOverlayDeferred\n            inspectedViewRef={innerViewRef}\n            reactDevToolsAgent={reactDevToolsAgent}\n          />\n        )}\n\n        {shouldRenderInspector && (\n          <InspectorDeferred\n            inspectedViewRef={innerViewRef}\n            onInspectedViewRerenderRequest={onInspectedViewRerenderRequest}\n            reactDevToolsAgent={reactDevToolsAgent}\n          />\n        )}\n\n        {!internal_excludeLogBox && <LogBoxNotificationContainer />}\n      </View>\n    </RootTagContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {flex: 1},\n});\n\nexport type AppContainerRootViewRef = React.RefObject<React.ElementRef<\n  typeof View,\n> | null>;\nexport type InspectedViewRef = React.RefObject<React.ElementRef<\n  typeof View,\n> | null>;\nexport type DebuggingOverlayRef = React.RefObject<React.ElementRef<\n  typeof DebuggingOverlay,\n> | null>;\n\nexport default AppContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}