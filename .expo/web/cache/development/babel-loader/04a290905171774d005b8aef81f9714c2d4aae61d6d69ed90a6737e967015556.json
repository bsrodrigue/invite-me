{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nconst _excluded = [\"style\", \"iconStyle\", \"children\"];\nvar _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-vector-icons/lib/icon-button.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { pick, omit } from './object-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8\n  },\n  touchable: {\n    overflow: 'hidden'\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent'\n  }\n});\nconst IOS7_BLUE = '#007AFF';\nconst TEXT_PROP_NAMES = ['ellipsizeMode', 'numberOfLines', 'textBreakStrategy', 'selectable', 'suppressHighlighting', 'allowFontScaling', 'adjustsFontSizeToFit', 'minimumFontScale'];\nconst TOUCHABLE_PROP_NAMES = ['accessible', 'accessibilityLabel', 'accessibilityHint', 'accessibilityComponentType', 'accessibilityRole', 'accessibilityStates', 'accessibilityTraits', 'onFocus', 'onBlur', 'disabled', 'onPress', 'onPressIn', 'onPressOut', 'onLayout', 'onLongPress', 'nativeID', 'testID', 'delayPressIn', 'delayPressOut', 'delayLongPress', 'activeOpacity', 'underlayColor', 'selectionColor', 'onShowUnderlay', 'onHideUnderlay', 'hasTVPreferredFocus', 'tvParallaxProperties'];\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.any,\n      size: PropTypes.number,\n      iconStyle: PropTypes.any,\n      style: PropTypes.any,\n      children: PropTypes.node\n    };\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20\n    };\n    render() {\n      const _this$props = this.props,\n        {\n          style,\n          iconStyle,\n          children\n        } = _this$props,\n        restProps = _objectWithoutProperties(_this$props, _excluded);\n      const iconProps = pick(restProps, TEXT_PROP_NAMES, 'style', 'name', 'size', 'color');\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n      return _jsxDEV(TouchableHighlight, _objectSpread(_objectSpread({\n        style: [styles.touchable, blockStyle]\n      }, touchableProps), {}, {\n        children: _jsxDEV(View, _objectSpread(_objectSpread({\n          style: [styles.container, blockStyle, style]\n        }, props), {}, {\n          children: [_jsxDEV(Icon, _objectSpread({}, iconProps), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), typeof children === 'string' ? _jsxDEV(Text, {\n            style: [styles.text, colorStyle],\n            selectable: false,\n            children: children\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this) : children]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this);\n    }\n  };\n}","map":{"version":3,"names":["React","PureComponent","PropTypes","StyleSheet","Text","TouchableHighlight","View","pick","omit","jsxDEV","_jsxDEV","styles","create","container","flexDirection","justifyContent","alignItems","padding","touchable","overflow","icon","marginRight","text","fontWeight","backgroundColor","IOS7_BLUE","TEXT_PROP_NAMES","TOUCHABLE_PROP_NAMES","createIconButtonComponent","Icon","IconButton","propTypes","oneOfType","string","number","borderRadius","color","any","size","iconStyle","style","children","node","defaultProps","render","_this$props","props","restProps","_objectWithoutProperties","_excluded","iconProps","touchableProps","Object","keys","colorStyle","blockStyle","_objectSpread","fileName","_jsxFileName","lineNumber","columnNumber","selectable"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-vector-icons/lib/icon-button.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { StyleSheet, Text, TouchableHighlight, View } from 'react-native';\nimport { pick, omit } from './object-utils';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    padding: 8,\n  },\n  touchable: {\n    overflow: 'hidden',\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    fontWeight: '600',\n    backgroundColor: 'transparent',\n  },\n});\n\nconst IOS7_BLUE = '#007AFF';\n\nconst TEXT_PROP_NAMES = [\n  'ellipsizeMode',\n  'numberOfLines',\n  'textBreakStrategy',\n  'selectable',\n  'suppressHighlighting',\n  'allowFontScaling',\n  'adjustsFontSizeToFit',\n  'minimumFontScale',\n];\n\nconst TOUCHABLE_PROP_NAMES = [\n  'accessible',\n  'accessibilityLabel',\n  'accessibilityHint',\n  'accessibilityComponentType',\n  'accessibilityRole',\n  'accessibilityStates',\n  'accessibilityTraits',\n  'onFocus',\n  'onBlur',\n  'disabled',\n  'onPress',\n  'onPressIn',\n  'onPressOut',\n  'onLayout',\n  'onLongPress',\n  'nativeID',\n  'testID',\n  'delayPressIn',\n  'delayPressOut',\n  'delayLongPress',\n  'activeOpacity',\n  'underlayColor',\n  'selectionColor',\n  'onShowUnderlay',\n  'onHideUnderlay',\n  'hasTVPreferredFocus',\n  'tvParallaxProperties',\n];\n\nexport default function createIconButtonComponent(Icon) {\n  return class IconButton extends PureComponent {\n    static propTypes = {\n      backgroundColor: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number,\n      ]),\n      borderRadius: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      size: PropTypes.number,\n      iconStyle: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n    };\n\n    static defaultProps = {\n      backgroundColor: IOS7_BLUE,\n      borderRadius: 5,\n      color: 'white',\n      size: 20,\n    };\n\n    render() {\n      const { style, iconStyle, children, ...restProps } = this.props;\n\n      const iconProps = pick(\n        restProps,\n        TEXT_PROP_NAMES,\n        'style',\n        'name',\n        'size',\n        'color'\n      );\n      const touchableProps = pick(restProps, TOUCHABLE_PROP_NAMES);\n      const props = omit(\n        restProps,\n        Object.keys(iconProps),\n        Object.keys(touchableProps),\n        'iconStyle',\n        'borderRadius',\n        'backgroundColor'\n      );\n      iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;\n\n      const colorStyle = pick(this.props, 'color');\n      const blockStyle = pick(this.props, 'backgroundColor', 'borderRadius');\n\n      return (\n        <TouchableHighlight\n          style={[styles.touchable, blockStyle]}\n          {...touchableProps}\n        >\n          <View style={[styles.container, blockStyle, style]} {...props}>\n            <Icon {...iconProps} />\n            {typeof children === 'string' ? (\n              <Text style={[styles.text, colorStyle]} selectable={false}>\n                {children}\n              </Text>\n            ) : (\n              children\n            )}\n          </View>\n        </TouchableHighlight>\n      );\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}