{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-ratings/dist/SwipeRating.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { Component } from \"react\";\nimport times from \"lodash/times\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STAR_IMAGE = require(\"./images/star.png\");\nconst HEART_IMAGE = require(\"./images/heart.png\");\nconst ROCKET_IMAGE = require(\"./images/rocket.png\");\nconst BELL_IMAGE = require(\"./images/bell.png\");\nconst TYPES = {\n  star: {\n    source: STAR_IMAGE,\n    color: \"#f1c40f\",\n    backgroundColor: \"white\"\n  },\n  heart: {\n    source: HEART_IMAGE,\n    color: \"#e74c3c\",\n    backgroundColor: \"white\"\n  },\n  rocket: {\n    source: ROCKET_IMAGE,\n    color: \"#2ecc71\",\n    backgroundColor: \"white\"\n  },\n  bell: {\n    source: BELL_IMAGE,\n    color: \"#f39c12\",\n    backgroundColor: \"white\"\n  },\n  custom: {}\n};\nconst fractionsType = (props, propName, componentName) => {\n  if (props[propName]) {\n    const value = props[propName];\n    if (typeof value === \"number\") {\n      return value >= 0 && value <= 20 ? null : new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n    }\n    return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n  }\n};\nexport default class SwipeRating extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      onStartRating,\n      onSwipeRating,\n      onFinishRating,\n      fractions\n    } = this.props;\n    const position = new Animated.ValueXY();\n    const panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onPanResponderGrant: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n        if (this.state.isComponentMounted) {\n          this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n          const rating = this.getCurrentRating(tapPositionX);\n          if (typeof onStartRating === \"function\") {\n            onStartRating(rating);\n          }\n        }\n      },\n      onPanResponderMove: (event, gesture) => {\n        const newPosition = new Animated.ValueXY();\n        const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n        newPosition.setValue({\n          x: tapPositionX,\n          y: 0\n        });\n        if (this.state.isComponentMounted) {\n          this.setState({\n            position: newPosition,\n            value: tapPositionX\n          });\n          const rating = this.getCurrentRating(tapPositionX);\n          if (typeof onSwipeRating === \"function\") {\n            onSwipeRating(rating);\n          }\n        }\n      },\n      onPanResponderRelease: () => {\n        const rating = this.getCurrentRating(this.state.value);\n        if (rating >= this.props.minValue) {\n          if (!fractions) {\n            this.setCurrentRating(rating);\n          }\n          if (typeof onFinishRating === \"function\") {\n            onFinishRating(rating);\n          }\n        }\n      }\n    });\n    this.state = {\n      panResponder,\n      position,\n      display: false,\n      isComponentMounted: false\n    };\n  }\n  componentDidMount() {\n    try {\n      this.setState({\n        display: true,\n        isComponentMounted: true\n      }, () => this.setCurrentRating(this.props.startingValue));\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.startingValue !== prevProps.startingValue) {\n      this.setCurrentRating(this.props.startingValue);\n    }\n  }\n  handleLayoutChange() {\n    this.ratingRef.measure((fx, fy, width, height, px) => {\n      const halfWidth = width / 2;\n      const pageXWithinWindow = px % Dimensions.get(\"window\").width;\n      this.setState({\n        centerX: pageXWithinWindow + halfWidth\n      });\n    });\n  }\n  getPrimaryViewStyle() {\n    const {\n      position\n    } = this.state;\n    const {\n      imageSize,\n      ratingCount,\n      type\n    } = this.props;\n    const {\n      color\n    } = TYPES[type];\n    const width = position.x.interpolate({\n      inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n      outputRange: [0, ratingCount * imageSize / 2, ratingCount * imageSize],\n      extrapolate: \"clamp\"\n    }, {\n      useNativeDriver: true\n    });\n    return {\n      backgroundColor: color,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n  getSecondaryViewStyle() {\n    const {\n      position\n    } = this.state;\n    const {\n      imageSize,\n      ratingCount,\n      type\n    } = this.props;\n    const {\n      backgroundColor\n    } = TYPES[type];\n    const width = position.x.interpolate({\n      inputRange: [-ratingCount * (imageSize / 2), 0, ratingCount * (imageSize / 2)],\n      outputRange: [ratingCount * imageSize, ratingCount * imageSize / 2, 0],\n      extrapolate: \"clamp\"\n    }, {\n      useNativeDriver: true\n    });\n    return {\n      backgroundColor,\n      width,\n      height: width ? imageSize : 0\n    };\n  }\n  renderRatings() {\n    const {\n      imageSize,\n      ratingCount,\n      type,\n      tintColor\n    } = this.props;\n    const {\n      source\n    } = TYPES[type];\n    return times(ratingCount, index => _jsxDEV(View, {\n      style: styles.starContainer,\n      children: _jsxDEV(Image, {\n        source: source,\n        style: {\n          width: imageSize,\n          height: imageSize,\n          tintColor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 44\n    }, this));\n  }\n  getCurrentRating(value) {\n    const {\n      fractions,\n      imageSize,\n      ratingCount\n    } = this.props;\n    const startingValue = ratingCount / 2;\n    let currentRating = this.props.minValue ? this.props.minValue : 0;\n    if (value > ratingCount * imageSize / 2) {\n      currentRating = ratingCount;\n    } else if (value < -ratingCount * imageSize / 2) {\n      currentRating = this.props.minValue ? this.props.minValue : 0;\n    } else if (value <= imageSize || value > imageSize) {\n      const diff = value / imageSize;\n      currentRating = startingValue + diff;\n      currentRating = fractions ? Number(currentRating.toFixed(fractions)) : Math.ceil(currentRating);\n    } else {\n      currentRating = fractions ? Number(startingValue.toFixed(fractions)) : Math.ceil(startingValue);\n    }\n    if (this.props.jumpValue > 0 && this.props.jumpValue < this.props.ratingCount) {\n      return Math.ceil(currentRating * (1 / this.props.jumpValue)) / (1 / this.props.jumpValue);\n    } else {\n      return currentRating;\n    }\n  }\n  setCurrentRating(rating) {\n    const {\n      imageSize,\n      ratingCount\n    } = this.props;\n    const initialRating = ratingCount / 2;\n    let value = null;\n    if (rating > ratingCount) {\n      value = ratingCount * imageSize / 2;\n    } else if (rating < 0) {\n      value = -ratingCount * imageSize / 2;\n    } else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n      value = (rating - initialRating) * imageSize;\n    } else {\n      value = 0;\n    }\n    const newPosition = new Animated.ValueXY();\n    newPosition.setValue({\n      x: value,\n      y: 0\n    });\n    if (this.state.isComponentMounted) {\n      this.setState({\n        position: newPosition,\n        value\n      });\n    }\n  }\n  displayCurrentRating() {\n    const {\n      ratingCount,\n      type,\n      readonly,\n      showReadOnlyText,\n      ratingTextColor\n    } = this.props;\n    const color = ratingTextColor || TYPES[type].color;\n    return _jsxDEV(View, {\n      style: styles.showRatingView,\n      children: [_jsxDEV(View, {\n        style: styles.ratingView,\n        children: [_jsxDEV(Text, {\n          style: [styles.ratingText, {\n            color\n          }],\n          children: \"Rating: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: [styles.currentRatingText, {\n            color\n          }],\n          children: this.getCurrentRating(this.state.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), _jsxDEV(Text, {\n          style: [styles.maxRatingText, {\n            color\n          }],\n          children: [\"/\", ratingCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), _jsxDEV(View, {\n        children: readonly && showReadOnlyText && _jsxDEV(Text, {\n          style: [styles.readonlyLabel, {\n            color\n          }],\n          children: \"(readonly)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }, this);\n  }\n  render() {\n    const {\n      readonly,\n      type,\n      ratingImage,\n      ratingColor,\n      ratingBackgroundColor,\n      style,\n      showRating\n    } = this.props;\n    if (type === \"custom\") {\n      const custom = {\n        source: ratingImage,\n        color: ratingColor,\n        backgroundColor: ratingBackgroundColor\n      };\n      TYPES.custom = custom;\n    }\n    return this.state.display ? _jsxDEV(View, {\n      pointerEvents: readonly ? \"none\" : \"auto\",\n      style: style,\n      children: [showRating && this.displayCurrentRating(), _jsxDEV(View, _objectSpread(_objectSpread({\n        style: styles.starsWrapper\n      }, this.state.panResponder.panHandlers), {}, {\n        children: [_jsxDEV(View, {\n          style: styles.starsInsideWrapper,\n          onLayout: () => {\n            this.handleLayoutChange();\n          },\n          ref: view => {\n            this.ratingRef = view;\n          },\n          children: [_jsxDEV(Animated.View, {\n            style: this.getPrimaryViewStyle()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), _jsxDEV(Animated.View, {\n            style: this.getSecondaryViewStyle()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), this.renderRatings()]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this) : null;\n  }\n  componentWillUnmount() {\n    this.setState({\n      isComponentMounted: false\n    });\n  }\n}\nSwipeRating.defaultProps = {\n  type: \"star\",\n  ratingImage: STAR_IMAGE,\n  ratingColor: \"#f1c40f\",\n  ratingBackgroundColor: \"white\",\n  ratingCount: 5,\n  showReadOnlyText: true,\n  imageSize: 40,\n  minValue: 0,\n  jumpValue: 0\n};\nconst styles = StyleSheet.create({\n  starsWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  starsInsideWrapper: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  showRatingView: {\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 5\n  },\n  ratingView: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingBottom: 5\n  },\n  ratingText: {\n    fontSize: 15,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n    color: \"#34495e\"\n  },\n  readonlyLabel: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: 12,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n    color: \"#34495a\"\n  },\n  currentRatingText: {\n    fontSize: 30,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null\n  },\n  maxRatingText: {\n    fontSize: 18,\n    textAlign: \"center\",\n    fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n    color: \"#34495e\"\n  }\n});","map":{"version":3,"names":["React","Component","times","View","Text","Animated","PanResponder","Image","StyleSheet","Platform","Dimensions","jsxDEV","_jsxDEV","STAR_IMAGE","require","HEART_IMAGE","ROCKET_IMAGE","BELL_IMAGE","TYPES","star","source","color","backgroundColor","heart","rocket","bell","custom","fractionsType","props","propName","componentName","value","Error","SwipeRating","constructor","onStartRating","onSwipeRating","onFinishRating","fractions","position","ValueXY","panResponder","create","onStartShouldSetPanResponder","onPanResponderGrant","event","gesture","newPosition","tapPositionX","x0","state","centerX","dx","setValue","x","y","isComponentMounted","setState","rating","getCurrentRating","onPanResponderMove","onPanResponderRelease","minValue","setCurrentRating","display","componentDidMount","startingValue","err","console","log","componentDidUpdate","prevProps","handleLayoutChange","ratingRef","measure","fx","fy","width","height","px","halfWidth","pageXWithinWindow","get","getPrimaryViewStyle","imageSize","ratingCount","type","interpolate","inputRange","outputRange","extrapolate","useNativeDriver","getSecondaryViewStyle","renderRatings","tintColor","index","style","styles","starContainer","children","fileName","_jsxFileName","lineNumber","columnNumber","currentRating","diff","Number","toFixed","Math","ceil","jumpValue","initialRating","displayCurrentRating","readonly","showReadOnlyText","ratingTextColor","showRatingView","ratingView","ratingText","currentRatingText","maxRatingText","readonlyLabel","render","ratingImage","ratingColor","ratingBackgroundColor","showRating","pointerEvents","_objectSpread","starsWrapper","panHandlers","starsInsideWrapper","onLayout","ref","view","componentWillUnmount","defaultProps","flexDirection","justifyContent","alignItems","top","left","right","bottom","paddingBottom","fontSize","textAlign","fontFamily","OS"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-ratings/dist/SwipeRating.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport times from \"lodash/times\";\nimport { View, Text, Animated, PanResponder, Image, StyleSheet, Platform, Dimensions } from \"react-native\";\n// RATING IMAGES WITH STATIC BACKGROUND COLOR (white)\nconst STAR_IMAGE = require(\"./images/star.png\");\nconst HEART_IMAGE = require(\"./images/heart.png\");\nconst ROCKET_IMAGE = require(\"./images/rocket.png\");\nconst BELL_IMAGE = require(\"./images/bell.png\");\nconst TYPES = {\n    star: {\n        source: STAR_IMAGE,\n        color: \"#f1c40f\",\n        backgroundColor: \"white\"\n    },\n    heart: {\n        source: HEART_IMAGE,\n        color: \"#e74c3c\",\n        backgroundColor: \"white\"\n    },\n    rocket: {\n        source: ROCKET_IMAGE,\n        color: \"#2ecc71\",\n        backgroundColor: \"white\"\n    },\n    bell: {\n        source: BELL_IMAGE,\n        color: \"#f39c12\",\n        backgroundColor: \"white\"\n    },\n    custom: {}\n};\nconst fractionsType = (props, propName, componentName) => {\n    if (props[propName]) {\n        const value = props[propName];\n        if (typeof value === \"number\") {\n            return value >= 0 && value <= 20 ?\n                null :\n                new Error(`\\`${propName}\\` in \\`${componentName}\\` must be between 0 and 20`);\n        }\n        return new Error(`\\`${propName}\\` in \\`${componentName}\\` must be a number`);\n    }\n};\nexport default class SwipeRating extends Component {\n    constructor(props) {\n        super(props);\n        const { onStartRating, onSwipeRating, onFinishRating, fractions } = this.props;\n        const position = new Animated.ValueXY();\n        const panResponder = PanResponder.create({\n            onStartShouldSetPanResponder: () => true,\n            onPanResponderGrant: (event, gesture) => {\n                const newPosition = new Animated.ValueXY();\n                const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n                newPosition.setValue({ x: tapPositionX, y: 0 });\n                if (this.state.isComponentMounted) {\n                    this.setState({ position: newPosition, value: tapPositionX });\n                    const rating = this.getCurrentRating(tapPositionX);\n                    if (typeof onStartRating === \"function\") {\n                        onStartRating(rating);\n                    }\n                }\n            },\n            onPanResponderMove: (event, gesture) => {\n                const newPosition = new Animated.ValueXY();\n                const tapPositionX = gesture.x0 - this.state.centerX + gesture.dx;\n                newPosition.setValue({ x: tapPositionX, y: 0 });\n                if (this.state.isComponentMounted) {\n                    this.setState({ position: newPosition, value: tapPositionX });\n                    const rating = this.getCurrentRating(tapPositionX);\n                    if (typeof onSwipeRating === \"function\") {\n                        onSwipeRating(rating);\n                    }\n                }\n            },\n            onPanResponderRelease: () => {\n                const rating = this.getCurrentRating(this.state.value);\n                if (rating >= this.props.minValue) {\n                    if (!fractions) {\n                        // 'round up' to the nearest rating image\n                        this.setCurrentRating(rating);\n                    }\n                    if (typeof onFinishRating === \"function\") {\n                        onFinishRating(rating);\n                    }\n                }\n            }\n        });\n        this.state = {\n            panResponder,\n            position,\n            display: false,\n            isComponentMounted: false\n        };\n    }\n    componentDidMount() {\n        try {\n            this.setState({ display: true, isComponentMounted: true }, () => this.setCurrentRating(this.props.startingValue));\n        }\n        catch (err) {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.startingValue !== prevProps.startingValue) {\n            this.setCurrentRating(this.props.startingValue);\n        }\n    }\n    handleLayoutChange() {\n        // eslint-disable-next-line max-params\n        this.ratingRef.measure((fx, fy, width, height, px) => {\n            const halfWidth = width / 2;\n            const pageXWithinWindow = px % Dimensions.get(\"window\").width;\n            this.setState({\n                centerX: pageXWithinWindow + halfWidth\n            });\n        });\n    }\n    getPrimaryViewStyle() {\n        const { position } = this.state;\n        const { imageSize, ratingCount, type } = this.props;\n        const { color } = TYPES[type];\n        const width = position.x.interpolate({\n            inputRange: [\n                -ratingCount * (imageSize / 2),\n                0,\n                ratingCount * (imageSize / 2)\n            ],\n            outputRange: [\n                0,\n                ratingCount * imageSize / 2,\n                ratingCount * imageSize\n            ],\n            extrapolate: \"clamp\"\n        }, {\n            useNativeDriver: true\n        });\n        return {\n            backgroundColor: color,\n            width,\n            height: width ? imageSize : 0\n        };\n    }\n    getSecondaryViewStyle() {\n        const { position } = this.state;\n        const { imageSize, ratingCount, type } = this.props;\n        const { backgroundColor } = TYPES[type];\n        const width = position.x.interpolate({\n            inputRange: [\n                -ratingCount * (imageSize / 2),\n                0,\n                ratingCount * (imageSize / 2)\n            ],\n            outputRange: [\n                ratingCount * imageSize,\n                ratingCount * imageSize / 2,\n                0\n            ],\n            extrapolate: \"clamp\"\n        }, {\n            useNativeDriver: true\n        });\n        return {\n            backgroundColor,\n            width,\n            height: width ? imageSize : 0\n        };\n    }\n    renderRatings() {\n        const { imageSize, ratingCount, type, tintColor } = this.props;\n        const { source } = TYPES[type];\n        return times(ratingCount, index => <View key={index} style={styles.starContainer}>\n        <Image source={source} style={{ width: imageSize, height: imageSize, tintColor }}/>\n      </View>);\n    }\n    // eslint-disable-next-line max-statements\n    getCurrentRating(value) {\n        const { fractions, imageSize, ratingCount } = this.props;\n        const startingValue = ratingCount / 2;\n        let currentRating = this.props.minValue ? this.props.minValue : 0;\n        if (value > ratingCount * imageSize / 2) {\n            currentRating = ratingCount;\n        }\n        else if (value < -ratingCount * imageSize / 2) {\n            currentRating = this.props.minValue ? this.props.minValue : 0;\n        }\n        else if (value <= imageSize || value > imageSize) {\n            const diff = value / imageSize;\n            currentRating = startingValue + diff;\n            currentRating = fractions ?\n                Number(currentRating.toFixed(fractions)) :\n                Math.ceil(currentRating);\n        }\n        else {\n            currentRating = fractions ?\n                Number(startingValue.toFixed(fractions)) :\n                Math.ceil(startingValue);\n        }\n        if (this.props.jumpValue > 0 &&\n            this.props.jumpValue < this.props.ratingCount) {\n            return (Math.ceil(currentRating * (1 / this.props.jumpValue)) /\n                (1 / this.props.jumpValue));\n        }\n        else {\n            return currentRating;\n        }\n    }\n    // eslint-disable-next-line max-statements\n    setCurrentRating(rating) {\n        const { imageSize, ratingCount } = this.props;\n        // `initialRating` corresponds to `startingValue` in the getter. Naming it\n        // Differently here avoids confusion with `value` below.\n        const initialRating = ratingCount / 2;\n        let value = null;\n        if (rating > ratingCount) {\n            value = ratingCount * imageSize / 2;\n        }\n        else if (rating < 0) {\n            value = -ratingCount * imageSize / 2;\n        }\n        else if (rating < ratingCount / 2 || rating > ratingCount / 2) {\n            value = (rating - initialRating) * imageSize;\n        }\n        else {\n            value = 0;\n        }\n        const newPosition = new Animated.ValueXY();\n        newPosition.setValue({ x: value, y: 0 });\n        if (this.state.isComponentMounted) {\n            this.setState({ position: newPosition, value });\n        }\n    }\n    displayCurrentRating() {\n        const { ratingCount, type, readonly, showReadOnlyText, ratingTextColor } = this.props;\n        const color = ratingTextColor || TYPES[type].color;\n        return (<View style={styles.showRatingView}>\n        <View style={styles.ratingView}>\n          <Text style={[styles.ratingText, { color }]}>Rating: </Text>\n          <Text style={[styles.currentRatingText, { color }]}>\n            {this.getCurrentRating(this.state.value)}\n          </Text>\n          <Text style={[styles.maxRatingText, { color }]}>/{ratingCount}</Text>\n        </View>\n        <View>\n          {readonly && showReadOnlyText &&\n                <Text style={[styles.readonlyLabel, { color }]}>(readonly)</Text>}\n        </View>\n      </View>);\n    }\n    render() {\n        const { readonly, type, ratingImage, ratingColor, ratingBackgroundColor, style, showRating } = this.props;\n        if (type === \"custom\") {\n            const custom = {\n                source: ratingImage,\n                color: ratingColor,\n                backgroundColor: ratingBackgroundColor\n            };\n            TYPES.custom = custom;\n        }\n        return this.state.display ?\n            <View pointerEvents={readonly ? \"none\" : \"auto\"} style={style}>\n        {showRating && this.displayCurrentRating()}\n        <View style={styles.starsWrapper} {...this.state.panResponder.panHandlers}>\n          <View style={styles.starsInsideWrapper} onLayout={() => {\n                    this.handleLayoutChange();\n                }} ref={view => {\n                    this.ratingRef = view;\n                }}>\n            <Animated.View style={this.getPrimaryViewStyle()}/>\n            <Animated.View style={this.getSecondaryViewStyle()}/>\n          </View>\n          {this.renderRatings()}\n        </View>\n      </View> :\n            null;\n    }\n    componentWillUnmount() {\n        this.setState({ isComponentMounted: false });\n    }\n}\nSwipeRating.defaultProps = {\n    type: \"star\",\n    ratingImage: STAR_IMAGE,\n    ratingColor: \"#f1c40f\",\n    ratingBackgroundColor: \"white\",\n    ratingCount: 5,\n    showReadOnlyText: true,\n    imageSize: 40,\n    minValue: 0,\n    jumpValue: 0\n};\nconst styles = StyleSheet.create({\n    starsWrapper: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    starsInsideWrapper: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n    },\n    showRatingView: {\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: 5\n    },\n    ratingView: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingBottom: 5\n    },\n    ratingText: {\n        fontSize: 15,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495e\"\n    },\n    readonlyLabel: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        fontSize: 12,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495a\"\n    },\n    currentRatingText: {\n        fontSize: 30,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null\n    },\n    maxRatingText: {\n        fontSize: 18,\n        textAlign: \"center\",\n        fontFamily: Platform.OS === \"ios\" ? \"Trebuchet MS\" : null,\n        color: \"#34495e\"\n    }\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}