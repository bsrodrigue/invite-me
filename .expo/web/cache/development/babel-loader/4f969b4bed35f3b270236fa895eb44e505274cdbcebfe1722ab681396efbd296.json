{"ast":null,"code":"import * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\nconst NativeModule = TurboModuleRegistry.getEnforcing('StatusBarManager');\nlet constants = null;\nconst NativeStatusBarManager = {\n  getConstants() {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n  setColor(color, animated) {\n    NativeModule.setColor(color, animated);\n  },\n  setTranslucent(translucent) {\n    NativeModule.setTranslucent(translucent);\n  },\n  setStyle(statusBarStyle) {\n    NativeModule.setStyle(statusBarStyle);\n  },\n  setHidden(hidden) {\n    NativeModule.setHidden(hidden);\n  }\n};\nexport default NativeStatusBarManager;","map":{"version":3,"names":["TurboModuleRegistry","NativeModule","getEnforcing","constants","NativeStatusBarManager","getConstants","setColor","color","animated","setTranslucent","translucent","setStyle","statusBarStyle","setHidden","hidden"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/src/private/specs/modules/NativeStatusBarManagerAndroid.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from '../../../../Libraries/TurboModule/RCTExport';\n\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n\nexport interface Spec extends TurboModule {\n  +getConstants: () => {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR: number,\n  |};\n  +setColor: (color: number, animated: boolean) => void;\n  +setTranslucent: (translucent: boolean) => void;\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   */\n  +setStyle: (statusBarStyle?: ?string) => void;\n  +setHidden: (hidden: boolean) => void;\n}\n\nconst NativeModule = TurboModuleRegistry.getEnforcing<Spec>('StatusBarManager');\nlet constants = null;\n\nconst NativeStatusBarManager = {\n  getConstants(): {|\n    +HEIGHT: number,\n    +DEFAULT_BACKGROUND_COLOR?: number,\n  |} {\n    if (constants == null) {\n      constants = NativeModule.getConstants();\n    }\n    return constants;\n  },\n\n  setColor(color: number, animated: boolean): void {\n    NativeModule.setColor(color, animated);\n  },\n\n  setTranslucent(translucent: boolean): void {\n    NativeModule.setTranslucent(translucent);\n  },\n\n  /**\n   *  - statusBarStyles can be:\n   *    - 'default'\n   *    - 'dark-content'\n   */\n  setStyle(statusBarStyle?: ?string): void {\n    NativeModule.setStyle(statusBarStyle);\n  },\n\n  setHidden(hidden: boolean): void {\n    NativeModule.setHidden(hidden);\n  },\n};\n\nexport default NativeStatusBarManager;\n"],"mappings":"AAYA,OAAO,KAAKA,mBAAmB,MAAM,uDAAuD;AAmB5F,MAAMC,YAAY,GAAGD,mBAAmB,CAACE,YAAY,CAAO,kBAAkB,CAAC;AAC/E,IAAIC,SAAS,GAAG,IAAI;AAEpB,MAAMC,sBAAsB,GAAG;EAC7BC,YAAYA,CAAA,EAGT;IACD,IAAIF,SAAS,IAAI,IAAI,EAAE;MACrBA,SAAS,GAAGF,YAAY,CAACI,YAAY,CAAC,CAAC;IACzC;IACA,OAAOF,SAAS;EAClB,CAAC;EAEDG,QAAQA,CAACC,KAAa,EAAEC,QAAiB,EAAQ;IAC/CP,YAAY,CAACK,QAAQ,CAACC,KAAK,EAAEC,QAAQ,CAAC;EACxC,CAAC;EAEDC,cAAcA,CAACC,WAAoB,EAAQ;IACzCT,YAAY,CAACQ,cAAc,CAACC,WAAW,CAAC;EAC1C,CAAC;EAODC,QAAQA,CAACC,cAAwB,EAAQ;IACvCX,YAAY,CAACU,QAAQ,CAACC,cAAc,CAAC;EACvC,CAAC;EAEDC,SAASA,CAACC,MAAe,EAAQ;IAC/Bb,YAAY,CAACY,SAAS,CAACC,MAAM,CAAC;EAChC;AACF,CAAC;AAED,eAAeV,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}