{"ast":null,"code":"'use strict';\n\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport invariant from 'invariant';\nlet _uniqueId = 1;\nexport default class AnimatedValueXY extends AnimatedWithChildren {\n  constructor(valueIn, config) {\n    super();\n    const value = valueIn || {\n      x: 0,\n      y: 0\n    };\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      this.x = new AnimatedValue(value.x);\n      this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(value.x instanceof AnimatedValue && value.y instanceof AnimatedValue, 'AnimatedValueXY must be initialized with an object of numbers or ' + 'AnimatedValues.');\n      this.x = value.x;\n      this.y = value.y;\n    }\n    this._listeners = {};\n    if (config && config.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n  setValue(value) {\n    this.x.setValue(value.x);\n    this.y.setValue(value.y);\n  }\n  setOffset(offset) {\n    this.x.setOffset(offset.x);\n    this.y.setOffset(offset.y);\n  }\n  flattenOffset() {\n    this.x.flattenOffset();\n    this.y.flattenOffset();\n  }\n  extractOffset() {\n    this.x.extractOffset();\n    this.y.extractOffset();\n  }\n  __getValue() {\n    return {\n      x: this.x.__getValue(),\n      y: this.y.__getValue()\n    };\n  }\n  resetAnimation(callback) {\n    this.x.resetAnimation();\n    this.y.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n  stopAnimation(callback) {\n    this.x.stopAnimation();\n    this.y.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n  addListener(callback) {\n    const id = String(_uniqueId++);\n    const jointCallback = ({\n      value: number\n    }) => {\n      callback(this.__getValue());\n    };\n    this._listeners[id] = {\n      x: this.x.addListener(jointCallback),\n      y: this.y.addListener(jointCallback)\n    };\n    return id;\n  }\n  removeListener(id) {\n    this.x.removeListener(this._listeners[id].x);\n    this.y.removeListener(this._listeners[id].y);\n    delete this._listeners[id];\n  }\n  removeAllListeners() {\n    this.x.removeAllListeners();\n    this.y.removeAllListeners();\n    this._listeners = {};\n  }\n  getLayout() {\n    return {\n      left: this.x,\n      top: this.y\n    };\n  }\n  getTranslateTransform() {\n    return [{\n      translateX: this.x\n    }, {\n      translateY: this.y\n    }];\n  }\n  __attach() {\n    this.x.__addChild(this);\n    this.y.__addChild(this);\n    super.__attach();\n  }\n  __detach() {\n    this.x.__removeChild(this);\n    this.y.__removeChild(this);\n    super.__detach();\n  }\n  __makeNative(platformConfig) {\n    this.x.__makeNative(platformConfig);\n    this.y.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n}","map":{"version":3,"names":["AnimatedValue","AnimatedWithChildren","invariant","_uniqueId","AnimatedValueXY","constructor","valueIn","config","value","x","y","_listeners","useNativeDriver","__makeNative","setValue","setOffset","offset","flattenOffset","extractOffset","__getValue","resetAnimation","callback","stopAnimation","addListener","id","String","jointCallback","number","removeListener","removeAllListeners","getLayout","left","top","getTranslateTransform","translateX","translateY","__attach","__addChild","__detach","__removeChild","platformConfig"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Animated/nodes/AnimatedValueXY.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport invariant from 'invariant';\n\nexport type AnimatedValueXYConfig = $ReadOnly<{\n  useNativeDriver: boolean,\n}>;\ntype ValueXYListenerCallback = (value: {x: number, y: number, ...}) => mixed;\n\nlet _uniqueId = 1;\n\n/**\n * 2D Value for driving 2D animations, such as pan gestures. Almost identical\n * API to normal `Animated.Value`, but multiplexed.\n *\n * See https://reactnative.dev/docs/animatedvaluexy\n */\nexport default class AnimatedValueXY extends AnimatedWithChildren {\n  x: AnimatedValue;\n  y: AnimatedValue;\n  _listeners: {\n    [key: string]: {\n      x: string,\n      y: string,\n      ...\n    },\n    ...\n  };\n\n  constructor(\n    valueIn?: ?{\n      +x: number | AnimatedValue,\n      +y: number | AnimatedValue,\n      ...\n    },\n    config?: ?AnimatedValueXYConfig,\n  ) {\n    super();\n    const value: any = valueIn || {x: 0, y: 0}; // @flowfixme: shouldn't need `: any`\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      this.x = new AnimatedValue(value.x);\n      this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(\n        value.x instanceof AnimatedValue && value.y instanceof AnimatedValue,\n        'AnimatedValueXY must be initialized with an object of numbers or ' +\n          'AnimatedValues.',\n      );\n      this.x = value.x;\n      this.y = value.y;\n    }\n    this._listeners = {};\n    if (config && config.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#setvalue\n   */\n  setValue(value: {x: number, y: number, ...}) {\n    this.x.setValue(value.x);\n    this.y.setValue(value.y);\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#setoffset\n   */\n  setOffset(offset: {x: number, y: number, ...}) {\n    this.x.setOffset(offset.x);\n    this.y.setOffset(offset.y);\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#flattenoffset\n   */\n  flattenOffset(): void {\n    this.x.flattenOffset();\n    this.y.flattenOffset();\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#extractoffset\n   */\n  extractOffset(): void {\n    this.x.extractOffset();\n    this.y.extractOffset();\n  }\n\n  __getValue(): {\n    x: number,\n    y: number,\n    ...\n  } {\n    return {\n      x: this.x.__getValue(),\n      y: this.y.__getValue(),\n    };\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#resetanimation\n   */\n  resetAnimation(\n    callback?: (value: {x: number, y: number, ...}) => void,\n  ): void {\n    this.x.resetAnimation();\n    this.y.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#stopanimation\n   */\n  stopAnimation(callback?: (value: {x: number, y: number, ...}) => void): void {\n    this.x.stopAnimation();\n    this.y.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to synchronously read\n   * the value because it might be driven natively.\n   *\n   * Returns a string that serves as an identifier for the listener.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#addlistener\n   */\n  addListener(callback: ValueXYListenerCallback): string {\n    const id = String(_uniqueId++);\n    const jointCallback = ({value: number}: any) => {\n      callback(this.__getValue());\n    };\n    this._listeners[id] = {\n      x: this.x.addListener(jointCallback),\n      y: this.y.addListener(jointCallback),\n    };\n    return id;\n  }\n\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#removelistener\n   */\n  removeListener(id: string): void {\n    this.x.removeListener(this._listeners[id].x);\n    this.y.removeListener(this._listeners[id].y);\n    delete this._listeners[id];\n  }\n\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#removealllisteners\n   */\n  removeAllListeners(): void {\n    this.x.removeAllListeners();\n    this.y.removeAllListeners();\n    this._listeners = {};\n  }\n\n  /**\n   * Converts `{x, y}` into `{left, top}` for use in style.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#getlayout\n   */\n  getLayout(): {[key: string]: AnimatedValue, ...} {\n    return {\n      left: this.x,\n      top: this.y,\n    };\n  }\n\n  /**\n   * Converts `{x, y}` into a useable translation transform.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#gettranslatetransform\n   */\n  getTranslateTransform(): Array<{[key: string]: AnimatedValue, ...}> {\n    return [{translateX: this.x}, {translateY: this.y}];\n  }\n\n  __attach(): void {\n    this.x.__addChild(this);\n    this.y.__addChild(this);\n    super.__attach();\n  }\n\n  __detach(): void {\n    this.x.__removeChild(this);\n    this.y.__removeChild(this);\n    super.__detach();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this.x.__makeNative(platformConfig);\n    this.y.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}