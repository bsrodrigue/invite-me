{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/src/components/RadioInput/RadioInput.tsx\";\nimport { CheckBox } from \"@rneui/base\";\nimport { useTheme } from \"@rneui/themed\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RadioInput({\n  label,\n  imgSrc,\n  value,\n  selected,\n  onPress\n}) {\n  const {\n    theme: {\n      colors: {\n        primary,\n        greyOutline\n      }\n    }\n  } = useTheme();\n  const checked = value === selected;\n  return _jsxDEV(TouchableOpacity, {\n    onPress: () => {\n      onPress(value);\n    },\n    style: {\n      flex: 1,\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      borderRadius: 10,\n      borderColor: checked ? primary : greyOutline,\n      borderWidth: 1,\n      paddingHorizontal: 10,\n      paddingVertical: 10\n    },\n    children: [imgSrc && _jsxDEV(Image, {\n      style: {\n        height: 45,\n        width: 45\n      },\n      source: imgSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this), _jsxDEV(View, {\n      style: {\n        alignItems: \"center\"\n      },\n      children: [_jsxDEV(CheckBox, {\n        containerStyle: {\n          padding: 0\n        },\n        checked: checked,\n        checkedIcon: \"dot-circle-o\",\n        uncheckedIcon: \"circle-o\",\n        checkedColor: primary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), _jsxDEV(Text, {\n        style: {\n          fontFamily: \"Quicksand-600\",\n          textAlign: \"center\"\n        },\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["CheckBox","useTheme","Image","Text","TouchableOpacity","View","jsxDEV","_jsxDEV","RadioInput","label","imgSrc","value","selected","onPress","theme","colors","primary","greyOutline","checked","style","flex","flexDirection","alignItems","justifyContent","flexWrap","borderRadius","borderColor","borderWidth","paddingHorizontal","paddingVertical","children","height","width","source","fileName","_jsxFileName","lineNumber","columnNumber","containerStyle","padding","checkedIcon","uncheckedIcon","checkedColor","fontFamily","textAlign"],"sources":["/home/rodo/workspace/passion/apps/muh-money/src/components/RadioInput/RadioInput.tsx"],"sourcesContent":["import { CheckBox } from \"@rneui/base\";\nimport { useTheme } from \"@rneui/themed\";\nimport { Image, ImageSourcePropType, Text, TouchableOpacity, View } from \"react-native\";\n\ntype RadioInputProps = {\n  label: string;\n  imgSrc?: ImageSourcePropType;\n  value: string;\n  selected: string;\n  onPress: (value: string) => void;\n}\n\nexport default function RadioInput({ label, imgSrc, value, selected, onPress }: RadioInputProps) {\n  const { theme: { colors: { primary, greyOutline } } } = useTheme();\n  const checked = value === selected;\n\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        onPress(value);\n      }}\n      style={{\n        flex: 1,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n        borderRadius: 10,\n        borderColor: checked ? primary : greyOutline,\n        borderWidth: 1,\n        paddingHorizontal: 10,\n        paddingVertical: 10,\n      }}>\n      {\n        imgSrc && (\n          <Image style={{ height: 45, width: 45 }} source={imgSrc} />\n        )\n      }\n      <View style={{ alignItems: \"center\", }}>\n        <CheckBox\n          containerStyle={{ padding: 0 }}\n          checked={checked}\n          checkedIcon=\"dot-circle-o\"\n          uncheckedIcon=\"circle-o\"\n          checkedColor={primary}\n        />\n        <Text style={{\n          fontFamily: \"Quicksand-600\",\n          textAlign: \"center\"\n        }}>{label}</Text>\n      </View>\n    </TouchableOpacity>\n  )\n}\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,aAAa;AACtC,SAASC,QAAQ,QAAQ,eAAe;AAAC,OAAAC,KAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAWzC,eAAe,SAASC,UAAUA,CAAC;EAAEC,KAAK;EAAEC,MAAM;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAyB,CAAC,EAAE;EAC/F,MAAM;IAAEC,KAAK,EAAE;MAAEC,MAAM,EAAE;QAAEC,OAAO;QAAEC;MAAY;IAAE;EAAE,CAAC,GAAGhB,QAAQ,CAAC,CAAC;EAClE,MAAMiB,OAAO,GAAGP,KAAK,KAAKC,QAAQ;EAElC,OACEL,OAAA,CAACH,gBAAgB;IACfS,OAAO,EAAEA,CAAA,KAAM;MACbA,OAAO,CAACF,KAAK,CAAC;IAChB,CAAE;IACFQ,KAAK,EAAE;MACLC,IAAI,EAAE,CAAC;MACPC,aAAa,EAAE,KAAK;MACpBC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE,QAAQ;MACxBC,QAAQ,EAAE,MAAM;MAChBC,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAER,OAAO,GAAGF,OAAO,GAAGC,WAAW;MAC5CU,WAAW,EAAE,CAAC;MACdC,iBAAiB,EAAE,EAAE;MACrBC,eAAe,EAAE;IACnB,CAAE;IAAAC,QAAA,GAEApB,MAAM,IACJH,OAAA,CAACL,KAAK;MAACiB,KAAK,EAAE;QAAEY,MAAM,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAG,CAAE;MAACC,MAAM,EAAEvB;IAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3D,EAEH9B,OAAA,CAACF,IAAI;MAACc,KAAK,EAAE;QAAEG,UAAU,EAAE;MAAU,CAAE;MAAAQ,QAAA,GACrCvB,OAAA,CAACP,QAAQ;QACPsC,cAAc,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAE;QAC/BrB,OAAO,EAAEA,OAAQ;QACjBsB,WAAW,EAAC,cAAc;QAC1BC,aAAa,EAAC,UAAU;QACxBC,YAAY,EAAE1B;MAAQ;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,EACF9B,OAAA,CAACJ,IAAI;QAACgB,KAAK,EAAE;UACXwB,UAAU,EAAE,eAAe;UAC3BC,SAAS,EAAE;QACb,CAAE;QAAAd,QAAA,EAAErB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}