{"ast":null,"code":"import NativePerformance from '../../src/private/webapis/performance/NativePerformance';\nimport Performance from '../../src/private/webapis/performance/Performance';\nif (NativePerformance) {\n  global.performance = new Performance();\n} else {\n  if (!global.performance) {\n    global.performance = {\n      now: function () {\n        const performanceNow = global.nativePerformanceNow || Date.now;\n        return performanceNow();\n      }\n    };\n  }\n}","map":{"version":3,"names":["NativePerformance","Performance","global","performance","now","performanceNow","nativePerformanceNow","Date"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Core/setUpPerformance.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport NativePerformance from '../../src/private/webapis/performance/NativePerformance';\nimport Performance from '../../src/private/webapis/performance/Performance';\n\n// In case if the native implementation of the Performance API is available, use it,\n// otherwise fall back to the legacy/default one, which only defines 'Performance.now()'\nif (NativePerformance) {\n  // $FlowExpectedError[cannot-write]\n  global.performance = new Performance();\n} else {\n  if (!global.performance) {\n    // $FlowExpectedError[cannot-write]\n    global.performance = ({\n      now: function () {\n        const performanceNow = global.nativePerformanceNow || Date.now;\n        return performanceNow();\n      },\n    }: {now?: () => number});\n  }\n}\n"],"mappings":"AAUA,OAAOA,iBAAiB,MAAM,yDAAyD;AACvF,OAAOC,WAAW,MAAM,mDAAmD;AAI3E,IAAID,iBAAiB,EAAE;EAErBE,MAAM,CAACC,WAAW,GAAG,IAAIF,WAAW,CAAC,CAAC;AACxC,CAAC,MAAM;EACL,IAAI,CAACC,MAAM,CAACC,WAAW,EAAE;IAEvBD,MAAM,CAACC,WAAW,GAAI;MACpBC,GAAG,EAAE,SAAAA,CAAA,EAAY;QACf,MAAMC,cAAc,GAAGH,MAAM,CAACI,oBAAoB,IAAIC,IAAI,CAACH,GAAG;QAC9D,OAAOC,cAAc,CAAC,CAAC;MACzB;IACF,CAAwB;EAC1B;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}