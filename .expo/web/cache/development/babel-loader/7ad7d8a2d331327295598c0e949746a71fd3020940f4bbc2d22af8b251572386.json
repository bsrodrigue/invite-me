{"ast":null,"code":"import invariant from 'invariant';\nconst NativeModules = require('../BatchedBridge/NativeModules');\nconst turboModuleProxy = global.__turboModuleProxy;\nconst moduleLoadHistory = {\n  NativeModules: [],\n  TurboModules: [],\n  NotFound: []\n};\nfunction isBridgeless() {\n  return global.RN$Bridgeless === true;\n}\nfunction isTurboModuleInteropEnabled() {\n  return global.RN$TurboInterop === true;\n}\nfunction shouldReportDebugInfo() {\n  return true;\n}\nfunction requireModule(name) {\n  if (!isBridgeless() || isTurboModuleInteropEnabled()) {\n    const legacyModule = NativeModules[name];\n    if (legacyModule != null) {\n      if (shouldReportDebugInfo()) {\n        moduleLoadHistory.NativeModules.push(name);\n      }\n      return legacyModule;\n    }\n  }\n  if (turboModuleProxy != null) {\n    const module = turboModuleProxy(name);\n    if (module != null) {\n      if (shouldReportDebugInfo()) {\n        moduleLoadHistory.TurboModules.push(name);\n      }\n      return module;\n    }\n  }\n  if (shouldReportDebugInfo() && !moduleLoadHistory.NotFound.includes(name)) {\n    moduleLoadHistory.NotFound.push(name);\n  }\n  return null;\n}\nexport function get(name) {\n  return requireModule(name);\n}\nexport function getEnforcing(name) {\n  const module = requireModule(name);\n  let message = `TurboModuleRegistry.getEnforcing(...): '${name}' could not be found. ` + 'Verify that a module by this name is registered in the native binary.';\n  if (shouldReportDebugInfo()) {\n    message += 'Bridgeless mode: ' + (isBridgeless() ? 'true' : 'false') + '. ';\n    message += 'TurboModule interop: ' + (isTurboModuleInteropEnabled() ? 'true' : 'false') + '. ';\n    message += 'Modules loaded: ' + JSON.stringify(moduleLoadHistory);\n  }\n  invariant(module != null, message);\n  return module;\n}","map":{"version":3,"names":["invariant","NativeModules","require","turboModuleProxy","global","__turboModuleProxy","moduleLoadHistory","TurboModules","NotFound","isBridgeless","RN$Bridgeless","isTurboModuleInteropEnabled","RN$TurboInterop","shouldReportDebugInfo","requireModule","name","legacyModule","push","module","includes","get","getEnforcing","message","JSON","stringify"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/TurboModule/TurboModuleRegistry.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {TurboModule} from './RCTExport';\n\nimport invariant from 'invariant';\n\nconst NativeModules = require('../BatchedBridge/NativeModules');\n\nconst turboModuleProxy = global.__turboModuleProxy;\n\nconst moduleLoadHistory = {\n  NativeModules: ([]: Array<string>),\n  TurboModules: ([]: Array<string>),\n  NotFound: ([]: Array<string>),\n};\n\nfunction isBridgeless() {\n  return global.RN$Bridgeless === true;\n}\n\nfunction isTurboModuleInteropEnabled() {\n  return global.RN$TurboInterop === true;\n}\n\n// TODO(154308585): Remove \"module not found\" debug info logging\nfunction shouldReportDebugInfo() {\n  return true;\n}\n\n// TODO(148943970): Consider reversing the lookup here:\n// Lookup on __turboModuleProxy, then lookup on nativeModuleProxy\nfunction requireModule<T: TurboModule>(name: string): ?T {\n  if (!isBridgeless() || isTurboModuleInteropEnabled()) {\n    // Backward compatibility layer during migration.\n    const legacyModule = NativeModules[name];\n    if (legacyModule != null) {\n      if (shouldReportDebugInfo()) {\n        moduleLoadHistory.NativeModules.push(name);\n      }\n      return ((legacyModule: $FlowFixMe): T);\n    }\n  }\n\n  if (turboModuleProxy != null) {\n    const module: ?T = turboModuleProxy(name);\n    if (module != null) {\n      if (shouldReportDebugInfo()) {\n        moduleLoadHistory.TurboModules.push(name);\n      }\n      return module;\n    }\n  }\n\n  if (shouldReportDebugInfo() && !moduleLoadHistory.NotFound.includes(name)) {\n    moduleLoadHistory.NotFound.push(name);\n  }\n  return null;\n}\n\nexport function get<T: TurboModule>(name: string): ?T {\n  return requireModule<T>(name);\n}\n\nexport function getEnforcing<T: TurboModule>(name: string): T {\n  const module = requireModule<T>(name);\n  let message =\n    `TurboModuleRegistry.getEnforcing(...): '${name}' could not be found. ` +\n    'Verify that a module by this name is registered in the native binary.';\n\n  if (shouldReportDebugInfo()) {\n    message += 'Bridgeless mode: ' + (isBridgeless() ? 'true' : 'false') + '. ';\n    message +=\n      'TurboModule interop: ' +\n      (isTurboModuleInteropEnabled() ? 'true' : 'false') +\n      '. ';\n    message += 'Modules loaded: ' + JSON.stringify(moduleLoadHistory);\n  }\n\n  invariant(module != null, message);\n  return module;\n}\n"],"mappings":"AAYA,OAAOA,SAAS,MAAM,WAAW;AAEjC,MAAMC,aAAa,GAAGC,OAAO,CAAC,gCAAgC,CAAC;AAE/D,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,kBAAkB;AAElD,MAAMC,iBAAiB,GAAG;EACxBL,aAAa,EAAG,EAAkB;EAClCM,YAAY,EAAG,EAAkB;EACjCC,QAAQ,EAAG;AACb,CAAC;AAED,SAASC,YAAYA,CAAA,EAAG;EACtB,OAAOL,MAAM,CAACM,aAAa,KAAK,IAAI;AACtC;AAEA,SAASC,2BAA2BA,CAAA,EAAG;EACrC,OAAOP,MAAM,CAACQ,eAAe,KAAK,IAAI;AACxC;AAGA,SAASC,qBAAqBA,CAAA,EAAG;EAC/B,OAAO,IAAI;AACb;AAIA,SAASC,aAAaA,CAAiBC,IAAY,EAAM;EACvD,IAAI,CAACN,YAAY,CAAC,CAAC,IAAIE,2BAA2B,CAAC,CAAC,EAAE;IAEpD,MAAMK,YAAY,GAAGf,aAAa,CAACc,IAAI,CAAC;IACxC,IAAIC,YAAY,IAAI,IAAI,EAAE;MACxB,IAAIH,qBAAqB,CAAC,CAAC,EAAE;QAC3BP,iBAAiB,CAACL,aAAa,CAACgB,IAAI,CAACF,IAAI,CAAC;MAC5C;MACA,OAASC,YAAY;IACvB;EACF;EAEA,IAAIb,gBAAgB,IAAI,IAAI,EAAE;IAC5B,MAAMe,MAAU,GAAGf,gBAAgB,CAACY,IAAI,CAAC;IACzC,IAAIG,MAAM,IAAI,IAAI,EAAE;MAClB,IAAIL,qBAAqB,CAAC,CAAC,EAAE;QAC3BP,iBAAiB,CAACC,YAAY,CAACU,IAAI,CAACF,IAAI,CAAC;MAC3C;MACA,OAAOG,MAAM;IACf;EACF;EAEA,IAAIL,qBAAqB,CAAC,CAAC,IAAI,CAACP,iBAAiB,CAACE,QAAQ,CAACW,QAAQ,CAACJ,IAAI,CAAC,EAAE;IACzET,iBAAiB,CAACE,QAAQ,CAACS,IAAI,CAACF,IAAI,CAAC;EACvC;EACA,OAAO,IAAI;AACb;AAEA,OAAO,SAASK,GAAGA,CAAiBL,IAAY,EAAM;EACpD,OAAOD,aAAa,CAAIC,IAAI,CAAC;AAC/B;AAEA,OAAO,SAASM,YAAYA,CAAiBN,IAAY,EAAK;EAC5D,MAAMG,MAAM,GAAGJ,aAAa,CAAIC,IAAI,CAAC;EACrC,IAAIO,OAAO,GACT,2CAA2CP,IAAI,wBAAwB,GACvE,uEAAuE;EAEzE,IAAIF,qBAAqB,CAAC,CAAC,EAAE;IAC3BS,OAAO,IAAI,mBAAmB,IAAIb,YAAY,CAAC,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC,GAAG,IAAI;IAC3Ea,OAAO,IACL,uBAAuB,IACtBX,2BAA2B,CAAC,CAAC,GAAG,MAAM,GAAG,OAAO,CAAC,GAClD,IAAI;IACNW,OAAO,IAAI,kBAAkB,GAAGC,IAAI,CAACC,SAAS,CAAClB,iBAAiB,CAAC;EACnE;EAEAN,SAAS,CAACkB,MAAM,IAAI,IAAI,EAAEI,OAAO,CAAC;EAClC,OAAOJ,MAAM;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}