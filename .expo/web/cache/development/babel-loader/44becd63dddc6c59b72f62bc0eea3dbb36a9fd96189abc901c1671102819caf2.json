{"ast":null,"code":"const invariant = require('invariant');\nconst React = require('react');\nconst reactDevToolsHook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\ninvariant(Boolean(reactDevToolsHook), 'getInspectorDataForViewAtPoint should not be used if React DevTools hook is not injected');\nconst renderers = Array.from(window.__REACT_DEVTOOLS_GLOBAL_HOOK__.renderers.values());\nconst appendRenderer = ({\n  renderer\n}) => renderers.push(renderer);\nreactDevToolsHook.on('renderer', appendRenderer);\nfunction validateRenderers() {\n  invariant(renderers.length > 0, 'Expected to find at least one React Native renderer on DevTools hook.');\n}\nmodule.exports = function getInspectorDataForViewAtPoint(inspectedView, locationX, locationY, callback) {\n  validateRenderers();\n  let shouldBreak = false;\n  for (const renderer of renderers) {\n    if (shouldBreak) {\n      break;\n    }\n    if (renderer?.rendererConfig?.getInspectorDataForViewAtPoint != null) {\n      renderer.rendererConfig.getInspectorDataForViewAtPoint(inspectedView, locationX, locationY, viewData => {\n        if (viewData && viewData.hierarchy.length > 0) {\n          shouldBreak = callback(viewData);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["invariant","require","React","reactDevToolsHook","window","__REACT_DEVTOOLS_GLOBAL_HOOK__","Boolean","renderers","Array","from","values","appendRenderer","renderer","push","on","validateRenderers","length","module","exports","getInspectorDataForViewAtPoint","inspectedView","locationX","locationY","callback","shouldBreak","rendererConfig","viewData","hierarchy"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/getInspectorDataForViewAtPoint.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {\n  HostComponent,\n  TouchedViewDataAtPoint,\n} from '../Renderer/shims/ReactNativeTypes';\n\nconst invariant = require('invariant');\nconst React = require('react');\n\nexport type HostRef = React.ElementRef<HostComponent<mixed>>;\nexport type ReactRenderer = {\n  rendererConfig: {\n    getInspectorDataForViewAtPoint: (\n      inspectedView: ?HostRef,\n      locationX: number,\n      locationY: number,\n      callback: Function,\n    ) => void,\n    ...\n  },\n};\ntype AttachedRendererEventPayload = {id: number, renderer: ReactRenderer};\n\nconst reactDevToolsHook = window.__REACT_DEVTOOLS_GLOBAL_HOOK__;\ninvariant(\n  Boolean(reactDevToolsHook),\n  'getInspectorDataForViewAtPoint should not be used if React DevTools hook is not injected',\n);\n\nconst renderers: Array<ReactRenderer> = Array.from(\n  window.__REACT_DEVTOOLS_GLOBAL_HOOK__.renderers.values(),\n);\n\nconst appendRenderer = ({renderer}: AttachedRendererEventPayload) =>\n  renderers.push(renderer);\nreactDevToolsHook.on('renderer', appendRenderer);\n\nfunction validateRenderers(): void {\n  invariant(\n    renderers.length > 0,\n    'Expected to find at least one React Native renderer on DevTools hook.',\n  );\n}\n\nmodule.exports = function getInspectorDataForViewAtPoint(\n  inspectedView: ?HostRef,\n  locationX: number,\n  locationY: number,\n  callback: (viewData: TouchedViewDataAtPoint) => boolean,\n) {\n  validateRenderers();\n\n  let shouldBreak = false;\n  // Check all renderers for inspector data.\n  for (const renderer of renderers) {\n    if (shouldBreak) {\n      break;\n    }\n\n    if (renderer?.rendererConfig?.getInspectorDataForViewAtPoint != null) {\n      renderer.rendererConfig.getInspectorDataForViewAtPoint(\n        inspectedView,\n        locationX,\n        locationY,\n        viewData => {\n          // Only return with non-empty view data since only one renderer will have this view.\n          if (viewData && viewData.hierarchy.length > 0) {\n            shouldBreak = callback(viewData);\n          }\n        },\n      );\n    }\n  }\n};\n"],"mappings":"AAeA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAW,CAAC;AACtC,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC;AAgB9B,MAAME,iBAAiB,GAAGC,MAAM,CAACC,8BAA8B;AAC/DL,SAAS,CACPM,OAAO,CAACH,iBAAiB,CAAC,EAC1B,0FACF,CAAC;AAED,MAAMI,SAA+B,GAAGC,KAAK,CAACC,IAAI,CAChDL,MAAM,CAACC,8BAA8B,CAACE,SAAS,CAACG,MAAM,CAAC,CACzD,CAAC;AAED,MAAMC,cAAc,GAAGA,CAAC;EAACC;AAAsC,CAAC,KAC9DL,SAAS,CAACM,IAAI,CAACD,QAAQ,CAAC;AAC1BT,iBAAiB,CAACW,EAAE,CAAC,UAAU,EAAEH,cAAc,CAAC;AAEhD,SAASI,iBAAiBA,CAAA,EAAS;EACjCf,SAAS,CACPO,SAAS,CAACS,MAAM,GAAG,CAAC,EACpB,uEACF,CAAC;AACH;AAEAC,MAAM,CAACC,OAAO,GAAG,SAASC,8BAA8BA,CACtDC,aAAuB,EACvBC,SAAiB,EACjBC,SAAiB,EACjBC,QAAuD,EACvD;EACAR,iBAAiB,CAAC,CAAC;EAEnB,IAAIS,WAAW,GAAG,KAAK;EAEvB,KAAK,MAAMZ,QAAQ,IAAIL,SAAS,EAAE;IAChC,IAAIiB,WAAW,EAAE;MACf;IACF;IAEA,IAAIZ,QAAQ,EAAEa,cAAc,EAAEN,8BAA8B,IAAI,IAAI,EAAE;MACpEP,QAAQ,CAACa,cAAc,CAACN,8BAA8B,CACpDC,aAAa,EACbC,SAAS,EACTC,SAAS,EACTI,QAAQ,IAAI;QAEV,IAAIA,QAAQ,IAAIA,QAAQ,CAACC,SAAS,CAACX,MAAM,GAAG,CAAC,EAAE;UAC7CQ,WAAW,GAAGD,QAAQ,CAACG,QAAQ,CAAC;QAClC;MACF,CACF,CAAC;IACH;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}