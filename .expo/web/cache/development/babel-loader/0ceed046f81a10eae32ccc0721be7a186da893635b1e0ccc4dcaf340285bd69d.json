{"ast":null,"code":"'use strict';\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/PerformanceOverlay.js\";\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Text = require('../Text/Text');\nconst PerformanceLogger = require('../Utilities/GlobalPerformanceLogger');\nconst React = require('react');\nclass PerformanceOverlay extends React.Component {\n  render() {\n    const perfLogs = PerformanceLogger.getTimespans();\n    const items = [];\n    for (const key in perfLogs) {\n      if (perfLogs[key]?.totalTime) {\n        const unit = key === 'BundleSize' ? 'b' : 'ms';\n        items.push(_reactJsxDevRuntime.jsxDEV(View, {\n          style: styles.row,\n          children: [_reactJsxDevRuntime.jsxDEV(Text, {\n            style: [styles.text, styles.label],\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), _reactJsxDevRuntime.jsxDEV(Text, {\n            style: [styles.text, styles.totalTime],\n            children: perfLogs[key].totalTime + unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return _reactJsxDevRuntime.jsxDEV(View, {\n      style: styles.container,\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n}\nconst styles = StyleSheet.create({\n  container: {\n    height: 100,\n    paddingTop: 10\n  },\n  label: {\n    flex: 1\n  },\n  row: {\n    flexDirection: 'row',\n    paddingHorizontal: 10\n  },\n  text: {\n    color: 'white',\n    fontSize: 12\n  },\n  totalTime: {\n    paddingRight: 100\n  }\n});\nmodule.exports = PerformanceOverlay;","map":{"version":3,"names":["_reactJsxDevRuntime","require","_jsxFileName","View","StyleSheet","Text","PerformanceLogger","React","PerformanceOverlay","Component","render","perfLogs","getTimespans","items","key","totalTime","unit","push","jsxDEV","style","styles","row","children","text","label","fileName","lineNumber","columnNumber","container","create","height","paddingTop","flex","flexDirection","paddingHorizontal","color","fontSize","paddingRight","module","exports"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/Inspector/PerformanceOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Text = require('../Text/Text');\nconst PerformanceLogger = require('../Utilities/GlobalPerformanceLogger');\nconst React = require('react');\n\nclass PerformanceOverlay extends React.Component<{...}> {\n  render(): React.Node {\n    const perfLogs = PerformanceLogger.getTimespans();\n    const items = [];\n\n    for (const key in perfLogs) {\n      if (perfLogs[key]?.totalTime) {\n        const unit = key === 'BundleSize' ? 'b' : 'ms';\n        items.push(\n          <View style={styles.row} key={key}>\n            <Text style={[styles.text, styles.label]}>{key}</Text>\n            <Text style={[styles.text, styles.totalTime]}>\n              {perfLogs[key].totalTime + unit}\n            </Text>\n          </View>,\n        );\n      }\n    }\n\n    return <View style={styles.container}>{items}</View>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 100,\n    paddingTop: 10,\n  },\n  label: {\n    flex: 1,\n  },\n  row: {\n    flexDirection: 'row',\n    paddingHorizontal: 10,\n  },\n  text: {\n    color: 'white',\n    fontSize: 12,\n  },\n  totalTime: {\n    paddingRight: 100,\n  },\n});\n\nmodule.exports = PerformanceOverlay;\n"],"mappings":"AAUA,YAAY;;AAAC,IAAAA,mBAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA;AAEb,MAAMC,IAAI,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAC/C,MAAMG,UAAU,GAAGH,OAAO,CAAC,0BAA0B,CAAC;AACtD,MAAMI,IAAI,GAAGJ,OAAO,CAAC,cAAc,CAAC;AACpC,MAAMK,iBAAiB,GAAGL,OAAO,CAAC,sCAAsC,CAAC;AACzE,MAAMM,KAAK,GAAGN,OAAO,CAAC,OAAO,CAAC;AAE9B,MAAMO,kBAAkB,SAASD,KAAK,CAACE,SAAS,CAAQ;EACtDC,MAAMA,CAAA,EAAe;IACnB,MAAMC,QAAQ,GAAGL,iBAAiB,CAACM,YAAY,CAAC,CAAC;IACjD,MAAMC,KAAK,GAAG,EAAE;IAEhB,KAAK,MAAMC,GAAG,IAAIH,QAAQ,EAAE;MAC1B,IAAIA,QAAQ,CAACG,GAAG,CAAC,EAAEC,SAAS,EAAE;QAC5B,MAAMC,IAAI,GAAGF,GAAG,KAAK,YAAY,GAAG,GAAG,GAAG,IAAI;QAC9CD,KAAK,CAACI,IAAI,CACRjB,mBAAA,CAAAkB,MAAA,CAACf,IAAI;UAACgB,KAAK,EAAEC,MAAM,CAACC,GAAI;UAAAC,QAAA,GACtBtB,mBAAA,CAAAkB,MAAA,CAACb,IAAI;YAACc,KAAK,EAAE,CAACC,MAAM,CAACG,IAAI,EAAEH,MAAM,CAACI,KAAK,CAAE;YAAAF,QAAA,EAAER;UAAG;YAAAW,QAAA,EAAAvB,YAAA;YAAAwB,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,EACtD3B,mBAAA,CAAAkB,MAAA,CAACb,IAAI;YAACc,KAAK,EAAE,CAACC,MAAM,CAACG,IAAI,EAAEH,MAAM,CAACL,SAAS,CAAE;YAAAO,QAAA,EAC1CX,QAAQ,CAACG,GAAG,CAAC,CAACC,SAAS,GAAGC;UAAI;YAAAS,QAAA,EAAAvB,YAAA;YAAAwB,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA,GAJqBb,GAAG;UAAAW,QAAA,EAAAvB,YAAA;UAAAwB,UAAA;UAAAC,YAAA;QAAA,OAK3B,CACR,CAAC;MACH;IACF;IAEA,OAAO3B,mBAAA,CAAAkB,MAAA,CAACf,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACQ,SAAU;MAAAN,QAAA,EAAET;IAAK;MAAAY,QAAA,EAAAvB,YAAA;MAAAwB,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EACtD;AACF;AAEA,MAAMP,MAAM,GAAGhB,UAAU,CAACyB,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,MAAM,EAAE,GAAG;IACXC,UAAU,EAAE;EACd,CAAC;EACDP,KAAK,EAAE;IACLQ,IAAI,EAAE;EACR,CAAC;EACDX,GAAG,EAAE;IACHY,aAAa,EAAE,KAAK;IACpBC,iBAAiB,EAAE;EACrB,CAAC;EACDX,IAAI,EAAE;IACJY,KAAK,EAAE,OAAO;IACdC,QAAQ,EAAE;EACZ,CAAC;EACDrB,SAAS,EAAE;IACTsB,YAAY,EAAE;EAChB;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG/B,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}