{"ast":null,"code":"import NativeI18nManager from './NativeI18nManager';\nconst i18nConstants = getI18nManagerConstants();\nfunction getI18nManagerConstants() {\n  if (NativeI18nManager) {\n    const {\n      isRTL,\n      doLeftAndRightSwapInRTL,\n      localeIdentifier\n    } = NativeI18nManager.getConstants();\n    return {\n      isRTL,\n      doLeftAndRightSwapInRTL,\n      localeIdentifier\n    };\n  }\n  return {\n    isRTL: false,\n    doLeftAndRightSwapInRTL: true\n  };\n}\nmodule.exports = {\n  getConstants: () => {\n    return i18nConstants;\n  },\n  allowRTL: shouldAllow => {\n    if (!NativeI18nManager) {\n      return;\n    }\n    NativeI18nManager.allowRTL(shouldAllow);\n  },\n  forceRTL: shouldForce => {\n    if (!NativeI18nManager) {\n      return;\n    }\n    NativeI18nManager.forceRTL(shouldForce);\n  },\n  swapLeftAndRightInRTL: flipStyles => {\n    if (!NativeI18nManager) {\n      return;\n    }\n    NativeI18nManager.swapLeftAndRightInRTL(flipStyles);\n  },\n  isRTL: i18nConstants.isRTL,\n  doLeftAndRightSwapInRTL: i18nConstants.doLeftAndRightSwapInRTL\n};","map":{"version":3,"names":["NativeI18nManager","i18nConstants","getI18nManagerConstants","isRTL","doLeftAndRightSwapInRTL","localeIdentifier","getConstants","module","exports","allowRTL","shouldAllow","forceRTL","shouldForce","swapLeftAndRightInRTL","flipStyles"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/ReactNative/I18nManager.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {I18nManagerConstants} from './NativeI18nManager';\n\nimport NativeI18nManager from './NativeI18nManager';\n\nconst i18nConstants: I18nManagerConstants = getI18nManagerConstants();\n\nfunction getI18nManagerConstants(): I18nManagerConstants {\n  if (NativeI18nManager) {\n    const {isRTL, doLeftAndRightSwapInRTL, localeIdentifier} =\n      NativeI18nManager.getConstants();\n    return {isRTL, doLeftAndRightSwapInRTL, localeIdentifier};\n  }\n\n  return {\n    isRTL: false,\n    doLeftAndRightSwapInRTL: true,\n  };\n}\n\nmodule.exports = {\n  getConstants: (): I18nManagerConstants => {\n    return i18nConstants;\n  },\n\n  allowRTL: (shouldAllow: boolean) => {\n    if (!NativeI18nManager) {\n      return;\n    }\n\n    NativeI18nManager.allowRTL(shouldAllow);\n  },\n\n  forceRTL: (shouldForce: boolean) => {\n    if (!NativeI18nManager) {\n      return;\n    }\n\n    NativeI18nManager.forceRTL(shouldForce);\n  },\n\n  swapLeftAndRightInRTL: (flipStyles: boolean) => {\n    if (!NativeI18nManager) {\n      return;\n    }\n\n    NativeI18nManager.swapLeftAndRightInRTL(flipStyles);\n  },\n\n  isRTL: i18nConstants.isRTL,\n  doLeftAndRightSwapInRTL: i18nConstants.doLeftAndRightSwapInRTL,\n};\n"],"mappings":"AAYA,OAAOA,iBAAiB,MAAM,qBAAqB;AAEnD,MAAMC,aAAmC,GAAGC,uBAAuB,CAAC,CAAC;AAErE,SAASA,uBAAuBA,CAAA,EAAyB;EACvD,IAAIF,iBAAiB,EAAE;IACrB,MAAM;MAACG,KAAK;MAAEC,uBAAuB;MAAEC;IAAgB,CAAC,GACtDL,iBAAiB,CAACM,YAAY,CAAC,CAAC;IAClC,OAAO;MAACH,KAAK;MAAEC,uBAAuB;MAAEC;IAAgB,CAAC;EAC3D;EAEA,OAAO;IACLF,KAAK,EAAE,KAAK;IACZC,uBAAuB,EAAE;EAC3B,CAAC;AACH;AAEAG,MAAM,CAACC,OAAO,GAAG;EACfF,YAAY,EAAEA,CAAA,KAA4B;IACxC,OAAOL,aAAa;EACtB,CAAC;EAEDQ,QAAQ,EAAGC,WAAoB,IAAK;IAClC,IAAI,CAACV,iBAAiB,EAAE;MACtB;IACF;IAEAA,iBAAiB,CAACS,QAAQ,CAACC,WAAW,CAAC;EACzC,CAAC;EAEDC,QAAQ,EAAGC,WAAoB,IAAK;IAClC,IAAI,CAACZ,iBAAiB,EAAE;MACtB;IACF;IAEAA,iBAAiB,CAACW,QAAQ,CAACC,WAAW,CAAC;EACzC,CAAC;EAEDC,qBAAqB,EAAGC,UAAmB,IAAK;IAC9C,IAAI,CAACd,iBAAiB,EAAE;MACtB;IACF;IAEAA,iBAAiB,CAACa,qBAAqB,CAACC,UAAU,CAAC;EACrD,CAAC;EAEDX,KAAK,EAAEF,aAAa,CAACE,KAAK;EAC1BC,uBAAuB,EAAEH,aAAa,CAACG;AACzC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}