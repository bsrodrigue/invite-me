{"ast":null,"code":"import React from 'react';\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nexport function shouldSetPanResponder(_event, gesture) {\n  const {\n    dx,\n    dy\n  } = gesture;\n  const offset = 2;\n  return Math.abs(dx) > offset || Math.abs(dy) > offset;\n}\nexport function shouldDismissView(newAnimatedValue, gesture) {\n  const dismissThreshold = 0.65;\n  const {\n    vy,\n    dy\n  } = gesture;\n  return newAnimatedValue <= dismissThreshold || Math.abs(vy) >= dismissThreshold && dy < 0;\n}\nexport function usePanResponder({\n  animatedValue,\n  computeNewAnimatedValueForGesture,\n  onDismiss,\n  onRestore,\n  disable\n}) {\n  const onMove = React.useCallback((_event, gesture) => {\n    if (disable) {\n      return;\n    }\n    const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n    animatedValue.current?.setValue(newAnimatedValue);\n  }, [animatedValue, computeNewAnimatedValueForGesture, disable]);\n  const onRelease = React.useCallback((_event, gesture) => {\n    if (disable) {\n      return;\n    }\n    const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n    if (shouldDismissView(newAnimatedValue, gesture)) {\n      onDismiss();\n    } else {\n      onRestore();\n    }\n  }, [computeNewAnimatedValueForGesture, onDismiss, onRestore, disable]);\n  const panResponder = React.useMemo(() => PanResponder.create({\n    onMoveShouldSetPanResponder: shouldSetPanResponder,\n    onMoveShouldSetPanResponderCapture: shouldSetPanResponder,\n    onPanResponderMove: onMove,\n    onPanResponderRelease: onRelease\n  }), [onMove, onRelease]);\n  return {\n    panResponder,\n    onMove,\n    onRelease\n  };\n}","map":{"version":3,"names":["React","PanResponder","shouldSetPanResponder","_event","gesture","dx","dy","offset","Math","abs","shouldDismissView","newAnimatedValue","dismissThreshold","vy","usePanResponder","animatedValue","computeNewAnimatedValueForGesture","onDismiss","onRestore","disable","onMove","useCallback","current","setValue","onRelease","panResponder","useMemo","create","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native-toast-message/lib/src/hooks/usePanResponder.js"],"sourcesContent":["import React from 'react';\nimport { PanResponder } from 'react-native';\nexport function shouldSetPanResponder(_event, gesture) {\n    const { dx, dy } = gesture;\n    // Fixes onPress handler\n    // https://github.com/calintamas/react-native-toast-message/issues/113\n    const offset = 2;\n    return Math.abs(dx) > offset || Math.abs(dy) > offset;\n}\nexport function shouldDismissView(newAnimatedValue, gesture) {\n    const dismissThreshold = 0.65;\n    const { vy, dy } = gesture;\n    return (newAnimatedValue <= dismissThreshold ||\n        (Math.abs(vy) >= dismissThreshold && dy < 0));\n}\nexport function usePanResponder({ animatedValue, computeNewAnimatedValueForGesture, onDismiss, onRestore, disable }) {\n    const onMove = React.useCallback((_event, gesture) => {\n        if (disable) {\n            return;\n        }\n        const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n        animatedValue.current?.setValue(newAnimatedValue);\n    }, [animatedValue, computeNewAnimatedValueForGesture, disable]);\n    const onRelease = React.useCallback((_event, gesture) => {\n        if (disable) {\n            return;\n        }\n        const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n        if (shouldDismissView(newAnimatedValue, gesture)) {\n            onDismiss();\n        }\n        else {\n            onRestore();\n        }\n    }, [computeNewAnimatedValueForGesture, onDismiss, onRestore, disable]);\n    const panResponder = React.useMemo(() => PanResponder.create({\n        onMoveShouldSetPanResponder: shouldSetPanResponder,\n        onMoveShouldSetPanResponderCapture: shouldSetPanResponder,\n        onPanResponderMove: onMove,\n        onPanResponderRelease: onRelease\n    }), [onMove, onRelease]);\n    return {\n        panResponder,\n        onMove,\n        onRelease\n    };\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,YAAA;AAE1B,OAAO,SAASC,qBAAqBA,CAACC,MAAM,EAAEC,OAAO,EAAE;EACnD,MAAM;IAAEC,EAAE;IAAEC;EAAG,CAAC,GAAGF,OAAO;EAG1B,MAAMG,MAAM,GAAG,CAAC;EAChB,OAAOC,IAAI,CAACC,GAAG,CAACJ,EAAE,CAAC,GAAGE,MAAM,IAAIC,IAAI,CAACC,GAAG,CAACH,EAAE,CAAC,GAAGC,MAAM;AACzD;AACA,OAAO,SAASG,iBAAiBA,CAACC,gBAAgB,EAAEP,OAAO,EAAE;EACzD,MAAMQ,gBAAgB,GAAG,IAAI;EAC7B,MAAM;IAAEC,EAAE;IAAEP;EAAG,CAAC,GAAGF,OAAO;EAC1B,OAAQO,gBAAgB,IAAIC,gBAAgB,IACvCJ,IAAI,CAACC,GAAG,CAACI,EAAE,CAAC,IAAID,gBAAgB,IAAIN,EAAE,GAAG,CAAE;AACpD;AACA,OAAO,SAASQ,eAAeA,CAAC;EAAEC,aAAa;EAAEC,iCAAiC;EAAEC,SAAS;EAAEC,SAAS;EAAEC;AAAQ,CAAC,EAAE;EACjH,MAAMC,MAAM,GAAGpB,KAAK,CAACqB,WAAW,CAAC,CAAClB,MAAM,EAAEC,OAAO,KAAK;IAClD,IAAIe,OAAO,EAAE;MACT;IACJ;IACA,MAAMR,gBAAgB,GAAGK,iCAAiC,CAACZ,OAAO,CAAC;IACnEW,aAAa,CAACO,OAAO,EAAEC,QAAQ,CAACZ,gBAAgB,CAAC;EACrD,CAAC,EAAE,CAACI,aAAa,EAAEC,iCAAiC,EAAEG,OAAO,CAAC,CAAC;EAC/D,MAAMK,SAAS,GAAGxB,KAAK,CAACqB,WAAW,CAAC,CAAClB,MAAM,EAAEC,OAAO,KAAK;IACrD,IAAIe,OAAO,EAAE;MACT;IACJ;IACA,MAAMR,gBAAgB,GAAGK,iCAAiC,CAACZ,OAAO,CAAC;IACnE,IAAIM,iBAAiB,CAACC,gBAAgB,EAAEP,OAAO,CAAC,EAAE;MAC9Ca,SAAS,CAAC,CAAC;IACf,CAAC,MACI;MACDC,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,CAACF,iCAAiC,EAAEC,SAAS,EAAEC,SAAS,EAAEC,OAAO,CAAC,CAAC;EACtE,MAAMM,YAAY,GAAGzB,KAAK,CAAC0B,OAAO,CAAC,MAAMzB,YAAY,CAAC0B,MAAM,CAAC;IACzDC,2BAA2B,EAAE1B,qBAAqB;IAClD2B,kCAAkC,EAAE3B,qBAAqB;IACzD4B,kBAAkB,EAAEV,MAAM;IAC1BW,qBAAqB,EAAEP;EAC3B,CAAC,CAAC,EAAE,CAACJ,MAAM,EAAEI,SAAS,CAAC,CAAC;EACxB,OAAO;IACHC,YAAY;IACZL,MAAM;IACNI;EACJ,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}