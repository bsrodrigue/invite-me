{"ast":null,"code":"var _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/src/screens/ChangePasswordScreen/ChangePasswordScreen.tsx\";\nimport { Formik } from \"formik\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Yup from \"yup\";\nimport useCall from \"../../api/useCall\";\nimport { AuthForm, Button, TextInput } from \"../../components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst changePasswordSchema = Yup.object().shape({\n  oldPassword: Yup.string().required(\"Champ requis\"),\n  password: Yup.string().required(\"Champ requis\"),\n  password2: Yup.string().required(\"Champ requis\").oneOf([Yup.ref('password')], 'Les mots de passe ne correspondent pas')\n});\nexport default function ChangePasswordScreen({\n  navigation\n}) {\n  const {\n    call,\n    isLoading\n  } = useCall(() => {}, {\n    onSuccess() {\n      navigation.pop();\n    }\n  });\n  return _jsxDEV(AuthForm, {\n    children: _jsxDEV(Formik, {\n      validationSchema: changePasswordSchema,\n      initialValues: {\n        oldPassword: \"\",\n        password: \"\",\n        password2: \"\"\n      },\n      onSubmit: async ({\n        oldPassword,\n        password\n      }) => {\n        await call({\n          oldPassword,\n          password\n        });\n      },\n      children: ({\n        values,\n        errors,\n        handleChange,\n        handleSubmit\n      }) => _jsxDEV(View, {\n        style: {\n          flex: 1,\n          justifyContent: \"space-between\"\n        },\n        children: [_jsxDEV(View, {\n          children: [_jsxDEV(TextInput, {\n            value: values.oldPassword,\n            onChangeText: handleChange(\"oldPassword\"),\n            errorMessage: errors.oldPassword,\n            label: \"Ancien mot de passe\",\n            secureTextEntry: true,\n            placeholder: \"Veuillez saisir votre ancien mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            value: values.password,\n            onChangeText: handleChange(\"password\"),\n            errorMessage: errors.password,\n            label: \"Nouveau mot de passe\",\n            secureTextEntry: true,\n            placeholder: \"Veuillez saisir votre nouveau mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), _jsxDEV(TextInput, {\n            value: values.password2,\n            onChangeText: handleChange(\"password2\"),\n            errorMessage: errors.password2,\n            label: \"Confirmation du mot de passe\",\n            secureTextEntry: true,\n            placeholder: \"Veuillez saisir \\xE0 nouveau votre nouveau mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), _jsxDEV(Button, {\n          onPress: handleSubmit,\n          loading: isLoading,\n          children: \"Confirmer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["Formik","View","Yup","useCall","AuthForm","Button","TextInput","jsxDEV","_jsxDEV","changePasswordSchema","object","shape","oldPassword","string","required","password","password2","oneOf","ref","ChangePasswordScreen","navigation","call","isLoading","onSuccess","pop","children","validationSchema","initialValues","onSubmit","values","errors","handleChange","handleSubmit","style","flex","justifyContent","value","onChangeText","errorMessage","label","secureTextEntry","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onPress","loading"],"sources":["/home/rodo/workspace/passion/apps/muh-money/src/screens/ChangePasswordScreen/ChangePasswordScreen.tsx"],"sourcesContent":["import { NativeStackScreenProps } from \"@react-navigation/native-stack\";\nimport { Formik } from \"formik\";\nimport { View } from \"react-native\";\nimport * as Yup from \"yup\";\nimport useCall from \"../../api/useCall\";\nimport { AuthForm, Button, TextInput } from \"../../components\";\nimport { RootStackParamList } from \"../../types\";\n\nconst changePasswordSchema = Yup.object().shape({\n  oldPassword: Yup.string().required(\"Champ requis\"),\n  password: Yup.string().required(\"Champ requis\"),\n  password2: Yup.string().required(\"Champ requis\")\n    .oneOf([Yup.ref('password')], 'Les mots de passe ne correspondent pas'),\n});\n\ntype ChangePasswordScreenProps = NativeStackScreenProps<RootStackParamList, 'ChangePassword'>;\n\nexport default function ChangePasswordScreen({ navigation }: ChangePasswordScreenProps) {\n  const { call, isLoading } = useCall(() => { }, {\n    onSuccess() {\n      navigation.pop();\n    },\n  })\n\n  return (\n    <AuthForm\n    >\n      <Formik\n        validationSchema={changePasswordSchema}\n        initialValues={{\n          oldPassword: \"\",\n          password: \"\",\n          password2: \"\",\n        }}\n        onSubmit={\n          async ({ oldPassword, password }) => {\n            await call({ oldPassword, password });\n          }}>\n        {({ values, errors, handleChange, handleSubmit }) => (\n          <View style={{ flex: 1, justifyContent: \"space-between\" }}>\n            <View>\n              <TextInput value={values.oldPassword}\n                onChangeText={handleChange(\"oldPassword\")}\n                errorMessage={errors.oldPassword}\n                label=\"Ancien mot de passe\"\n                secureTextEntry\n                placeholder=\"Veuillez saisir votre ancien mot de passe\" />\n              <TextInput value={values.password}\n                onChangeText={handleChange(\"password\")}\n                errorMessage={errors.password}\n                label=\"Nouveau mot de passe\"\n                secureTextEntry\n                placeholder=\"Veuillez saisir votre nouveau mot de passe\" />\n              <TextInput value={values.password2}\n                onChangeText={handleChange(\"password2\")}\n                errorMessage={errors.password2}\n                label=\"Confirmation du mot de passe\"\n                secureTextEntry\n                placeholder=\"Veuillez saisir Ã  nouveau votre nouveau mot de passe\" />\n            </View>\n\n            <Button onPress={handleSubmit} loading={isLoading}>Confirmer</Button>\n          </View>\n        )}\n      </Formik>\n    </AuthForm>\n  )\n}\n"],"mappings":";AACA,SAASA,MAAM,QAAQ,QAAQ;AAAC,OAAAC,IAAA;AAEhC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/D,MAAMC,oBAAoB,GAAGP,GAAG,CAACQ,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EAC9CC,WAAW,EAAEV,GAAG,CAACW,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,cAAc,CAAC;EAClDC,QAAQ,EAAEb,GAAG,CAACW,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,cAAc,CAAC;EAC/CE,SAAS,EAAEd,GAAG,CAACW,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,cAAc,CAAC,CAC7CG,KAAK,CAAC,CAACf,GAAG,CAACgB,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,wCAAwC;AAC1E,CAAC,CAAC;AAIF,eAAe,SAASC,oBAAoBA,CAAC;EAAEC;AAAsC,CAAC,EAAE;EACtF,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGnB,OAAO,CAAC,MAAM,CAAE,CAAC,EAAE;IAC7CoB,SAASA,CAAA,EAAG;MACVH,UAAU,CAACI,GAAG,CAAC,CAAC;IAClB;EACF,CAAC,CAAC;EAEF,OACEhB,OAAA,CAACJ,QAAQ;IAAAqB,QAAA,EAEPjB,OAAA,CAACR,MAAM;MACL0B,gBAAgB,EAAEjB,oBAAqB;MACvCkB,aAAa,EAAE;QACbf,WAAW,EAAE,EAAE;QACfG,QAAQ,EAAE,EAAE;QACZC,SAAS,EAAE;MACb,CAAE;MACFY,QAAQ,EACN,MAAAA,CAAO;QAAEhB,WAAW;QAAEG;MAAS,CAAC,KAAK;QACnC,MAAMM,IAAI,CAAC;UAAET,WAAW;UAAEG;QAAS,CAAC,CAAC;MACvC,CAAE;MAAAU,QAAA,EACHA,CAAC;QAAEI,MAAM;QAAEC,MAAM;QAAEC,YAAY;QAAEC;MAAa,CAAC,KAC9CxB,OAAA,CAACP,IAAI;QAACgC,KAAK,EAAE;UAAEC,IAAI,EAAE,CAAC;UAAEC,cAAc,EAAE;QAAgB,CAAE;QAAAV,QAAA,GACxDjB,OAAA,CAACP,IAAI;UAAAwB,QAAA,GACHjB,OAAA,CAACF,SAAS;YAAC8B,KAAK,EAAEP,MAAM,CAACjB,WAAY;YACnCyB,YAAY,EAAEN,YAAY,CAAC,aAAa,CAAE;YAC1CO,YAAY,EAAER,MAAM,CAAClB,WAAY;YACjC2B,KAAK,EAAC,qBAAqB;YAC3BC,eAAe;YACfC,WAAW,EAAC;UAA2C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC5DrC,OAAA,CAACF,SAAS;YAAC8B,KAAK,EAAEP,MAAM,CAACd,QAAS;YAChCsB,YAAY,EAAEN,YAAY,CAAC,UAAU,CAAE;YACvCO,YAAY,EAAER,MAAM,CAACf,QAAS;YAC9BwB,KAAK,EAAC,sBAAsB;YAC5BC,eAAe;YACfC,WAAW,EAAC;UAA4C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAC7DrC,OAAA,CAACF,SAAS;YAAC8B,KAAK,EAAEP,MAAM,CAACb,SAAU;YACjCqB,YAAY,EAAEN,YAAY,CAAC,WAAW,CAAE;YACxCO,YAAY,EAAER,MAAM,CAACd,SAAU;YAC/BuB,KAAK,EAAC,8BAA8B;YACpCC,eAAe;YACfC,WAAW,EAAC;UAAsD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnE,CAAC,EAEPrC,OAAA,CAACH,MAAM;UAACyC,OAAO,EAAEd,YAAa;UAACe,OAAO,EAAEzB,SAAU;UAAAG,QAAA,EAAC;QAAS;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}