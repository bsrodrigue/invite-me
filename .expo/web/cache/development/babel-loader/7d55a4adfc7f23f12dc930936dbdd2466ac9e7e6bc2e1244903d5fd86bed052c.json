{"ast":null,"code":"import { beginEvent, endEvent } from '../Performance/Systrace';\nimport EventEmitter from '../vendor/emitter/EventEmitter';\nclass RCTDeviceEventEmitter extends EventEmitter {\n  emit(eventType, ...args) {\n    beginEvent(() => `RCTDeviceEventEmitter.emit#${eventType}`);\n    super.emit(eventType, ...args);\n    endEvent();\n  }\n}\nconst instance = new RCTDeviceEventEmitter();\nObject.defineProperty(global, '__rctDeviceEventEmitter', {\n  configurable: true,\n  value: instance\n});\nexport default instance;","map":{"version":3,"names":["beginEvent","endEvent","EventEmitter","RCTDeviceEventEmitter","emit","eventType","args","instance","Object","defineProperty","global","configurable","value"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/Libraries/EventEmitter/RCTDeviceEventEmitter.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\nimport type {IEventEmitter} from '../vendor/emitter/EventEmitter';\n\nimport {beginEvent, endEvent} from '../Performance/Systrace';\nimport EventEmitter from '../vendor/emitter/EventEmitter';\n\n// FIXME: use typed events\ntype RCTDeviceEventDefinitions = $FlowFixMe;\n\n/**\n * Global EventEmitter used by the native platform to emit events to JavaScript.\n * Events are identified by globally unique event names.\n *\n * NativeModules that emit events should instead subclass `NativeEventEmitter`.\n */\nclass RCTDeviceEventEmitter extends EventEmitter<RCTDeviceEventDefinitions> {\n  // Add systrace to RCTDeviceEventEmitter.emit method for debugging\n  emit<TEvent: $Keys<RCTDeviceEventDefinitions>>(\n    eventType: TEvent,\n    ...args: RCTDeviceEventDefinitions[TEvent]\n  ): void {\n    beginEvent(() => `RCTDeviceEventEmitter.emit#${eventType}`);\n    super.emit(eventType, ...args);\n    endEvent();\n  }\n}\nconst instance = new RCTDeviceEventEmitter();\n\nObject.defineProperty(global, '__rctDeviceEventEmitter', {\n  configurable: true,\n  value: instance,\n});\n\nexport default (instance: IEventEmitter<RCTDeviceEventDefinitions>);\n"],"mappings":"AAYA,SAAQA,UAAU,EAAEC,QAAQ,QAAO,yBAAyB;AAC5D,OAAOC,YAAY,MAAM,gCAAgC;AAWzD,MAAMC,qBAAqB,SAASD,YAAY,CAA4B;EAE1EE,IAAIA,CACFC,SAAiB,EACjB,GAAGC,IAAuC,EACpC;IACNN,UAAU,CAAC,MAAM,8BAA8BK,SAAS,EAAE,CAAC;IAC3D,KAAK,CAACD,IAAI,CAACC,SAAS,EAAE,GAAGC,IAAI,CAAC;IAC9BL,QAAQ,CAAC,CAAC;EACZ;AACF;AACA,MAAMM,QAAQ,GAAG,IAAIJ,qBAAqB,CAAC,CAAC;AAE5CK,MAAM,CAACC,cAAc,CAACC,MAAM,EAAE,yBAAyB,EAAE;EACvDC,YAAY,EAAE,IAAI;EAClBC,KAAK,EAAEL;AACT,CAAC,CAAC;AAEF,eAAgBA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}