{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/rodo/workspace/passion/apps/muh-money/node_modules/@react-native/virtualized-lists/Lists/VirtualizedListContext.js\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VirtualizedListContext = React.createContext(null);\nif (__DEV__) {\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\n}\nexport function VirtualizedListContextResetter({\n  children\n}) {\n  return _jsxDEV(VirtualizedListContext.Provider, {\n    value: null,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\nexport function VirtualizedListContextProvider({\n  children,\n  value\n}) {\n  const context = useMemo(() => ({\n    cellKey: null,\n    getScrollMetrics: value.getScrollMetrics,\n    horizontal: value.horizontal,\n    getOutermostParentListRef: value.getOutermostParentListRef,\n    registerAsNestedChild: value.registerAsNestedChild,\n    unregisterAsNestedChild: value.unregisterAsNestedChild\n  }), [value.getScrollMetrics, value.horizontal, value.getOutermostParentListRef, value.registerAsNestedChild, value.unregisterAsNestedChild]);\n  return _jsxDEV(VirtualizedListContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\nexport function VirtualizedListCellContextProvider({\n  cellKey,\n  children\n}) {\n  const currContext = useContext(VirtualizedListContext);\n  const context = useMemo(() => currContext == null ? null : _objectSpread(_objectSpread({}, currContext), {}, {\n    cellKey\n  }), [currContext, cellKey]);\n  return _jsxDEV(VirtualizedListContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["React","useContext","useMemo","jsxDEV","_jsxDEV","VirtualizedListContext","createContext","__DEV__","displayName","VirtualizedListContextResetter","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","VirtualizedListContextProvider","context","cellKey","getScrollMetrics","horizontal","getOutermostParentListRef","registerAsNestedChild","unregisterAsNestedChild","VirtualizedListCellContextProvider","currContext","_objectSpread"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/@react-native/virtualized-lists/Lists/VirtualizedListContext.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport typeof VirtualizedList from './VirtualizedList';\n\nimport * as React from 'react';\nimport {useContext, useMemo} from 'react';\n\ntype Context = $ReadOnly<{\n  cellKey: ?string,\n  getScrollMetrics: () => {\n    contentLength: number,\n    dOffset: number,\n    dt: number,\n    offset: number,\n    timestamp: number,\n    velocity: number,\n    visibleLength: number,\n    zoomScale: number,\n  },\n  horizontal: ?boolean,\n  getOutermostParentListRef: () => React.ElementRef<VirtualizedList>,\n  registerAsNestedChild: ({\n    cellKey: string,\n    ref: React.ElementRef<VirtualizedList>,\n  }) => void,\n  unregisterAsNestedChild: ({ref: React.ElementRef<VirtualizedList>}) => void,\n}>;\n\nexport const VirtualizedListContext: React.Context<?Context> =\n  React.createContext(null);\nif (__DEV__) {\n  VirtualizedListContext.displayName = 'VirtualizedListContext';\n}\n\n/**\n * Resets the context. Intended for use by portal-like components (e.g. Modal).\n */\nexport function VirtualizedListContextResetter({\n  children,\n}: {\n  children: React.Node,\n}): React.Node {\n  return (\n    <VirtualizedListContext.Provider value={null}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the context with memoization. Intended to be used by `VirtualizedList`.\n */\nexport function VirtualizedListContextProvider({\n  children,\n  value,\n}: {\n  children: React.Node,\n  value: Context,\n}): React.Node {\n  // Avoid setting a newly created context object if the values are identical.\n  const context = useMemo(\n    () => ({\n      cellKey: null,\n      getScrollMetrics: value.getScrollMetrics,\n      horizontal: value.horizontal,\n      getOutermostParentListRef: value.getOutermostParentListRef,\n      registerAsNestedChild: value.registerAsNestedChild,\n      unregisterAsNestedChild: value.unregisterAsNestedChild,\n    }),\n    [\n      value.getScrollMetrics,\n      value.horizontal,\n      value.getOutermostParentListRef,\n      value.registerAsNestedChild,\n      value.unregisterAsNestedChild,\n    ],\n  );\n  return (\n    <VirtualizedListContext.Provider value={context}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n\n/**\n * Sets the `cellKey`. Intended to be used by `VirtualizedList` for each cell.\n */\nexport function VirtualizedListCellContextProvider({\n  cellKey,\n  children,\n}: {\n  cellKey: string,\n  children: React.Node,\n}): React.Node {\n  // Avoid setting a newly created context object if the values are identical.\n  const currContext = useContext(VirtualizedListContext);\n  const context = useMemo(\n    () => (currContext == null ? null : {...currContext, cellKey}),\n    [currContext, cellKey],\n  );\n  return (\n    <VirtualizedListContext.Provider value={context}>\n      {children}\n    </VirtualizedListContext.Provider>\n  );\n}\n"],"mappings":";;;;AAYA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAAQC,UAAU,EAAEC,OAAO,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAuB1C,OAAO,MAAMC,sBAA+C,GAC1DL,KAAK,CAACM,aAAa,CAAC,IAAI,CAAC;AAC3B,IAAIC,OAAO,EAAE;EACXF,sBAAsB,CAACG,WAAW,GAAG,wBAAwB;AAC/D;AAKA,OAAO,SAASC,8BAA8BA,CAAC;EAC7CC;AAGF,CAAC,EAAc;EACb,OACEN,OAAA,CAACC,sBAAsB,CAACM,QAAQ;IAACC,KAAK,EAAE,IAAK;IAAAF,QAAA,EAC1CA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACsB,CAAC;AAEtC;AAKA,OAAO,SAASC,8BAA8BA,CAAC;EAC7CP,QAAQ;EACRE;AAIF,CAAC,EAAc;EAEb,MAAMM,OAAO,GAAGhB,OAAO,CACrB,OAAO;IACLiB,OAAO,EAAE,IAAI;IACbC,gBAAgB,EAAER,KAAK,CAACQ,gBAAgB;IACxCC,UAAU,EAAET,KAAK,CAACS,UAAU;IAC5BC,yBAAyB,EAAEV,KAAK,CAACU,yBAAyB;IAC1DC,qBAAqB,EAAEX,KAAK,CAACW,qBAAqB;IAClDC,uBAAuB,EAAEZ,KAAK,CAACY;EACjC,CAAC,CAAC,EACF,CACEZ,KAAK,CAACQ,gBAAgB,EACtBR,KAAK,CAACS,UAAU,EAChBT,KAAK,CAACU,yBAAyB,EAC/BV,KAAK,CAACW,qBAAqB,EAC3BX,KAAK,CAACY,uBAAuB,CAEjC,CAAC;EACD,OACEpB,OAAA,CAACC,sBAAsB,CAACM,QAAQ;IAACC,KAAK,EAAEM,OAAQ;IAAAR,QAAA,EAC7CA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACsB,CAAC;AAEtC;AAKA,OAAO,SAASS,kCAAkCA,CAAC;EACjDN,OAAO;EACPT;AAIF,CAAC,EAAc;EAEb,MAAMgB,WAAW,GAAGzB,UAAU,CAACI,sBAAsB,CAAC;EACtD,MAAMa,OAAO,GAAGhB,OAAO,CACrB,MAAOwB,WAAW,IAAI,IAAI,GAAG,IAAI,GAAAC,aAAA,CAAAA,aAAA,KAAOD,WAAW;IAAEP;EAAO,EAAE,EAC9D,CAACO,WAAW,EAAEP,OAAO,CACvB,CAAC;EACD,OACEf,OAAA,CAACC,sBAAsB,CAACM,QAAQ;IAACC,KAAK,EAAEM,OAAQ;IAAAR,QAAA,EAC7CA;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACsB,CAAC;AAEtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}