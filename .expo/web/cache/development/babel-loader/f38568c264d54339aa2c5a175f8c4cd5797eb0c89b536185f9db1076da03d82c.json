{"ast":null,"code":"export default class ReactNativeStartupTiming {\n  constructor(startUpTiming) {\n    if (startUpTiming != null) {\n      this._startTime = startUpTiming.startTime;\n      this._endTime = startUpTiming.endTime;\n      this._initializeRuntimeStart = startUpTiming.initializeRuntimeStart;\n      this._initializeRuntimeEnd = startUpTiming.initializeRuntimeEnd;\n      this._executeJavaScriptBundleEntryPointStart = startUpTiming.executeJavaScriptBundleEntryPointStart;\n      this._executeJavaScriptBundleEntryPointEnd = startUpTiming.executeJavaScriptBundleEntryPointEnd;\n    }\n  }\n  get startTime() {\n    return this._startTime;\n  }\n  get endTime() {\n    return this._endTime;\n  }\n  get initializeRuntimeStart() {\n    return this._initializeRuntimeStart;\n  }\n  get initializeRuntimeEnd() {\n    return this._initializeRuntimeEnd;\n  }\n  get executeJavaScriptBundleEntryPointStart() {\n    return this._executeJavaScriptBundleEntryPointStart;\n  }\n  get executeJavaScriptBundleEntryPointEnd() {\n    return this._executeJavaScriptBundleEntryPointEnd;\n  }\n}","map":{"version":3,"names":["ReactNativeStartupTiming","constructor","startUpTiming","_startTime","startTime","_endTime","endTime","_initializeRuntimeStart","initializeRuntimeStart","_initializeRuntimeEnd","initializeRuntimeEnd","_executeJavaScriptBundleEntryPointStart","executeJavaScriptBundleEntryPointStart","_executeJavaScriptBundleEntryPointEnd","executeJavaScriptBundleEntryPointEnd"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/src/private/webapis/performance/ReactNativeStartupTiming.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n * @oncall react_native\n */\n\n// flowlint unsafe-getters-setters:off\n\ntype ReactNativeStartupTimingLike = {\n  startTime: ?number,\n  endTime: ?number,\n  initializeRuntimeStart: ?number,\n  initializeRuntimeEnd: ?number,\n  executeJavaScriptBundleEntryPointStart: ?number,\n  executeJavaScriptBundleEntryPointEnd: ?number,\n};\n\n// Read-only object with RN startup timing information.\n// This is returned by the performance.reactNativeStartup API.\nexport default class ReactNativeStartupTiming {\n  // All time information here are in ms. The values may be null if not provided.\n  // We do NOT match web spect here for two reasons:\n  // 1. The `ReactNativeStartupTiming` is non-standard API\n  // 2. The timing information is relative to the time origin, which means `0` has valid meaning\n  _startTime: ?number;\n  _endTime: ?number;\n  _initializeRuntimeStart: ?number;\n  _initializeRuntimeEnd: ?number;\n  _executeJavaScriptBundleEntryPointStart: ?number;\n  _executeJavaScriptBundleEntryPointEnd: ?number;\n\n  constructor(startUpTiming: ?ReactNativeStartupTimingLike) {\n    if (startUpTiming != null) {\n      this._startTime = startUpTiming.startTime;\n      this._endTime = startUpTiming.endTime;\n      this._initializeRuntimeStart = startUpTiming.initializeRuntimeStart;\n      this._initializeRuntimeEnd = startUpTiming.initializeRuntimeEnd;\n      this._executeJavaScriptBundleEntryPointStart =\n        startUpTiming.executeJavaScriptBundleEntryPointStart;\n      this._executeJavaScriptBundleEntryPointEnd =\n        startUpTiming.executeJavaScriptBundleEntryPointEnd;\n    }\n  }\n\n  /**\n   * Start time of the RN app startup process. This is provided by the platform by implementing the `ReactMarker.setAppStartTime` API in the native platform code.\n   */\n  get startTime(): ?number {\n    return this._startTime;\n  }\n\n  /**\n   * End time of the RN app startup process. This is equal to `executeJavaScriptBundleEntryPointEnd`.\n   */\n  get endTime(): ?number {\n    return this._endTime;\n  }\n\n  /**\n   * Start time when RN runtime get initialized. This is when RN infra first kicks in app startup process.\n   */\n  get initializeRuntimeStart(): ?number {\n    return this._initializeRuntimeStart;\n  }\n\n  /**\n   * End time when RN runtime get initialized. This is the last marker before ends of the app startup process.\n   */\n  get initializeRuntimeEnd(): ?number {\n    return this._initializeRuntimeEnd;\n  }\n\n  /**\n   * Start time of JS bundle being executed. This indicates the RN JS bundle is loaded and start to be evaluated.\n   */\n  get executeJavaScriptBundleEntryPointStart(): ?number {\n    return this._executeJavaScriptBundleEntryPointStart;\n  }\n\n  /**\n   * End time of JS bundle being executed. This indicates all the synchronous entry point jobs are finished.\n   */\n  get executeJavaScriptBundleEntryPointEnd(): ?number {\n    return this._executeJavaScriptBundleEntryPointEnd;\n  }\n}\n"],"mappings":"AAwBA,eAAe,MAAMA,wBAAwB,CAAC;EAY5CC,WAAWA,CAACC,aAA4C,EAAE;IACxD,IAAIA,aAAa,IAAI,IAAI,EAAE;MACzB,IAAI,CAACC,UAAU,GAAGD,aAAa,CAACE,SAAS;MACzC,IAAI,CAACC,QAAQ,GAAGH,aAAa,CAACI,OAAO;MACrC,IAAI,CAACC,uBAAuB,GAAGL,aAAa,CAACM,sBAAsB;MACnE,IAAI,CAACC,qBAAqB,GAAGP,aAAa,CAACQ,oBAAoB;MAC/D,IAAI,CAACC,uCAAuC,GAC1CT,aAAa,CAACU,sCAAsC;MACtD,IAAI,CAACC,qCAAqC,GACxCX,aAAa,CAACY,oCAAoC;IACtD;EACF;EAKA,IAAIV,SAASA,CAAA,EAAY;IACvB,OAAO,IAAI,CAACD,UAAU;EACxB;EAKA,IAAIG,OAAOA,CAAA,EAAY;IACrB,OAAO,IAAI,CAACD,QAAQ;EACtB;EAKA,IAAIG,sBAAsBA,CAAA,EAAY;IACpC,OAAO,IAAI,CAACD,uBAAuB;EACrC;EAKA,IAAIG,oBAAoBA,CAAA,EAAY;IAClC,OAAO,IAAI,CAACD,qBAAqB;EACnC;EAKA,IAAIG,sCAAsCA,CAAA,EAAY;IACpD,OAAO,IAAI,CAACD,uCAAuC;EACrD;EAKA,IAAIG,oCAAoCA,CAAA,EAAY;IAClD,OAAO,IAAI,CAACD,qCAAqC;EACnD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}