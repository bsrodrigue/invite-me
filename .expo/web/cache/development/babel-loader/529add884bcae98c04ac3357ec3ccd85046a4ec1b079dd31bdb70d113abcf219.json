{"ast":null,"code":"import { getChildNodes } from '../ReadOnlyNode';\nlet ReadOnlyElementClass;\nexport function getElementSibling(node, direction) {\n  const parent = node.parentNode;\n  if (parent == null) {\n    return null;\n  }\n  const childNodes = getChildNodes(parent);\n  const startPosition = childNodes.indexOf(node);\n  if (startPosition === -1) {\n    return null;\n  }\n  const increment = direction === 'next' ? 1 : -1;\n  let position = startPosition + increment;\n  if (ReadOnlyElementClass == null) {\n    ReadOnlyElementClass = require('../ReadOnlyElement').default;\n  }\n  while (childNodes[position] != null && !(childNodes[position] instanceof ReadOnlyElementClass)) {\n    position = position + increment;\n  }\n  return childNodes[position] ?? null;\n}","map":{"version":3,"names":["getChildNodes","ReadOnlyElementClass","getElementSibling","node","direction","parent","parentNode","childNodes","startPosition","indexOf","increment","position","require","default"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/react-native/src/private/webapis/dom/nodes/utilities/Traversal.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type ReadOnlyElement from '../ReadOnlyElement';\nimport type ReadOnlyNode from '../ReadOnlyNode';\n\nimport {getChildNodes} from '../ReadOnlyNode';\n\n// We initialize this lazily to avoid a require cycle\n// (`ReadOnlyElement` also depends on `Traversal`).\nlet ReadOnlyElementClass: Class<ReadOnlyElement>;\n\nexport function getElementSibling(\n  node: ReadOnlyNode,\n  direction: 'next' | 'previous',\n): ReadOnlyElement | null {\n  const parent = node.parentNode;\n  if (parent == null) {\n    // This node is the root or it's disconnected.\n    return null;\n  }\n\n  const childNodes = getChildNodes(parent);\n\n  const startPosition = childNodes.indexOf(node);\n  if (startPosition === -1) {\n    return null;\n  }\n\n  const increment = direction === 'next' ? 1 : -1;\n\n  let position = startPosition + increment;\n\n  if (ReadOnlyElementClass == null) {\n    // We initialize this lazily to avoid a require cycle.\n    ReadOnlyElementClass = require('../ReadOnlyElement').default;\n  }\n\n  while (\n    childNodes[position] != null &&\n    !(childNodes[position] instanceof ReadOnlyElementClass)\n  ) {\n    position = position + increment;\n  }\n\n  return childNodes[position] ?? null;\n}\n"],"mappings":"AAaA,SAAQA,aAAa,QAAO,iBAAiB;AAI7C,IAAIC,oBAA4C;AAEhD,OAAO,SAASC,iBAAiBA,CAC/BC,IAAkB,EAClBC,SAA8B,EACN;EACxB,MAAMC,MAAM,GAAGF,IAAI,CAACG,UAAU;EAC9B,IAAID,MAAM,IAAI,IAAI,EAAE;IAElB,OAAO,IAAI;EACb;EAEA,MAAME,UAAU,GAAGP,aAAa,CAACK,MAAM,CAAC;EAExC,MAAMG,aAAa,GAAGD,UAAU,CAACE,OAAO,CAACN,IAAI,CAAC;EAC9C,IAAIK,aAAa,KAAK,CAAC,CAAC,EAAE;IACxB,OAAO,IAAI;EACb;EAEA,MAAME,SAAS,GAAGN,SAAS,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;EAE/C,IAAIO,QAAQ,GAAGH,aAAa,GAAGE,SAAS;EAExC,IAAIT,oBAAoB,IAAI,IAAI,EAAE;IAEhCA,oBAAoB,GAAGW,OAAO,CAAC,oBAAoB,CAAC,CAACC,OAAO;EAC9D;EAEA,OACEN,UAAU,CAACI,QAAQ,CAAC,IAAI,IAAI,IAC5B,EAAEJ,UAAU,CAACI,QAAQ,CAAC,YAAYV,oBAAoB,CAAC,EACvD;IACAU,QAAQ,GAAGA,QAAQ,GAAGD,SAAS;EACjC;EAEA,OAAOH,UAAU,CAACI,QAAQ,CAAC,IAAI,IAAI;AACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}