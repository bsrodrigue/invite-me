{"ast":null,"code":"import { PermissionStatus, createPermissionHook, UnavailabilityError, CodedError } from 'expo-modules-core';\nimport ExponentImagePicker from './ExponentImagePicker';\nfunction validateOptions(options) {\n  const {\n    aspect,\n    quality,\n    videoMaxDuration\n  } = options;\n  if (aspect != null) {\n    const [x, y] = aspect;\n    if (x <= 0 || y <= 0) {\n      throw new CodedError('ERR_INVALID_ARGUMENT', `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`);\n    }\n  }\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError('ERR_INVALID_ARGUMENT', `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`);\n  }\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError('ERR_INVALID_ARGUMENT', `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`);\n  }\n  return options;\n}\nexport async function getCameraPermissionsAsync() {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\nexport async function getMediaLibraryPermissionsAsync(writeOnly = false) {\n  return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n}\nexport async function requestCameraPermissionsAsync() {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\nexport async function requestMediaLibraryPermissionsAsync(writeOnly = false) {\n  const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\nexport const useMediaLibraryPermissions = createPermissionHook({\n  getMethod: options => getMediaLibraryPermissionsAsync(options?.writeOnly),\n  requestMethod: options => requestMediaLibraryPermissionsAsync(options?.writeOnly)\n});\nexport const useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync\n});\nexport async function getPendingResultAsync() {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\nexport async function launchCameraAsync(options = {}) {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  return await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n}\nexport async function launchImageLibraryAsync(options) {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  if (options?.allowsEditing && options.allowsMultipleSelection) {\n    console.warn('[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' + \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" + 'to fix this warning.');\n  }\n  return await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n}\nexport * from './ImagePicker.types';\nexport { PermissionStatus };","map":{"version":3,"names":["PermissionStatus","createPermissionHook","UnavailabilityError","CodedError","ExponentImagePicker","validateOptions","options","aspect","quality","videoMaxDuration","x","y","getCameraPermissionsAsync","getMediaLibraryPermissionsAsync","writeOnly","requestCameraPermissionsAsync","requestMediaLibraryPermissionsAsync","imagePickerMethod","useMediaLibraryPermissions","getMethod","requestMethod","useCameraPermissions","getPendingResultAsync","launchCameraAsync","launchImageLibraryAsync","allowsEditing","allowsMultipleSelection","console","warn"],"sources":["/home/rodo/workspace/passion/apps/muh-money/node_modules/expo-image-picker/src/ImagePicker.ts"],"sourcesContent":["import {\n  PermissionStatus,\n  PermissionExpiration,\n  PermissionHookOptions,\n  PermissionResponse,\n  createPermissionHook,\n  UnavailabilityError,\n  CodedError,\n} from 'expo-modules-core';\n\nimport ExponentImagePicker from './ExponentImagePicker';\nimport {\n  CameraPermissionResponse,\n  MediaLibraryPermissionResponse,\n  ImagePickerResult,\n  ImagePickerErrorResult,\n  ImagePickerOptions,\n} from './ImagePicker.types';\n\nfunction validateOptions(options: ImagePickerOptions) {\n  const { aspect, quality, videoMaxDuration } = options;\n\n  if (aspect != null) {\n    const [x, y] = aspect;\n\n    if (x <= 0 || y <= 0) {\n      throw new CodedError(\n        'ERR_INVALID_ARGUMENT',\n        `Invalid aspect ratio values ${x}:${y}. Provide positive numbers.`\n      );\n    }\n  }\n\n  if (quality && (quality < 0 || quality > 1)) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'quality' value ${quality}. Provide a value between 0 and 1.`\n    );\n  }\n\n  if (videoMaxDuration && videoMaxDuration < 0) {\n    throw new CodedError(\n      'ERR_INVALID_ARGUMENT',\n      `Invalid 'videoMaxDuration' value ${videoMaxDuration}. Provide a non-negative number.`\n    );\n  }\n\n  return options;\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing camera.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerapermissionresponse).\n */\nexport async function getCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.getCameraPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Checks user's permissions for accessing photos.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function getMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  return ExponentImagePicker.getMediaLibraryPermissionsAsync(writeOnly);\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing camera. This does nothing on web because the\n * browser camera is not used.\n * @return A promise that fulfills with an object of type [CameraPermissionResponse](#camerarollpermissionresponse).\n */\nexport async function requestCameraPermissionsAsync(): Promise<CameraPermissionResponse> {\n  return ExponentImagePicker.requestCameraPermissionsAsync();\n}\n\n// @needsAudit\n/**\n * Asks the user to grant permissions for accessing user's photo. This method does nothing on web.\n * @param writeOnly Whether to request write or read and write permissions. Defaults to `false`\n * @return A promise that fulfills with an object of type [MediaLibraryPermissionResponse](#medialibrarypermissionresponse).\n */\nexport async function requestMediaLibraryPermissionsAsync(\n  writeOnly: boolean = false\n): Promise<MediaLibraryPermissionResponse> {\n  const imagePickerMethod = ExponentImagePicker.requestMediaLibraryPermissionsAsync;\n  return imagePickerMethod(writeOnly);\n}\n\n// @needsAudit\n/**\n * Check or request permissions to access the media library.\n * This uses both `requestMediaLibraryPermissionsAsync` and `getMediaLibraryPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useMediaLibraryPermissions();\n * ```\n */\nexport const useMediaLibraryPermissions = createPermissionHook<\n  MediaLibraryPermissionResponse,\n  { writeOnly?: boolean }\n>({\n  // TODO(cedric): permission requesters should have an options param or a different requester\n  getMethod: (options) => getMediaLibraryPermissionsAsync(options?.writeOnly),\n  requestMethod: (options) => requestMediaLibraryPermissionsAsync(options?.writeOnly),\n});\n\n// @needsAudit\n/**\n * Check or request permissions to access the camera.\n * This uses both `requestCameraPermissionsAsync` and `getCameraPermissionsAsync` to interact with the permissions.\n *\n * @example\n * ```ts\n * const [status, requestPermission] = ImagePicker.useCameraPermissions();\n * ```\n */\nexport const useCameraPermissions = createPermissionHook({\n  getMethod: getCameraPermissionsAsync,\n  requestMethod: requestCameraPermissionsAsync,\n});\n\n// @needsAudit\n/**\n * Android system sometimes kills the `MainActivity` after the `ImagePicker` finishes. When this\n * happens, we lost the data selected from the `ImagePicker`. However, you can retrieve the lost\n * data by calling `getPendingResultAsync`. You can test this functionality by turning on\n * `Don't keep activities` in the developer options.\n * @return\n * - **On Android:** a promise that resolves to an array of objects of exactly same type as in\n * `ImagePicker.launchImageLibraryAsync` or `ImagePicker.launchCameraAsync` if the `ImagePicker`\n * finished successfully. Otherwise, to the array of [`ImagePickerErrorResult`](#imagepickerimagepickererrorresult).\n * - **On other platforms:** an empty array.\n */\nexport async function getPendingResultAsync(): Promise<\n  (ImagePickerResult | ImagePickerErrorResult)[]\n> {\n  if (ExponentImagePicker.getPendingResultAsync) {\n    return ExponentImagePicker.getPendingResultAsync();\n  }\n  return [];\n}\n\n// @needsAudit\n/**\n * Display the system UI for taking a photo with the camera. Requires `Permissions.CAMERA`.\n * On Android and iOS 10 `Permissions.CAMERA_ROLL` is also required. On mobile web, this must be\n * called immediately in a user interaction like a button press, otherwise the browser will block\n * the request without a warning.\n * > **Note:** Make sure that you handle `MainActivity` destruction on **Android**. See [ImagePicker.getPendingResultAsync](#imagepickergetpendingresultasync).\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchCameraAsync` in `componentDidMount`, for example, will **not** work as\n * intended. The `cancelled` event will not be returned in the browser due to platform restrictions\n * and inconsistencies across browsers.\n * @param options An `ImagePickerOptions` object.\n * @return A promise that resolves to an object with `canceled` and `assets` fields.\n * When the user canceled the action the `assets` is always `null`, otherwise it's an array of\n * the selected media assets which have a form of [`ImagePickerAsset`](#imagepickerasset).\n */\nexport async function launchCameraAsync(\n  options: ImagePickerOptions = {}\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchCameraAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchCameraAsync');\n  }\n  return await ExponentImagePicker.launchCameraAsync(validateOptions(options));\n}\n\n// @needsAudit\n/**\n * Display the system UI for choosing an image or a video from the phone's library.\n * Requires `Permissions.MEDIA_LIBRARY` on iOS 10 only. On mobile web, this must be     called\n * immediately in a user interaction like a button press, otherwise the browser will block the\n * request without a warning.\n *\n * **Animated GIFs support:** On Android, if the selected image is an animated GIF, the result image will be an\n * animated GIF too if and only if `quality` is explicitly set to `1.0` and `allowsEditing` is set to `false`.\n * Otherwise compression and/or cropper will pick the first frame of the GIF and return it as the\n * result (on Android the result will be a PNG). On iOS, both quality and cropping are supported.\n *\n * > **Notes for Web:** The system UI can only be shown after user activation (e.g. a `Button` press).\n * Therefore, calling `launchImageLibraryAsync` in `componentDidMount`, for example, will **not**\n * work as intended. The `cancelled` event will not be returned in the browser due to platform\n * restrictions and inconsistencies across browsers.\n * @param options An object extended by [`ImagePickerOptions`](#imagepickeroptions).\n * @return A promise that resolves to an object with `canceled` and `assets` fields.\n * When the user canceled the action the `assets` is always `null`, otherwise it's an array of\n * the selected media assets which have a form of [`ImagePickerAsset`](#imagepickerasset).\n */\nexport async function launchImageLibraryAsync(\n  options?: ImagePickerOptions\n): Promise<ImagePickerResult> {\n  if (!ExponentImagePicker.launchImageLibraryAsync) {\n    throw new UnavailabilityError('ImagePicker', 'launchImageLibraryAsync');\n  }\n  if (options?.allowsEditing && options.allowsMultipleSelection) {\n    console.warn(\n      '[expo-image-picker] `allowsEditing` is not supported when `allowsMultipleSelection` is enabled and will be ignored.' +\n        \"Disable either 'allowsEditing' or 'allowsMultipleSelection' in 'launchImageLibraryAsync' \" +\n        'to fix this warning.'\n    );\n  }\n  return await ExponentImagePicker.launchImageLibraryAsync(options ?? {});\n}\n\nexport * from './ImagePicker.types';\n\nexport type { PermissionExpiration, PermissionHookOptions, PermissionResponse };\nexport { PermissionStatus };\n"],"mappings":"AAAA,SACEA,gBAAgB,EAIhBC,oBAAoB,EACpBC,mBAAmB,EACnBC,UAAU,QACL,mBAAmB;AAE1B,OAAOC,mBAAmB,MAAM,uBAAuB;AASvD,SAASC,eAAeA,CAACC,OAA2B;EAClD,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAgB,CAAE,GAAGH,OAAO;EAErD,IAAIC,MAAM,IAAI,IAAI,EAAE;IAClB,MAAM,CAACG,CAAC,EAAEC,CAAC,CAAC,GAAGJ,MAAM;IAErB,IAAIG,CAAC,IAAI,CAAC,IAAIC,CAAC,IAAI,CAAC,EAAE;MACpB,MAAM,IAAIR,UAAU,CAClB,sBAAsB,EACtB,+BAA+BO,CAAC,IAAIC,CAAC,6BAA6B,CACnE;;;EAIL,IAAIH,OAAO,KAAKA,OAAO,GAAG,CAAC,IAAIA,OAAO,GAAG,CAAC,CAAC,EAAE;IAC3C,MAAM,IAAIL,UAAU,CAClB,sBAAsB,EACtB,2BAA2BK,OAAO,oCAAoC,CACvE;;EAGH,IAAIC,gBAAgB,IAAIA,gBAAgB,GAAG,CAAC,EAAE;IAC5C,MAAM,IAAIN,UAAU,CAClB,sBAAsB,EACtB,oCAAoCM,gBAAgB,kCAAkC,CACvF;;EAGH,OAAOH,OAAO;AAChB;AAOA,OAAO,eAAeM,yBAAyBA,CAAA;EAC7C,OAAOR,mBAAmB,CAACQ,yBAAyB,EAAE;AACxD;AAQA,OAAO,eAAeC,+BAA+BA,CACnDC,SAAA,GAAqB,KAAK;EAE1B,OAAOV,mBAAmB,CAACS,+BAA+B,CAACC,SAAS,CAAC;AACvE;AAQA,OAAO,eAAeC,6BAA6BA,CAAA;EACjD,OAAOX,mBAAmB,CAACW,6BAA6B,EAAE;AAC5D;AAQA,OAAO,eAAeC,mCAAmCA,CACvDF,SAAA,GAAqB,KAAK;EAE1B,MAAMG,iBAAiB,GAAGb,mBAAmB,CAACY,mCAAmC;EACjF,OAAOC,iBAAiB,CAACH,SAAS,CAAC;AACrC;AAYA,OAAO,MAAMI,0BAA0B,GAAGjB,oBAAoB,CAG5D;EAEAkB,SAAS,EAAGb,OAAO,IAAKO,+BAA+B,CAACP,OAAO,EAAEQ,SAAS,CAAC;EAC3EM,aAAa,EAAGd,OAAO,IAAKU,mCAAmC,CAACV,OAAO,EAAEQ,SAAS;CACnF,CAAC;AAYF,OAAO,MAAMO,oBAAoB,GAAGpB,oBAAoB,CAAC;EACvDkB,SAAS,EAAEP,yBAAyB;EACpCQ,aAAa,EAAEL;CAChB,CAAC;AAcF,OAAO,eAAeO,qBAAqBA,CAAA;EAGzC,IAAIlB,mBAAmB,CAACkB,qBAAqB,EAAE;IAC7C,OAAOlB,mBAAmB,CAACkB,qBAAqB,EAAE;;EAEpD,OAAO,EAAE;AACX;AAkBA,OAAO,eAAeC,iBAAiBA,CACrCjB,OAAA,GAA8B,EAAE;EAEhC,IAAI,CAACF,mBAAmB,CAACmB,iBAAiB,EAAE;IAC1C,MAAM,IAAIrB,mBAAmB,CAAC,aAAa,EAAE,mBAAmB,CAAC;;EAEnE,OAAO,MAAME,mBAAmB,CAACmB,iBAAiB,CAAClB,eAAe,CAACC,OAAO,CAAC,CAAC;AAC9E;AAuBA,OAAO,eAAekB,uBAAuBA,CAC3ClB,OAA4B;EAE5B,IAAI,CAACF,mBAAmB,CAACoB,uBAAuB,EAAE;IAChD,MAAM,IAAItB,mBAAmB,CAAC,aAAa,EAAE,yBAAyB,CAAC;;EAEzE,IAAII,OAAO,EAAEmB,aAAa,IAAInB,OAAO,CAACoB,uBAAuB,EAAE;IAC7DC,OAAO,CAACC,IAAI,CACV,qHAAqH,GACnH,2FAA2F,GAC3F,sBAAsB,CACzB;;EAEH,OAAO,MAAMxB,mBAAmB,CAACoB,uBAAuB,CAAClB,OAAO,IAAI,EAAE,CAAC;AACzE;AAEA,cAAc,qBAAqB;AAGnC,SAASN,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}